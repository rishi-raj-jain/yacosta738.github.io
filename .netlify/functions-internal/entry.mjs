import * as adapter from '@astrojs/netlify/netlify-functions.js';
import { defineComponent, h, createSSRApp, unref, mergeProps, useSSRContext, ref, computed, onMounted } from 'vue';
import { renderToString as renderToString$1, ssrRenderAttrs, ssrRenderSlot, ssrRenderList, ssrRenderAttr, ssrRenderClass, ssrInterpolate, ssrRenderStyle, ssrIncludeBooleanAttr } from 'vue/server-renderer';
import { escape } from 'html-escaper';
import etag from 'etag';
import { lookup } from 'mrmime';
import sharp from 'sharp';
import fs from 'node:fs/promises';
/* empty css                           */import * as i18next from 'i18next';
import i18next__default, { t, changeLanguage } from 'i18next';
import fsBackend from 'i18next-fs-backend';
import { fileURLToPath } from 'url';
import load$1 from '@proload/core';
import typescript from '@proload/plugin-typescript';
import * as $$module2$e from 'iso-639-1';
import $$module2__default from 'iso-639-1';
import * as localeEmoji from 'locale-emoji';
import localeEmoji__default from 'locale-emoji';
import { optimize } from 'svgo';
/* empty css                                                                 */import { atom } from 'nanostores';
import { useStore } from '@nanostores/vue';
/* empty css                           *//* empty css                                 */import { useBreakpoints, breakpointsTailwind } from '@vueuse/core';
import { marked } from 'marked';
/* empty css                                                      *//* empty css                                       *//* empty css                           *//* empty css                           */import 'mime';
import 'kleur/colors';
import 'string-width';
import 'path-browserify';
import { compile } from 'path-to-regexp';

/**
 * Astro passes `children` as a string of HTML, so we need
 * a wrapper `div` to render that content as VNodes.
 *
 * This is the Vue + JSX equivalent of using `<div v-html="value" />`
 */
const StaticHtml = defineComponent({
	props: {
		value: String,
		name: String,
	},
	setup({ name, value }) {
		if (!value) return () => null;
		return () => h('astro-slot', { name, innerHTML: value });
	},
});

function check$1(Component) {
	return !!Component['ssrRender'];
}

async function renderToStaticMarkup$1(Component, props, slotted) {
	const slots = {};
	for (const [key, value] of Object.entries(slotted)) {
		slots[key] = () => h(StaticHtml, { value, name: key === 'default' ? undefined : key });
	}
	const app = createSSRApp({ render: () => h(Component, props, slots) });
	const html = await renderToString$1(app);
	return { html };
}

const _renderer1 = {
	check: check$1,
	renderToStaticMarkup: renderToStaticMarkup$1,
};

const ASTRO_VERSION = "1.1.1";
function createDeprecatedFetchContentFn() {
  return () => {
    throw new Error("Deprecated: Astro.fetchContent() has been replaced with Astro.glob().");
  };
}
function createAstroGlobFn() {
  const globHandler = (importMetaGlobResult, globValue) => {
    let allEntries = [...Object.values(importMetaGlobResult)];
    if (allEntries.length === 0) {
      throw new Error(`Astro.glob(${JSON.stringify(globValue())}) - no matches found.`);
    }
    return Promise.all(allEntries.map((fn) => fn()));
  };
  return globHandler;
}
function createAstro(filePathname, _site, projectRootStr) {
  const site = _site ? new URL(_site) : void 0;
  const referenceURL = new URL(filePathname, `http://localhost`);
  const projectRoot = new URL(projectRootStr);
  return {
    site,
    generator: `Astro v${ASTRO_VERSION}`,
    fetchContent: createDeprecatedFetchContentFn(),
    glob: createAstroGlobFn(),
    resolve(...segments) {
      let resolved = segments.reduce((u, segment) => new URL(segment, u), referenceURL).pathname;
      if (resolved.startsWith(projectRoot.pathname)) {
        resolved = "/" + resolved.slice(projectRoot.pathname.length);
      }
      return resolved;
    }
  };
}

const escapeHTML = escape;
class HTMLString extends String {
}
const markHTMLString = (value) => {
  if (value instanceof HTMLString) {
    return value;
  }
  if (typeof value === "string") {
    return new HTMLString(value);
  }
  return value;
};

class Metadata {
  constructor(filePathname, opts) {
    this.modules = opts.modules;
    this.hoisted = opts.hoisted;
    this.hydratedComponents = opts.hydratedComponents;
    this.clientOnlyComponents = opts.clientOnlyComponents;
    this.hydrationDirectives = opts.hydrationDirectives;
    this.mockURL = new URL(filePathname, "http://example.com");
    this.metadataCache = /* @__PURE__ */ new Map();
  }
  resolvePath(specifier) {
    if (specifier.startsWith(".")) {
      const resolved = new URL(specifier, this.mockURL).pathname;
      if (resolved.startsWith("/@fs") && resolved.endsWith(".jsx")) {
        return resolved.slice(0, resolved.length - 4);
      }
      return resolved;
    }
    return specifier;
  }
  getPath(Component) {
    const metadata = this.getComponentMetadata(Component);
    return (metadata == null ? void 0 : metadata.componentUrl) || null;
  }
  getExport(Component) {
    const metadata = this.getComponentMetadata(Component);
    return (metadata == null ? void 0 : metadata.componentExport) || null;
  }
  getComponentMetadata(Component) {
    if (this.metadataCache.has(Component)) {
      return this.metadataCache.get(Component);
    }
    const metadata = this.findComponentMetadata(Component);
    this.metadataCache.set(Component, metadata);
    return metadata;
  }
  findComponentMetadata(Component) {
    const isCustomElement = typeof Component === "string";
    for (const { module, specifier } of this.modules) {
      const id = this.resolvePath(specifier);
      for (const [key, value] of Object.entries(module)) {
        if (isCustomElement) {
          if (key === "tagName" && Component === value) {
            return {
              componentExport: key,
              componentUrl: id
            };
          }
        } else if (Component === value) {
          return {
            componentExport: key,
            componentUrl: id
          };
        }
      }
    }
    return null;
  }
}
function createMetadata(filePathname, options) {
  return new Metadata(filePathname, options);
}

const PROP_TYPE = {
  Value: 0,
  JSON: 1,
  RegExp: 2,
  Date: 3,
  Map: 4,
  Set: 5,
  BigInt: 6,
  URL: 7
};
function serializeArray(value) {
  return value.map((v) => convertToSerializedForm(v));
}
function serializeObject(value) {
  return Object.fromEntries(
    Object.entries(value).map(([k, v]) => {
      return [k, convertToSerializedForm(v)];
    })
  );
}
function convertToSerializedForm(value) {
  const tag = Object.prototype.toString.call(value);
  switch (tag) {
    case "[object Date]": {
      return [PROP_TYPE.Date, value.toISOString()];
    }
    case "[object RegExp]": {
      return [PROP_TYPE.RegExp, value.source];
    }
    case "[object Map]": {
      return [PROP_TYPE.Map, JSON.stringify(serializeArray(Array.from(value)))];
    }
    case "[object Set]": {
      return [PROP_TYPE.Set, JSON.stringify(serializeArray(Array.from(value)))];
    }
    case "[object BigInt]": {
      return [PROP_TYPE.BigInt, value.toString()];
    }
    case "[object URL]": {
      return [PROP_TYPE.URL, value.toString()];
    }
    case "[object Array]": {
      return [PROP_TYPE.JSON, JSON.stringify(serializeArray(value))];
    }
    default: {
      if (value !== null && typeof value === "object") {
        return [PROP_TYPE.Value, serializeObject(value)];
      } else {
        return [PROP_TYPE.Value, value];
      }
    }
  }
}
function serializeProps(props) {
  return JSON.stringify(serializeObject(props));
}

function serializeListValue(value) {
  const hash = {};
  push(value);
  return Object.keys(hash).join(" ");
  function push(item) {
    if (item && typeof item.forEach === "function")
      item.forEach(push);
    else if (item === Object(item))
      Object.keys(item).forEach((name) => {
        if (item[name])
          push(name);
      });
    else {
      item = item === false || item == null ? "" : String(item).trim();
      if (item) {
        item.split(/\s+/).forEach((name) => {
          hash[name] = true;
        });
      }
    }
  }
}

const HydrationDirectivesRaw = ["load", "idle", "media", "visible", "only"];
const HydrationDirectives = new Set(HydrationDirectivesRaw);
const HydrationDirectiveProps = new Set(HydrationDirectivesRaw.map((n) => `client:${n}`));
function extractDirectives(inputProps) {
  let extracted = {
    isPage: false,
    hydration: null,
    props: {}
  };
  for (const [key, value] of Object.entries(inputProps)) {
    if (key.startsWith("server:")) {
      if (key === "server:root") {
        extracted.isPage = true;
      }
    }
    if (key.startsWith("client:")) {
      if (!extracted.hydration) {
        extracted.hydration = {
          directive: "",
          value: "",
          componentUrl: "",
          componentExport: { value: "" }
        };
      }
      switch (key) {
        case "client:component-path": {
          extracted.hydration.componentUrl = value;
          break;
        }
        case "client:component-export": {
          extracted.hydration.componentExport.value = value;
          break;
        }
        case "client:component-hydration": {
          break;
        }
        case "client:display-name": {
          break;
        }
        default: {
          extracted.hydration.directive = key.split(":")[1];
          extracted.hydration.value = value;
          if (!HydrationDirectives.has(extracted.hydration.directive)) {
            throw new Error(
              `Error: invalid hydration directive "${key}". Supported hydration methods: ${Array.from(
                HydrationDirectiveProps
              ).join(", ")}`
            );
          }
          if (extracted.hydration.directive === "media" && typeof extracted.hydration.value !== "string") {
            throw new Error(
              'Error: Media query must be provided for "client:media", similar to client:media="(max-width: 600px)"'
            );
          }
          break;
        }
      }
    } else if (key === "class:list") {
      extracted.props[key.slice(0, -5)] = serializeListValue(value);
    } else {
      extracted.props[key] = value;
    }
  }
  return extracted;
}
async function generateHydrateScript(scriptOptions, metadata) {
  const { renderer, result, astroId, props, attrs } = scriptOptions;
  const { hydrate, componentUrl, componentExport } = metadata;
  if (!componentExport.value) {
    throw new Error(
      `Unable to resolve a valid export for "${metadata.displayName}"! Please open an issue at https://astro.build/issues!`
    );
  }
  const island = {
    children: "",
    props: {
      uid: astroId
    }
  };
  if (attrs) {
    for (const [key, value] of Object.entries(attrs)) {
      island.props[key] = value;
    }
  }
  island.props["component-url"] = await result.resolve(componentUrl);
  if (renderer.clientEntrypoint) {
    island.props["component-export"] = componentExport.value;
    island.props["renderer-url"] = await result.resolve(renderer.clientEntrypoint);
    island.props["props"] = escapeHTML(serializeProps(props));
  }
  island.props["ssr"] = "";
  island.props["client"] = hydrate;
  island.props["before-hydration-url"] = await result.resolve("astro:scripts/before-hydration.js");
  island.props["opts"] = escapeHTML(
    JSON.stringify({
      name: metadata.displayName,
      value: metadata.hydrateArgs || ""
    })
  );
  return island;
}

var idle_prebuilt_default = `(self.Astro=self.Astro||{}).idle=t=>{const e=async()=>{await(await t())()};"requestIdleCallback"in window?window.requestIdleCallback(e):setTimeout(e,200)},window.dispatchEvent(new Event("astro:idle"));`;

var load_prebuilt_default = `(self.Astro=self.Astro||{}).load=a=>{(async()=>await(await a())())()},window.dispatchEvent(new Event("astro:load"));`;

var media_prebuilt_default = `(self.Astro=self.Astro||{}).media=(s,a)=>{const t=async()=>{await(await s())()};if(a.value){const e=matchMedia(a.value);e.matches?t():e.addEventListener("change",t,{once:!0})}},window.dispatchEvent(new Event("astro:media"));`;

var only_prebuilt_default = `(self.Astro=self.Astro||{}).only=t=>{(async()=>await(await t())())()},window.dispatchEvent(new Event("astro:only"));`;

var visible_prebuilt_default = `(self.Astro=self.Astro||{}).visible=(s,c,n)=>{const r=async()=>{await(await s())()};let i=new IntersectionObserver(e=>{for(const t of e)if(!!t.isIntersecting){i.disconnect(),r();break}});for(let e=0;e<n.children.length;e++){const t=n.children[e];i.observe(t)}},window.dispatchEvent(new Event("astro:visible"));`;

var astro_island_prebuilt_default = `var l;{const c={0:t=>t,1:t=>JSON.parse(t,o),2:t=>new RegExp(t),3:t=>new Date(t),4:t=>new Map(JSON.parse(t,o)),5:t=>new Set(JSON.parse(t,o)),6:t=>BigInt(t),7:t=>new URL(t)},o=(t,i)=>{if(t===""||!Array.isArray(i))return i;const[e,n]=i;return e in c?c[e](n):void 0};customElements.get("astro-island")||customElements.define("astro-island",(l=class extends HTMLElement{constructor(){super(...arguments);this.hydrate=()=>{if(!this.hydrator||this.parentElement&&this.parentElement.closest("astro-island[ssr]"))return;const i=this.querySelectorAll("astro-slot"),e={},n=this.querySelectorAll("template[data-astro-template]");for(const s of n){const r=s.closest(this.tagName);!r||!r.isSameNode(this)||(e[s.getAttribute("data-astro-template")||"default"]=s.innerHTML,s.remove())}for(const s of i){const r=s.closest(this.tagName);!r||!r.isSameNode(this)||(e[s.getAttribute("name")||"default"]=s.innerHTML)}const a=this.hasAttribute("props")?JSON.parse(this.getAttribute("props"),o):{};this.hydrator(this)(this.Component,a,e,{client:this.getAttribute("client")}),this.removeAttribute("ssr"),window.removeEventListener("astro:hydrate",this.hydrate),window.dispatchEvent(new CustomEvent("astro:hydrate"))}}connectedCallback(){!this.hasAttribute("await-children")||this.firstChild?this.childrenConnectedCallback():new MutationObserver((i,e)=>{e.disconnect(),this.childrenConnectedCallback()}).observe(this,{childList:!0})}async childrenConnectedCallback(){window.addEventListener("astro:hydrate",this.hydrate),await import(this.getAttribute("before-hydration-url")),this.start()}start(){const i=JSON.parse(this.getAttribute("opts")),e=this.getAttribute("client");if(Astro[e]===void 0){window.addEventListener(\`astro:\${e}\`,()=>this.start(),{once:!0});return}Astro[e](async()=>{const n=this.getAttribute("renderer-url"),[a,{default:s}]=await Promise.all([import(this.getAttribute("component-url")),n?import(n):()=>()=>{}]),r=this.getAttribute("component-export")||"default";if(!r.includes("."))this.Component=a[r];else{this.Component=a;for(const d of r.split("."))this.Component=this.Component[d]}return this.hydrator=s,this.hydrate},i,this)}attributeChangedCallback(){this.hydrator&&this.hydrate()}},l.observedAttributes=["props"],l))}`;

function determineIfNeedsHydrationScript(result) {
  if (result._metadata.hasHydrationScript) {
    return false;
  }
  return result._metadata.hasHydrationScript = true;
}
const hydrationScripts = {
  idle: idle_prebuilt_default,
  load: load_prebuilt_default,
  only: only_prebuilt_default,
  media: media_prebuilt_default,
  visible: visible_prebuilt_default
};
function determinesIfNeedsDirectiveScript(result, directive) {
  if (result._metadata.hasDirectives.has(directive)) {
    return false;
  }
  result._metadata.hasDirectives.add(directive);
  return true;
}
function getDirectiveScriptText(directive) {
  if (!(directive in hydrationScripts)) {
    throw new Error(`Unknown directive: ${directive}`);
  }
  const directiveScriptText = hydrationScripts[directive];
  return directiveScriptText;
}
function getPrescripts(type, directive) {
  switch (type) {
    case "both":
      return `<style>astro-island,astro-slot{display:contents}</style><script>${getDirectiveScriptText(directive) + astro_island_prebuilt_default}<\/script>`;
    case "directive":
      return `<script>${getDirectiveScriptText(directive)}<\/script>`;
  }
  return "";
}

const Fragment = Symbol.for("astro:fragment");
const Renderer = Symbol.for("astro:renderer");
function stringifyChunk(result, chunk) {
  switch (chunk.type) {
    case "directive": {
      const { hydration } = chunk;
      let needsHydrationScript = hydration && determineIfNeedsHydrationScript(result);
      let needsDirectiveScript = hydration && determinesIfNeedsDirectiveScript(result, hydration.directive);
      let prescriptType = needsHydrationScript ? "both" : needsDirectiveScript ? "directive" : null;
      if (prescriptType) {
        let prescripts = getPrescripts(prescriptType, hydration.directive);
        return markHTMLString(prescripts);
      } else {
        return "";
      }
    }
    default: {
      return chunk.toString();
    }
  }
}

function validateComponentProps(props, displayName) {
  var _a;
  if (((_a = {"BASE_URL":"/","MODE":"production","DEV":false,"PROD":true}) == null ? void 0 : _a.DEV) && props != null) {
    for (const prop of Object.keys(props)) {
      if (HydrationDirectiveProps.has(prop)) {
        console.warn(
          `You are attempting to render <${displayName} ${prop} />, but ${displayName} is an Astro component. Astro components do not render in the client and should not have a hydration directive. Please use a framework component for client rendering.`
        );
      }
    }
  }
}
class AstroComponent {
  constructor(htmlParts, expressions) {
    this.htmlParts = htmlParts;
    this.expressions = expressions;
  }
  get [Symbol.toStringTag]() {
    return "AstroComponent";
  }
  async *[Symbol.asyncIterator]() {
    const { htmlParts, expressions } = this;
    for (let i = 0; i < htmlParts.length; i++) {
      const html = htmlParts[i];
      const expression = expressions[i];
      yield markHTMLString(html);
      yield* renderChild(expression);
    }
  }
}
function isAstroComponent(obj) {
  return typeof obj === "object" && Object.prototype.toString.call(obj) === "[object AstroComponent]";
}
function isAstroComponentFactory(obj) {
  return obj == null ? false : !!obj.isAstroComponentFactory;
}
async function* renderAstroComponent(component) {
  for await (const value of component) {
    if (value || value === 0) {
      for await (const chunk of renderChild(value)) {
        switch (chunk.type) {
          case "directive": {
            yield chunk;
            break;
          }
          default: {
            yield markHTMLString(chunk);
            break;
          }
        }
      }
    }
  }
}
async function renderToString(result, componentFactory, props, children) {
  const Component = await componentFactory(result, props, children);
  if (!isAstroComponent(Component)) {
    const response = Component;
    throw response;
  }
  let html = "";
  for await (const chunk of renderAstroComponent(Component)) {
    html += stringifyChunk(result, chunk);
  }
  return html;
}
async function renderToIterable(result, componentFactory, displayName, props, children) {
  validateComponentProps(props, displayName);
  const Component = await componentFactory(result, props, children);
  if (!isAstroComponent(Component)) {
    console.warn(
      `Returning a Response is only supported inside of page components. Consider refactoring this logic into something like a function that can be used in the page.`
    );
    const response = Component;
    throw response;
  }
  return renderAstroComponent(Component);
}
async function renderTemplate(htmlParts, ...expressions) {
  return new AstroComponent(htmlParts, expressions);
}

async function* renderChild(child) {
  child = await child;
  if (child instanceof HTMLString) {
    yield child;
  } else if (Array.isArray(child)) {
    for (const value of child) {
      yield markHTMLString(await renderChild(value));
    }
  } else if (typeof child === "function") {
    yield* renderChild(child());
  } else if (typeof child === "string") {
    yield markHTMLString(escapeHTML(child));
  } else if (!child && child !== 0) ; else if (child instanceof AstroComponent || Object.prototype.toString.call(child) === "[object AstroComponent]") {
    yield* renderAstroComponent(child);
  } else if (typeof child === "object" && Symbol.asyncIterator in child) {
    yield* child;
  } else {
    yield child;
  }
}
async function renderSlot(result, slotted, fallback) {
  if (slotted) {
    let iterator = renderChild(slotted);
    let content = "";
    for await (const chunk of iterator) {
      if (chunk.type === "directive") {
        content += stringifyChunk(result, chunk);
      } else {
        content += chunk;
      }
    }
    return markHTMLString(content);
  }
  return fallback;
}

/**
 * shortdash - https://github.com/bibig/node-shorthash
 *
 * @license
 *
 * (The MIT License)
 *
 * Copyright (c) 2013 Bibig <bibig@me.com>
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */
const dictionary = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXY";
const binary = dictionary.length;
function bitwise(str) {
  let hash = 0;
  if (str.length === 0)
    return hash;
  for (let i = 0; i < str.length; i++) {
    const ch = str.charCodeAt(i);
    hash = (hash << 5) - hash + ch;
    hash = hash & hash;
  }
  return hash;
}
function shorthash(text) {
  let num;
  let result = "";
  let integer = bitwise(text);
  const sign = integer < 0 ? "Z" : "";
  integer = Math.abs(integer);
  while (integer >= binary) {
    num = integer % binary;
    integer = Math.floor(integer / binary);
    result = dictionary[num] + result;
  }
  if (integer > 0) {
    result = dictionary[integer] + result;
  }
  return sign + result;
}

const voidElementNames = /^(area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/i;
const htmlBooleanAttributes = /^(allowfullscreen|async|autofocus|autoplay|controls|default|defer|disabled|disablepictureinpicture|disableremoteplayback|formnovalidate|hidden|loop|nomodule|novalidate|open|playsinline|readonly|required|reversed|scoped|seamless|itemscope)$/i;
const htmlEnumAttributes = /^(contenteditable|draggable|spellcheck|value)$/i;
const svgEnumAttributes = /^(autoReverse|externalResourcesRequired|focusable|preserveAlpha)$/i;
const STATIC_DIRECTIVES = /* @__PURE__ */ new Set(["set:html", "set:text"]);
const toIdent = (k) => k.trim().replace(/(?:(?<!^)\b\w|\s+|[^\w]+)/g, (match, index) => {
  if (/[^\w]|\s/.test(match))
    return "";
  return index === 0 ? match : match.toUpperCase();
});
const toAttributeString = (value, shouldEscape = true) => shouldEscape ? String(value).replace(/&/g, "&#38;").replace(/"/g, "&#34;") : value;
const kebab = (k) => k.toLowerCase() === k ? k : k.replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`);
const toStyleString = (obj) => Object.entries(obj).map(([k, v]) => `${kebab(k)}:${v}`).join(";");
function defineScriptVars(vars) {
  let output = "";
  for (const [key, value] of Object.entries(vars)) {
    output += `let ${toIdent(key)} = ${JSON.stringify(value)};
`;
  }
  return markHTMLString(output);
}
function formatList(values) {
  if (values.length === 1) {
    return values[0];
  }
  return `${values.slice(0, -1).join(", ")} or ${values[values.length - 1]}`;
}
function addAttribute(value, key, shouldEscape = true) {
  if (value == null) {
    return "";
  }
  if (value === false) {
    if (htmlEnumAttributes.test(key) || svgEnumAttributes.test(key)) {
      return markHTMLString(` ${key}="false"`);
    }
    return "";
  }
  if (STATIC_DIRECTIVES.has(key)) {
    console.warn(`[astro] The "${key}" directive cannot be applied dynamically at runtime. It will not be rendered as an attribute.

Make sure to use the static attribute syntax (\`${key}={value}\`) instead of the dynamic spread syntax (\`{...{ "${key}": value }}\`).`);
    return "";
  }
  if (key === "class:list") {
    const listValue = toAttributeString(serializeListValue(value));
    if (listValue === "") {
      return "";
    }
    return markHTMLString(` ${key.slice(0, -5)}="${listValue}"`);
  }
  if (key === "style" && !(value instanceof HTMLString) && typeof value === "object") {
    return markHTMLString(` ${key}="${toStyleString(value)}"`);
  }
  if (key === "className") {
    return markHTMLString(` class="${toAttributeString(value, shouldEscape)}"`);
  }
  if (value === true && (key.startsWith("data-") || htmlBooleanAttributes.test(key))) {
    return markHTMLString(` ${key}`);
  } else {
    return markHTMLString(` ${key}="${toAttributeString(value, shouldEscape)}"`);
  }
}
function internalSpreadAttributes(values, shouldEscape = true) {
  let output = "";
  for (const [key, value] of Object.entries(values)) {
    output += addAttribute(value, key, shouldEscape);
  }
  return markHTMLString(output);
}
function renderElement$1(name, { props: _props, children = "" }, shouldEscape = true) {
  const { lang: _, "data-astro-id": astroId, "define:vars": defineVars, ...props } = _props;
  if (defineVars) {
    if (name === "style") {
      delete props["is:global"];
      delete props["is:scoped"];
    }
    if (name === "script") {
      delete props.hoist;
      children = defineScriptVars(defineVars) + "\n" + children;
    }
  }
  if ((children == null || children == "") && voidElementNames.test(name)) {
    return `<${name}${internalSpreadAttributes(props, shouldEscape)} />`;
  }
  return `<${name}${internalSpreadAttributes(props, shouldEscape)}>${children}</${name}>`;
}

function componentIsHTMLElement(Component) {
  return typeof HTMLElement !== "undefined" && HTMLElement.isPrototypeOf(Component);
}
async function renderHTMLElement(result, constructor, props, slots) {
  const name = getHTMLElementName(constructor);
  let attrHTML = "";
  for (const attr in props) {
    attrHTML += ` ${attr}="${toAttributeString(await props[attr])}"`;
  }
  return markHTMLString(
    `<${name}${attrHTML}>${await renderSlot(result, slots == null ? void 0 : slots.default)}</${name}>`
  );
}
function getHTMLElementName(constructor) {
  const definedName = customElements.getName(constructor);
  if (definedName)
    return definedName;
  const assignedName = constructor.name.replace(/^HTML|Element$/g, "").replace(/[A-Z]/g, "-$&").toLowerCase().replace(/^-/, "html-");
  return assignedName;
}

const rendererAliases = /* @__PURE__ */ new Map([["solid", "solid-js"]]);
function guessRenderers(componentUrl) {
  const extname = componentUrl == null ? void 0 : componentUrl.split(".").pop();
  switch (extname) {
    case "svelte":
      return ["@astrojs/svelte"];
    case "vue":
      return ["@astrojs/vue"];
    case "jsx":
    case "tsx":
      return ["@astrojs/react", "@astrojs/preact"];
    default:
      return ["@astrojs/react", "@astrojs/preact", "@astrojs/vue", "@astrojs/svelte"];
  }
}
function getComponentType(Component) {
  if (Component === Fragment) {
    return "fragment";
  }
  if (Component && typeof Component === "object" && Component["astro:html"]) {
    return "html";
  }
  if (isAstroComponentFactory(Component)) {
    return "astro-factory";
  }
  return "unknown";
}
async function renderComponent(result, displayName, Component, _props, slots = {}) {
  var _a;
  Component = await Component;
  switch (getComponentType(Component)) {
    case "fragment": {
      const children2 = await renderSlot(result, slots == null ? void 0 : slots.default);
      if (children2 == null) {
        return children2;
      }
      return markHTMLString(children2);
    }
    case "html": {
      const children2 = {};
      if (slots) {
        await Promise.all(
          Object.entries(slots).map(
            ([key, value]) => renderSlot(result, value).then((output) => {
              children2[key] = output;
            })
          )
        );
      }
      const html2 = Component.render({ slots: children2 });
      return markHTMLString(html2);
    }
    case "astro-factory": {
      async function* renderAstroComponentInline() {
        let iterable = await renderToIterable(result, Component, displayName, _props, slots);
        yield* iterable;
      }
      return renderAstroComponentInline();
    }
  }
  if (!Component && !_props["client:only"]) {
    throw new Error(
      `Unable to render ${displayName} because it is ${Component}!
Did you forget to import the component or is it possible there is a typo?`
    );
  }
  const { renderers } = result._metadata;
  const metadata = { displayName };
  const { hydration, isPage, props } = extractDirectives(_props);
  let html = "";
  let attrs = void 0;
  if (hydration) {
    metadata.hydrate = hydration.directive;
    metadata.hydrateArgs = hydration.value;
    metadata.componentExport = hydration.componentExport;
    metadata.componentUrl = hydration.componentUrl;
  }
  const probableRendererNames = guessRenderers(metadata.componentUrl);
  if (Array.isArray(renderers) && renderers.length === 0 && typeof Component !== "string" && !componentIsHTMLElement(Component)) {
    const message = `Unable to render ${metadata.displayName}!

There are no \`integrations\` set in your \`astro.config.mjs\` file.
Did you mean to add ${formatList(probableRendererNames.map((r) => "`" + r + "`"))}?`;
    throw new Error(message);
  }
  const children = {};
  if (slots) {
    await Promise.all(
      Object.entries(slots).map(
        ([key, value]) => renderSlot(result, value).then((output) => {
          children[key] = output;
        })
      )
    );
  }
  let renderer;
  if (metadata.hydrate !== "only") {
    if (Component && Component[Renderer]) {
      const rendererName = Component[Renderer];
      renderer = renderers.find(({ name }) => name === rendererName);
    }
    if (!renderer) {
      let error;
      for (const r of renderers) {
        try {
          if (await r.ssr.check.call({ result }, Component, props, children)) {
            renderer = r;
            break;
          }
        } catch (e) {
          error ?? (error = e);
        }
      }
      if (!renderer && error) {
        throw error;
      }
    }
    if (!renderer && typeof HTMLElement === "function" && componentIsHTMLElement(Component)) {
      const output = renderHTMLElement(result, Component, _props, slots);
      return output;
    }
  } else {
    if (metadata.hydrateArgs) {
      const passedName = metadata.hydrateArgs;
      const rendererName = rendererAliases.has(passedName) ? rendererAliases.get(passedName) : passedName;
      renderer = renderers.find(
        ({ name }) => name === `@astrojs/${rendererName}` || name === rendererName
      );
    }
    if (!renderer && renderers.length === 1) {
      renderer = renderers[0];
    }
    if (!renderer) {
      const extname = (_a = metadata.componentUrl) == null ? void 0 : _a.split(".").pop();
      renderer = renderers.filter(
        ({ name }) => name === `@astrojs/${extname}` || name === extname
      )[0];
    }
  }
  if (!renderer) {
    if (metadata.hydrate === "only") {
      throw new Error(`Unable to render ${metadata.displayName}!

Using the \`client:only\` hydration strategy, Astro needs a hint to use the correct renderer.
Did you mean to pass <${metadata.displayName} client:only="${probableRendererNames.map((r) => r.replace("@astrojs/", "")).join("|")}" />
`);
    } else if (typeof Component !== "string") {
      const matchingRenderers = renderers.filter((r) => probableRendererNames.includes(r.name));
      const plural = renderers.length > 1;
      if (matchingRenderers.length === 0) {
        throw new Error(`Unable to render ${metadata.displayName}!

There ${plural ? "are" : "is"} ${renderers.length} renderer${plural ? "s" : ""} configured in your \`astro.config.mjs\` file,
but ${plural ? "none were" : "it was not"} able to server-side render ${metadata.displayName}.

Did you mean to enable ${formatList(probableRendererNames.map((r) => "`" + r + "`"))}?`);
      } else if (matchingRenderers.length === 1) {
        renderer = matchingRenderers[0];
        ({ html, attrs } = await renderer.ssr.renderToStaticMarkup.call(
          { result },
          Component,
          props,
          children,
          metadata
        ));
      } else {
        throw new Error(`Unable to render ${metadata.displayName}!

This component likely uses ${formatList(probableRendererNames)},
but Astro encountered an error during server-side rendering.

Please ensure that ${metadata.displayName}:
1. Does not unconditionally access browser-specific globals like \`window\` or \`document\`.
   If this is unavoidable, use the \`client:only\` hydration directive.
2. Does not conditionally return \`null\` or \`undefined\` when rendered on the server.

If you're still stuck, please open an issue on GitHub or join us at https://astro.build/chat.`);
      }
    }
  } else {
    if (metadata.hydrate === "only") {
      html = await renderSlot(result, slots == null ? void 0 : slots.fallback);
    } else {
      ({ html, attrs } = await renderer.ssr.renderToStaticMarkup.call(
        { result },
        Component,
        props,
        children,
        metadata
      ));
    }
  }
  if (renderer && !renderer.clientEntrypoint && renderer.name !== "@astrojs/lit" && metadata.hydrate) {
    throw new Error(
      `${metadata.displayName} component has a \`client:${metadata.hydrate}\` directive, but no client entrypoint was provided by ${renderer.name}!`
    );
  }
  if (!html && typeof Component === "string") {
    const childSlots = Object.values(children).join("");
    const iterable = renderAstroComponent(
      await renderTemplate`<${Component}${internalSpreadAttributes(props)}${markHTMLString(
        childSlots === "" && voidElementNames.test(Component) ? `/>` : `>${childSlots}</${Component}>`
      )}`
    );
    html = "";
    for await (const chunk of iterable) {
      html += chunk;
    }
  }
  if (!hydration) {
    if (isPage || (renderer == null ? void 0 : renderer.name) === "astro:jsx") {
      return html;
    }
    return markHTMLString(html.replace(/\<\/?astro-slot\>/g, ""));
  }
  const astroId = shorthash(
    `<!--${metadata.componentExport.value}:${metadata.componentUrl}-->
${html}
${serializeProps(
      props
    )}`
  );
  const island = await generateHydrateScript(
    { renderer, result, astroId, props, attrs },
    metadata
  );
  let unrenderedSlots = [];
  if (html) {
    if (Object.keys(children).length > 0) {
      for (const key of Object.keys(children)) {
        if (!html.includes(key === "default" ? `<astro-slot>` : `<astro-slot name="${key}">`)) {
          unrenderedSlots.push(key);
        }
      }
    }
  } else {
    unrenderedSlots = Object.keys(children);
  }
  const template = unrenderedSlots.length > 0 ? unrenderedSlots.map(
    (key) => `<template data-astro-template${key !== "default" ? `="${key}"` : ""}>${children[key]}</template>`
  ).join("") : "";
  island.children = `${html ?? ""}${template}`;
  if (island.children) {
    island.props["await-children"] = "";
  }
  async function* renderAll() {
    yield { type: "directive", hydration, result };
    yield markHTMLString(renderElement$1("astro-island", island, false));
  }
  return renderAll();
}

const uniqueElements = (item, index, all) => {
  const props = JSON.stringify(item.props);
  const children = item.children;
  return index === all.findIndex((i) => JSON.stringify(i.props) === props && i.children == children);
};
const alreadyHeadRenderedResults = /* @__PURE__ */ new WeakSet();
function renderHead(result) {
  alreadyHeadRenderedResults.add(result);
  const styles = Array.from(result.styles).filter(uniqueElements).map((style) => renderElement$1("style", style));
  result.styles.clear();
  const scripts = Array.from(result.scripts).filter(uniqueElements).map((script, i) => {
    return renderElement$1("script", script, false);
  });
  const links = Array.from(result.links).filter(uniqueElements).map((link) => renderElement$1("link", link, false));
  return markHTMLString(links.join("\n") + styles.join("\n") + scripts.join("\n"));
}
async function* maybeRenderHead(result) {
  if (alreadyHeadRenderedResults.has(result)) {
    return;
  }
  yield renderHead(result);
}

typeof process === "object" && Object.prototype.toString.call(process) === "[object process]";

new TextEncoder();

function createComponent(cb) {
  cb.isAstroComponentFactory = true;
  return cb;
}
function spreadAttributes(values, _name, { class: scopedClassName } = {}) {
  let output = "";
  if (scopedClassName) {
    if (typeof values.class !== "undefined") {
      values.class += ` ${scopedClassName}`;
    } else if (typeof values["class:list"] !== "undefined") {
      values["class:list"] = [values["class:list"], scopedClassName];
    } else {
      values.class = scopedClassName;
    }
  }
  for (const [key, value] of Object.entries(values)) {
    output += addAttribute(value, key, true);
  }
  return markHTMLString(output);
}

const AstroJSX = "astro:jsx";
const Empty = Symbol("empty");
const toSlotName = (str) => str.trim().replace(/[-_]([a-z])/g, (_, w) => w.toUpperCase());
function isVNode(vnode) {
  return vnode && typeof vnode === "object" && vnode[AstroJSX];
}
function transformSlots(vnode) {
  if (typeof vnode.type === "string")
    return vnode;
  const slots = {};
  if (isVNode(vnode.props.children)) {
    const child = vnode.props.children;
    if (!isVNode(child))
      return;
    if (!("slot" in child.props))
      return;
    const name = toSlotName(child.props.slot);
    slots[name] = [child];
    slots[name]["$$slot"] = true;
    delete child.props.slot;
    delete vnode.props.children;
  }
  if (Array.isArray(vnode.props.children)) {
    vnode.props.children = vnode.props.children.map((child) => {
      if (!isVNode(child))
        return child;
      if (!("slot" in child.props))
        return child;
      const name = toSlotName(child.props.slot);
      if (Array.isArray(slots[name])) {
        slots[name].push(child);
      } else {
        slots[name] = [child];
        slots[name]["$$slot"] = true;
      }
      delete child.props.slot;
      return Empty;
    }).filter((v) => v !== Empty);
  }
  Object.assign(vnode.props, slots);
}
function markRawChildren(child) {
  if (typeof child === "string")
    return markHTMLString(child);
  if (Array.isArray(child))
    return child.map((c) => markRawChildren(c));
  return child;
}
function transformSetDirectives(vnode) {
  if (!("set:html" in vnode.props || "set:text" in vnode.props))
    return;
  if ("set:html" in vnode.props) {
    const children = markRawChildren(vnode.props["set:html"]);
    delete vnode.props["set:html"];
    Object.assign(vnode.props, { children });
    return;
  }
  if ("set:text" in vnode.props) {
    const children = vnode.props["set:text"];
    delete vnode.props["set:text"];
    Object.assign(vnode.props, { children });
    return;
  }
}
function createVNode(type, props) {
  const vnode = {
    [AstroJSX]: true,
    type,
    props: props ?? {}
  };
  transformSetDirectives(vnode);
  transformSlots(vnode);
  return vnode;
}

const ClientOnlyPlaceholder = "astro-client-only";
const skipAstroJSXCheck = /* @__PURE__ */ new WeakSet();
let originalConsoleError;
let consoleFilterRefs = 0;
async function renderJSX(result, vnode) {
  switch (true) {
    case vnode instanceof HTMLString:
      if (vnode.toString().trim() === "") {
        return "";
      }
      return vnode;
    case typeof vnode === "string":
      return markHTMLString(escapeHTML(vnode));
    case (!vnode && vnode !== 0):
      return "";
    case Array.isArray(vnode):
      return markHTMLString(
        (await Promise.all(vnode.map((v) => renderJSX(result, v)))).join("")
      );
  }
  if (isVNode(vnode)) {
    switch (true) {
      case vnode.type === Symbol.for("astro:fragment"):
        return renderJSX(result, vnode.props.children);
      case vnode.type.isAstroComponentFactory: {
        let props = {};
        let slots = {};
        for (const [key, value] of Object.entries(vnode.props ?? {})) {
          if (key === "children" || value && typeof value === "object" && value["$$slot"]) {
            slots[key === "children" ? "default" : key] = () => renderJSX(result, value);
          } else {
            props[key] = value;
          }
        }
        return markHTMLString(await renderToString(result, vnode.type, props, slots));
      }
      case (!vnode.type && vnode.type !== 0):
        return "";
      case (typeof vnode.type === "string" && vnode.type !== ClientOnlyPlaceholder):
        return markHTMLString(await renderElement(result, vnode.type, vnode.props ?? {}));
    }
    if (vnode.type) {
      let extractSlots2 = function(child) {
        if (Array.isArray(child)) {
          return child.map((c) => extractSlots2(c));
        }
        if (!isVNode(child)) {
          _slots.default.push(child);
          return;
        }
        if ("slot" in child.props) {
          _slots[child.props.slot] = [..._slots[child.props.slot] ?? [], child];
          delete child.props.slot;
          return;
        }
        _slots.default.push(child);
      };
      if (typeof vnode.type === "function" && vnode.type["astro:renderer"]) {
        skipAstroJSXCheck.add(vnode.type);
      }
      if (typeof vnode.type === "function" && vnode.props["server:root"]) {
        const output2 = await vnode.type(vnode.props ?? {});
        return await renderJSX(result, output2);
      }
      if (typeof vnode.type === "function" && !skipAstroJSXCheck.has(vnode.type)) {
        useConsoleFilter();
        try {
          const output2 = await vnode.type(vnode.props ?? {});
          if (output2 && output2[AstroJSX]) {
            return await renderJSX(result, output2);
          } else if (!output2) {
            return await renderJSX(result, output2);
          }
        } catch (e) {
          skipAstroJSXCheck.add(vnode.type);
        } finally {
          finishUsingConsoleFilter();
        }
      }
      const { children = null, ...props } = vnode.props ?? {};
      const _slots = {
        default: []
      };
      extractSlots2(children);
      for (const [key, value] of Object.entries(props)) {
        if (value["$$slot"]) {
          _slots[key] = value;
          delete props[key];
        }
      }
      const slotPromises = [];
      const slots = {};
      for (const [key, value] of Object.entries(_slots)) {
        slotPromises.push(
          renderJSX(result, value).then((output2) => {
            if (output2.toString().trim().length === 0)
              return;
            slots[key] = () => output2;
          })
        );
      }
      await Promise.all(slotPromises);
      let output;
      if (vnode.type === ClientOnlyPlaceholder && vnode.props["client:only"]) {
        output = await renderComponent(
          result,
          vnode.props["client:display-name"] ?? "",
          null,
          props,
          slots
        );
      } else {
        output = await renderComponent(
          result,
          typeof vnode.type === "function" ? vnode.type.name : vnode.type,
          vnode.type,
          props,
          slots
        );
      }
      if (typeof output !== "string" && Symbol.asyncIterator in output) {
        let body = "";
        for await (const chunk of output) {
          let html = stringifyChunk(result, chunk);
          body += html;
        }
        return markHTMLString(body);
      } else {
        return markHTMLString(output);
      }
    }
  }
  return markHTMLString(`${vnode}`);
}
async function renderElement(result, tag, { children, ...props }) {
  return markHTMLString(
    `<${tag}${spreadAttributes(props)}${markHTMLString(
      (children == null || children == "") && voidElementNames.test(tag) ? `/>` : `>${children == null ? "" : await renderJSX(result, children)}</${tag}>`
    )}`
  );
}
function useConsoleFilter() {
  consoleFilterRefs++;
  if (!originalConsoleError) {
    originalConsoleError = console.error;
    try {
      console.error = filteredConsoleError;
    } catch (error) {
    }
  }
}
function finishUsingConsoleFilter() {
  consoleFilterRefs--;
}
function filteredConsoleError(msg, ...rest) {
  if (consoleFilterRefs > 0 && typeof msg === "string") {
    const isKnownReactHookError = msg.includes("Warning: Invalid hook call.") && msg.includes("https://reactjs.org/link/invalid-hook-call");
    if (isKnownReactHookError)
      return;
  }
}

const slotName = (str) => str.trim().replace(/[-_]([a-z])/g, (_, w) => w.toUpperCase());
async function check(Component, props, { default: children = null, ...slotted } = {}) {
  if (typeof Component !== "function")
    return false;
  const slots = {};
  for (const [key, value] of Object.entries(slotted)) {
    const name = slotName(key);
    slots[name] = value;
  }
  try {
    const result = await Component({ ...props, ...slots, children });
    return result[AstroJSX];
  } catch (e) {
  }
  return false;
}
async function renderToStaticMarkup(Component, props = {}, { default: children = null, ...slotted } = {}) {
  const slots = {};
  for (const [key, value] of Object.entries(slotted)) {
    const name = slotName(key);
    slots[name] = value;
  }
  const { result } = this;
  const html = await renderJSX(result, createVNode(Component, { ...props, ...slots, children }));
  return { html };
}
var server_default = {
  check,
  renderToStaticMarkup
};

function isOutputFormat(value) {
  return ["avif", "jpeg", "png", "webp"].includes(value);
}
function isAspectRatioString(value) {
  return /^\d*:\d*$/.test(value);
}
function isRemoteImage(src) {
  return /^http(s?):\/\//.test(src);
}
async function loadLocalImage(src) {
  try {
    return await fs.readFile(src);
  } catch {
    return void 0;
  }
}
async function loadRemoteImage(src) {
  try {
    const res = await fetch(src);
    if (!res.ok) {
      return void 0;
    }
    return Buffer.from(await res.arrayBuffer());
  } catch {
    return void 0;
  }
}

class SharpService {
  async getImageAttributes(transform) {
    const { width, height, src, format, quality, aspectRatio, ...rest } = transform;
    return {
      ...rest,
      width,
      height
    };
  }
  serializeTransform(transform) {
    const searchParams = new URLSearchParams();
    if (transform.quality) {
      searchParams.append("q", transform.quality.toString());
    }
    if (transform.format) {
      searchParams.append("f", transform.format);
    }
    if (transform.width) {
      searchParams.append("w", transform.width.toString());
    }
    if (transform.height) {
      searchParams.append("h", transform.height.toString());
    }
    if (transform.aspectRatio) {
      searchParams.append("ar", transform.aspectRatio.toString());
    }
    searchParams.append("href", transform.src);
    return { searchParams };
  }
  parseTransform(searchParams) {
    if (!searchParams.has("href")) {
      return void 0;
    }
    let transform = { src: searchParams.get("href") };
    if (searchParams.has("q")) {
      transform.quality = parseInt(searchParams.get("q"));
    }
    if (searchParams.has("f")) {
      const format = searchParams.get("f");
      if (isOutputFormat(format)) {
        transform.format = format;
      }
    }
    if (searchParams.has("w")) {
      transform.width = parseInt(searchParams.get("w"));
    }
    if (searchParams.has("h")) {
      transform.height = parseInt(searchParams.get("h"));
    }
    if (searchParams.has("ar")) {
      const ratio = searchParams.get("ar");
      if (isAspectRatioString(ratio)) {
        transform.aspectRatio = ratio;
      } else {
        transform.aspectRatio = parseFloat(ratio);
      }
    }
    return transform;
  }
  async transform(inputBuffer, transform) {
    const sharpImage = sharp(inputBuffer, { failOnError: false, pages: -1 });
    sharpImage.rotate();
    if (transform.width || transform.height) {
      const width = transform.width && Math.round(transform.width);
      const height = transform.height && Math.round(transform.height);
      sharpImage.resize(width, height);
    }
    if (transform.format) {
      sharpImage.toFormat(transform.format, { quality: transform.quality });
    }
    const { data, info } = await sharpImage.toBuffer({ resolveWithObject: true });
    return {
      data,
      format: info.format
    };
  }
}
const service = new SharpService();
var sharp_default = service;

const get$1 = async ({ request }) => {
  try {
    const url = new URL(request.url);
    const transform = sharp_default.parseTransform(url.searchParams);
    if (!transform) {
      return new Response("Bad Request", { status: 400 });
    }
    let inputBuffer = void 0;
    if (isRemoteImage(transform.src)) {
      inputBuffer = await loadRemoteImage(transform.src);
    } else {
      const clientRoot = new URL("../client/", import.meta.url);
      const localPath = new URL("." + transform.src, clientRoot);
      inputBuffer = await loadLocalImage(localPath);
    }
    if (!inputBuffer) {
      return new Response(`"${transform.src} not found`, { status: 404 });
    }
    const { data, format } = await sharp_default.transform(inputBuffer, transform);
    return new Response(data, {
      status: 200,
      headers: {
        "Content-Type": lookup(format) || "",
        "Cache-Control": "public, max-age=31536000",
        ETag: etag(inputBuffer),
        Date: new Date().toUTCString()
      }
    });
  } catch (err) {
    return new Response(`Server Error: ${err}`, { status: 500 });
  }
};

const _page0 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	get: get$1
}, Symbol.toStringTag, { value: 'Module' }));

i18next__default.use(fsBackend).init({"debug": true,"initImmediate": false,"backend": {"loadPath": "./src/locales/{{lng}}.json",},"supportedLngs": ["en","es",],"fallbackLng": ["en","es",],});

const email = "yunielacosta738@gmail.com";
const domain = "https://yunielacosta.com";
const socialMedia = [
  {
    name: "GitHub",
    url: "https://github.com/yacosta738",
    icon: "uit:github-alt"
  },
  {
    name: "Instagram",
    url: "https://www.instagram.com/yacosta738",
    icon: "mdi:instagram"
  },
  {
    name: "Twitter",
    url: "https://twitter.com/yacosta738",
    icon: "uit:twitter-alt"
  },
  {
    name: "Linkedin",
    url: "https://www.linkedin.com/in/yacosta738",
    icon: "uit:linkedin-alt"
  },
  {
    name: "Codepen",
    url: "https://codepen.io/yacosta738",
    icon: "ph:codepen-logo"
  }
];
const constants = { email, socialMedia };

const $$module6$6 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	email,
	domain,
	socialMedia,
	default: constants
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$R = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/OpenGraphArticleTags.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$Y = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/OpenGraphArticleTags.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$OpenGraphArticleTags = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$Y, $$props, $$slots);
  Astro2.self = $$OpenGraphArticleTags;
  const { publishedTime, modifiedTime, expirationTime, authors, section, tags } = Astro2.props.openGraph.article;
  return renderTemplate`${publishedTime ? renderTemplate`<meta property="article:published_time"${addAttribute(publishedTime, "content")}>` : null}
${modifiedTime ? renderTemplate`<meta property="article:modified_time"${addAttribute(modifiedTime, "content")}>` : null}
${expirationTime ? renderTemplate`<meta property="article:expiration_time"${addAttribute(expirationTime, "content")}>` : null}
${authors ? authors.map((author) => renderTemplate`<meta property="article:author"${addAttribute(author, "content")}>`) : null}
${section ? renderTemplate`<meta property="article:section"${addAttribute(section, "content")}>` : null}
${tags ? tags.map((tag) => renderTemplate`<meta property="article:tag"${addAttribute(tag, "content")}>`) : null}
`;
});

const $$file$R = "/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/OpenGraphArticleTags.astro";
const $$url$R = undefined;

const $$module1$8 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$R,
	default: $$OpenGraphArticleTags,
	file: $$file$R,
	url: $$url$R
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$Q = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/OpenGraphBasicTags.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$X = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/OpenGraphBasicTags.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$OpenGraphBasicTags = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$X, $$props, $$slots);
  Astro2.self = $$OpenGraphBasicTags;
  const { openGraph } = Astro2.props;
  return renderTemplate`<meta property="og:title"${addAttribute(openGraph.basic.title, "content")}>
<meta property="og:type"${addAttribute(openGraph.basic.type, "content")}>
<meta property="og:image"${addAttribute(openGraph.basic.image, "content")}>
<meta property="og:url"${addAttribute(openGraph.basic.url || Astro2.url.href, "content")}>
`;
});

const $$file$Q = "/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/OpenGraphBasicTags.astro";
const $$url$Q = undefined;

const $$module2$d = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$Q,
	default: $$OpenGraphBasicTags,
	file: $$file$Q,
	url: $$url$Q
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$P = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/OpenGraphImageTags.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$W = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/OpenGraphImageTags.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$OpenGraphImageTags = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$W, $$props, $$slots);
  Astro2.self = $$OpenGraphImageTags;
  const { image } = Astro2.props.openGraph.basic;
  const { url, secureUrl, type, width, height, alt } = Astro2.props.openGraph.image;
  return renderTemplate`<meta property="og:image:url"${addAttribute(image, "content")}>
${secureUrl ? renderTemplate`<meta property="og:image:secure_url"${addAttribute(secureUrl, "content")}>` : null}
${type ? renderTemplate`<meta property="og:image:type"${addAttribute(type, "content")}>` : null}
${width ? renderTemplate`<meta property="og:image:width"${addAttribute(width, "content")}>` : null}
${!(height === null) ? renderTemplate`<meta property="og:image:height"${addAttribute(height, "content")}>` : null}
${!(alt === null) ? renderTemplate`<meta property="og:image:alt"${addAttribute(alt, "content")}>` : null}
`;
});

const $$file$P = "/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/OpenGraphImageTags.astro";
const $$url$P = undefined;

const $$module3$7 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$P,
	default: $$OpenGraphImageTags,
	file: $$file$P,
	url: $$url$P
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$O = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/OpenGraphOptionalTags.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$V = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/OpenGraphOptionalTags.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$OpenGraphOptionalTags = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$V, $$props, $$slots);
  Astro2.self = $$OpenGraphOptionalTags;
  const { optional } = Astro2.props.openGraph;
  return renderTemplate`${optional.audio ? renderTemplate`<meta property="og:audio"${addAttribute(optional.audio, "content")}>` : null}
${optional.description ? renderTemplate`<meta property="og:description"${addAttribute(optional.description, "content")}>` : null}
${optional.determiner ? renderTemplate`<meta property="og:determiner"${addAttribute(optional.determiner, "content")}>` : null}
${optional.locale ? renderTemplate`<meta property="og:locale"${addAttribute(optional.locale, "content")}>` : null}
${optional.localeAlternate?.map((locale) => renderTemplate`<meta property="og:locale:alternate"${addAttribute(locale, "content")}>`)}
${optional.siteName ? renderTemplate`<meta property="og:site_name"${addAttribute(optional.siteName, "content")}>` : null}
${optional.video ? renderTemplate`<meta property="og:video"${addAttribute(optional.video, "content")}>` : null}
`;
});

const $$file$O = "/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/OpenGraphOptionalTags.astro";
const $$url$O = undefined;

const $$module4$9 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$O,
	default: $$OpenGraphOptionalTags,
	file: $$file$O,
	url: $$url$O
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$N = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/ExtendedTags.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$U = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/ExtendedTags.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$ExtendedTags = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$U, $$props, $$slots);
  Astro2.self = $$ExtendedTags;
  const { props } = Astro2;
  return renderTemplate`${props.extend.link?.map((attributes) => renderTemplate`<link${spreadAttributes(attributes)}>`)}
${props.extend.meta?.map(({ content, httpEquiv, name, property }) => renderTemplate`<meta${addAttribute(content, "content")}${addAttribute(httpEquiv, "http-eqiv")}${addAttribute(name, "name")}${addAttribute(property, "property")}>`)}
`;
});

const $$file$N = "/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/ExtendedTags.astro";
const $$url$N = undefined;

const $$module5$6 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$N,
	default: $$ExtendedTags,
	file: $$file$N,
	url: $$url$N
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$M = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/TwitterTags.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$T = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/TwitterTags.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$TwitterTags = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$T, $$props, $$slots);
  Astro2.self = $$TwitterTags;
  const { card, site, creator } = Astro2.props.twitter;
  return renderTemplate`${card ? renderTemplate`<meta name="twitter:card"${addAttribute(card, "content")}>` : null}
${site ? renderTemplate`<meta name="twitter:site"${addAttribute(site, "content")}>` : null}
${creator ? renderTemplate`<meta name="twitter:creator"${addAttribute(creator, "content")}>` : null}
`;
});

const $$file$M = "/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/components/TwitterTags.astro";
const $$url$M = undefined;

const $$module6$5 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$M,
	default: $$TwitterTags,
	file: $$file$M,
	url: $$url$M
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$L = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/SEO.astro", { modules: [{ module: $$module1$8, specifier: "./components/OpenGraphArticleTags.astro", assert: {} }, { module: $$module2$d, specifier: "./components/OpenGraphBasicTags.astro", assert: {} }, { module: $$module3$7, specifier: "./components/OpenGraphImageTags.astro", assert: {} }, { module: $$module4$9, specifier: "./components/OpenGraphOptionalTags.astro", assert: {} }, { module: $$module5$6, specifier: "./components/ExtendedTags.astro", assert: {} }, { module: $$module6$5, specifier: "./components/TwitterTags.astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$S = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/SEO.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$SEO = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$S, $$props, $$slots);
  Astro2.self = $$SEO;
  const { props } = Astro2;
  const { title, description, canonical, noindex, nofollow } = props;
  function validateProps(props2) {
    const { openGraph, description: description2 } = props2;
    if (openGraph) {
      if (!openGraph.basic || openGraph.basic.title == null || openGraph.basic.type == null || openGraph.basic.image == null) {
        throw new Error(
          "If you pass the openGraph prop, you have to at least define the title, type, and image basic properties!"
        );
      }
    }
    if (title && openGraph?.basic.title) {
      if (title == openGraph.basic.title) {
        console.warn(
          "WARNING(astro-seo): You passed the same value to `title` and `openGraph.optional.title`. This is most likely not what you want. See docs for more."
        );
      }
    }
    if (openGraph?.basic?.image && !openGraph?.image?.alt) {
      console.warn(
        "WARNING(astro-seo): You defined `openGraph.basic.image`, but didn't define `openGraph.image.alt`. This is stongly discouraged.'"
      );
    }
  }
  validateProps(props);
  return renderTemplate`${title ? renderTemplate`<title>${markHTMLString(title)}</title>` : null}

<link rel="canonical"${addAttribute(canonical || Astro2.url.href, "href")}>

${description ? renderTemplate`<meta name="description"${addAttribute(description, "content")}>` : null}

<meta name="robots"${addAttribute(`${noindex ? "noindex" : "index"}, ${nofollow ? "nofollow" : "follow"}`, "content")}>

${props.openGraph && renderTemplate`${renderComponent($$result, "OpenGraphBasicTags", $$OpenGraphBasicTags, { ...props })}`}
${props.openGraph?.optional && renderTemplate`${renderComponent($$result, "OpenGraphOptionalTags", $$OpenGraphOptionalTags, { ...props })}`}
${props.openGraph?.image && renderTemplate`${renderComponent($$result, "OpenGraphImageTags", $$OpenGraphImageTags, { ...props })}`}
${props.openGraph?.article && renderTemplate`${renderComponent($$result, "OpenGraphArticleTags", $$OpenGraphArticleTags, { ...props })}`}
${props.twitter && renderTemplate`${renderComponent($$result, "TwitterTags", $$TwitterTags, { ...props })}`}
${props.extend && renderTemplate`${renderComponent($$result, "ExtendedTags", $$ExtendedTags, { ...props })}`}
`;
});

const $$file$L = "/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-seo@0.6.0/node_modules/astro-seo/src/SEO.astro";
const $$url$L = undefined;

const $$module2$c = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	SEO: $$SEO,
	$$metadata: $$metadata$L,
	file: $$file$L,
	url: $$url$L
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$K = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/HeadSEO.astro", { modules: [{ module: $$module6$6, specifier: "@store:constants", assert: {} }, { module: $$module2$c, specifier: "astro-seo", assert: {} }, { module: i18next, specifier: "i18next", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$R = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/HeadSEO.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$HeadSEO = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$R, $$props, $$slots);
  Astro2.self = $$HeadSEO;
  const { href: canonicalUrl } = Astro2.url;
  let { title, description, image, ogImageAlt } = Astro2.props;
  title = title || t("seo.title");
  description = description || t("seo.description");
  image = image ? `${domain}${image}` : `${domain}/assets/images/me.png`;
  ogImageAlt = ogImageAlt || t("seo.ogImageAlt");
  return renderTemplate`<link rel="icon" type="image/x-icon" href="/favicon.ico">
${renderComponent($$result, "SEO", $$SEO, { "title": title, "description": description, "canonical": canonicalUrl, "openGraph": {
    basic: {
      title: t("seo.ogTitle"),
      description: t("seo.description"),
      type: "website",
      image: { image },
      url: canonicalUrl
    },
    image: {
      alt: { ogImageAlt },
      width: "1200",
      height: "630",
      type: "image/jpeg"
    }
  }, "twitter": { card: "summary_large_image", creator: "@yacosta738" } })}
`;
});

const $$file$K = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/HeadSEO.astro";
const $$url$K = undefined;

const $$module2$b = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$K,
	default: $$HeadSEO,
	file: $$file$K,
	url: $$url$K
}, Symbol.toStringTag, { value: 'Module' }));

const getUserConfig$1 = async (root, configPath) => {
  const resolvedRoot = fileURLToPath(root);
  let userConfigPath;
  if (configPath) {
    const configPathWithLeadingSlash = /^\.*\//.test(configPath) ? configPath : `./${configPath}`;
    userConfigPath = fileURLToPath(new URL(configPathWithLeadingSlash, root));
  }
  load$1.use([typescript]);
  return await load$1("astro-i18next", {
    mustExist: false,
    cwd: resolvedRoot,
    filePath: userConfigPath
  });
};
const moveBaseLanguageToFirstIndex$1 = (supportedLocales, baseLocale) => {
  const baseLocaleIndex = supportedLocales.indexOf(baseLocale);
  supportedLocales.splice(baseLocaleIndex, 1);
  supportedLocales.unshift(baseLocale);
};
const interpolate$1 = (i18nKey, referenceString, namespace = null) => {
  const localizedString = t(i18nKey, { ns: namespace });
  if (localizedString === i18nKey) {
    console.warn(`WARNING(astro-i18next): missing translation key ${i18nKey}.`);
    return referenceString;
  }
  const tagsRegex = /<([\w\d]+)([^>]*)>/gi;
  const referenceStringMatches = referenceString.match(tagsRegex);
  if (!referenceStringMatches) {
    console.warn(
      "WARNING(astro-i18next): default slot does not include any HTML tag to interpolate! You should use the `t` function directly."
    );
    return localizedString;
  }
  const referenceTags = [];
  referenceStringMatches.forEach((tagNode) => {
    const [, name, attributes] = tagsRegex.exec(tagNode);
    referenceTags.push({ name, attributes });
    tagsRegex.exec("");
  });
  let interpolatedString = localizedString;
  for (let index = 0; index < referenceTags.length; index++) {
    const referencedTag = referenceTags[index];
    interpolatedString = interpolatedString.replaceAll(
      `<${index}>`,
      `<${referencedTag.name}${referencedTag.attributes}>`
    );
    interpolatedString = interpolatedString.replaceAll(
      `</${index}>`,
      `</${referencedTag.name}>`
    );
  }
  return interpolatedString;
};
const localizePath$2 = (path = "/", locale = null) => {
  if (!locale) {
    locale = i18next__default.language;
  }
  if (!i18next__default.options.supportedLngs.includes(locale)) {
    console.warn(
      `WARNING(astro-i18next): "${locale}" locale is not supported, add it to the supportedLngs in your astro config.`
    );
    return path;
  }
  path = path.replace(/^\/+/g, "");
  let pathSegments = path.split("/");
  if (JSON.stringify(pathSegments) === JSON.stringify([""]) || JSON.stringify(pathSegments) === JSON.stringify(["", ""])) {
    return locale === i18next__default.options.supportedLngs[0] ? `/` : `/${locale}/`;
  }
  const otherLocales = [...i18next__default.options.supportedLngs];
  for (const otherLocale of otherLocales) {
    if (pathSegments[0] === otherLocale) {
      pathSegments.shift();
      break;
    }
  }
  if (locale !== i18next__default.options.supportedLngs[0]) {
    pathSegments = [locale, ...pathSegments];
  }
  return "/" + pathSegments.join("/");
};
const localizeUrl$1 = (url, locale = null) => {
  const [protocol, , host, ...path] = url.split("/");
  const baseUrl = protocol + "//" + host;
  return baseUrl + localizePath$2(path.join("/"), locale);
};
const detectLocaleFromPath$1 = (path) => {
  path = path.replace(/^\/+/g, "");
  const pathSegments = path.split("/");
  if (JSON.stringify(pathSegments) === JSON.stringify([""]) || JSON.stringify(pathSegments) === JSON.stringify(["", ""])) {
    return i18next__default.options.supportedLngs[0];
  }
  const otherLocales = [...i18next__default.options.supportedLngs];
  for (const otherLocale of otherLocales) {
    if (pathSegments[0] === otherLocale) {
      return otherLocale;
    }
  }
  return i18next__default.options.supportedLngs[0];
};
const deeplyStringifyObject$1 = (obj) => {
  const isArray = Array.isArray(obj);
  let str = isArray ? "[" : "{";
  for (const key in obj) {
    if (obj[key] === null || obj[key] === void 0) {
      continue;
    }
    let value = null;
    switch (typeof obj[key]) {
      case "string": {
        value = `"${obj[key]}"`;
        break;
      }
      case "number":
      case "boolean": {
        value = obj[key];
        break;
      }
      case "object": {
        value = deeplyStringifyObject$1(obj[key]);
        break;
      }
      case "function": {
        value = obj[key].toString().replace(/\s+/g, " ");
        break;
      }
      case "symbol": {
        value = `Symbol("${obj[key].description}")`;
        break;
      }
    }
    str += isArray ? `${value},` : `"${key}": ${value},`;
  }
  return `${str}${isArray ? "]" : "}"}`;
};

const $$module2$a = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	getUserConfig: getUserConfig$1,
	moveBaseLanguageToFirstIndex: moveBaseLanguageToFirstIndex$1,
	interpolate: interpolate$1,
	localizePath: localizePath$2,
	localizeUrl: localizeUrl$1,
	detectLocaleFromPath: detectLocaleFromPath$1,
	deeplyStringifyObject: deeplyStringifyObject$1
}, Symbol.toStringTag, { value: 'Module' }));

createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-i18next@1.0.0-beta.5_astro@1.1.1/node_modules/astro-i18next/src/components/Trans.astro", { modules: [{ module: $$module2$a, specifier: "../utils", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$Q = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-i18next@1.0.0-beta.5_astro@1.1.1/node_modules/astro-i18next/src/components/Trans.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Trans = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$Q, $$props, $$slots);
  Astro2.self = $$Trans;
  const { i18nKey, ns } = Astro2.props;
  const referenceString = await Astro2.slots.render("default");
  return renderTemplate`${renderComponent($$result, "Fragment", Fragment, {}, { "default": () => renderTemplate`${markHTMLString(interpolate$1(i18nKey, referenceString, ns))}` })}
`;
});

createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-i18next@1.0.0-beta.5_astro@1.1.1/node_modules/astro-i18next/src/components/LanguageSelector.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module2$e, specifier: "iso-639-1", assert: {} }, { module: localeEmoji, specifier: "locale-emoji", assert: {} }, { module: $$module2$a, specifier: "../utils", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$P = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-i18next@1.0.0-beta.5_astro@1.1.1/node_modules/astro-i18next/src/components/LanguageSelector.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$LanguageSelector$1 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$P, $$props, $$slots);
  Astro2.self = $$LanguageSelector$1;
  const supportedLanguages = i18next__default.languages;
  const currentLanguage = i18next__default.language;
  const { pathname } = Astro2.url;
  const { showFlag = false, ...attributes } = Astro2.props;
  return renderTemplate`${maybeRenderHead($$result)}<select onchange="location = this.value;"${spreadAttributes(attributes)}>
  ${supportedLanguages.map((supportedLanguage) => {
    let value = localizePath$2(pathname, supportedLanguage);
    const flag = showFlag ? localeEmoji__default(supportedLanguage) + " " : "";
    const nativeName = $$module2__default.getNativeName(supportedLanguage);
    const label = flag + nativeName;
    return renderTemplate`<option${addAttribute(value, "value")}${addAttribute(supportedLanguage === currentLanguage, "selected")}>
          ${label}
        </option>`;
  })}
</select>`;
});

createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-i18next@1.0.0-beta.5_astro@1.1.1/node_modules/astro-i18next/src/components/HeadHrefLangs.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module2$a, specifier: "../utils", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$O = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-i18next@1.0.0-beta.5_astro@1.1.1/node_modules/astro-i18next/src/components/HeadHrefLangs.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$HeadHrefLangs = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$O, $$props, $$slots);
  Astro2.self = $$HeadHrefLangs;
  const supportedLanguages = i18next__default.languages;
  const currentUrl = Astro2.url.href;
  return renderTemplate`${supportedLanguages.map((supportedLanguage) => renderTemplate`<link rel="alternate"${addAttribute(supportedLanguage, "hreflang")}${addAttribute(localizeUrl$1(currentUrl, supportedLanguage), "href")}>`)}
`;
});

const $$module3$6 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	Trans: $$Trans,
	LanguageSelector: $$LanguageSelector$1,
	HeadHrefLangs: $$HeadHrefLangs
}, Symbol.toStringTag, { value: 'Module' }));

const SPRITESHEET_NAMESPACE = `astroicon`;

const $$module1$7 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	SPRITESHEET_NAMESPACE
}, Symbol.toStringTag, { value: 'Module' }));

const baseURL = "https://api.astroicon.dev/v1/";
const requests = /* @__PURE__ */ new Map();
const fetchCache = /* @__PURE__ */ new Map();
async function get(pack, name) {
  const url = new URL(`./${pack}/${name}`, baseURL).toString();
  if (requests.has(url)) {
    return await requests.get(url);
  }
  if (fetchCache.has(url)) {
    return fetchCache.get(url);
  }
  let request = async () => {
    const res = await fetch(url);
    if (!res.ok) {
      throw new Error(await res.text());
    }
    const contentType = res.headers.get("Content-Type");
    if (!contentType.includes("svg")) {
      throw new Error(`[astro-icon] Unable to load "${name}" because it did not resolve to an SVG!

Recieved the following "Content-Type":
${contentType}`);
    }
    const svg = await res.text();
    fetchCache.set(url, svg);
    requests.delete(url);
    return svg;
  };
  let promise = request();
  requests.set(url, promise);
  return await promise;
}

const splitAttrsTokenizer = /([a-z0-9_\:\-]*)\s*?=\s*?(['"]?)(.*?)\2\s+/gim;
const domParserTokenizer = /(?:<(\/?)([a-zA-Z][a-zA-Z0-9\:]*)(?:\s([^>]*?))?((?:\s*\/)?)>|(<\!\-\-)([\s\S]*?)(\-\->)|(<\!\[CDATA\[)([\s\S]*?)(\]\]>))/gm;
const splitAttrs = (str) => {
  let res = {};
  let token;
  if (str) {
    splitAttrsTokenizer.lastIndex = 0;
    str = " " + (str || "") + " ";
    while (token = splitAttrsTokenizer.exec(str)) {
      res[token[1]] = token[3];
    }
  }
  return res;
};
function optimizeSvg(contents, name, options) {
  return optimize(contents, {
    plugins: [
      "removeDoctype",
      "removeXMLProcInst",
      "removeComments",
      "removeMetadata",
      "removeXMLNS",
      "removeEditorsNSData",
      "cleanupAttrs",
      "minifyStyles",
      "convertStyleToAttrs",
      {
        name: "cleanupIDs",
        params: { prefix: `${SPRITESHEET_NAMESPACE}:${name}` }
      },
      "removeRasterImages",
      "removeUselessDefs",
      "cleanupNumericValues",
      "cleanupListOfValues",
      "convertColors",
      "removeUnknownsAndDefaults",
      "removeNonInheritableGroupAttrs",
      "removeUselessStrokeAndFill",
      "removeViewBox",
      "cleanupEnableBackground",
      "removeHiddenElems",
      "removeEmptyText",
      "convertShapeToPath",
      "moveElemsAttrsToGroup",
      "moveGroupAttrsToElems",
      "collapseGroups",
      "convertPathData",
      "convertTransform",
      "removeEmptyAttrs",
      "removeEmptyContainers",
      "mergePaths",
      "removeUnusedNS",
      "sortAttrs",
      "removeTitle",
      "removeDesc",
      "removeDimensions",
      "removeStyleElement",
      "removeScriptElement"
    ]
  }).data;
}
const preprocessCache = /* @__PURE__ */ new Map();
function preprocess(contents, name, { optimize }) {
  if (preprocessCache.has(contents)) {
    return preprocessCache.get(contents);
  }
  if (optimize) {
    contents = optimizeSvg(contents, name);
  }
  domParserTokenizer.lastIndex = 0;
  let result = contents;
  let token;
  if (contents) {
    while (token = domParserTokenizer.exec(contents)) {
      const tag = token[2];
      if (tag === "svg") {
        const attrs = splitAttrs(token[3]);
        result = contents.slice(domParserTokenizer.lastIndex).replace(/<\/svg>/gim, "").trim();
        const value = { innerHTML: result, defaultProps: attrs };
        preprocessCache.set(contents, value);
        return value;
      }
    }
  }
}
function normalizeProps(inputProps) {
  const size = inputProps.size;
  delete inputProps.size;
  const w = inputProps.width ?? size;
  const h = inputProps.height ?? size;
  const width = w ? toAttributeSize(w) : void 0;
  const height = h ? toAttributeSize(h) : void 0;
  return { ...inputProps, width, height };
}
const toAttributeSize = (size) => String(size).replace(/(?<=[0-9])x$/, "em");
const fallback = {
  innerHTML: '<rect width="24" height="24" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" />',
  props: {
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    stroke: "currentColor",
    "aria-hidden": "true"
  }
};
async function load(name, inputProps, optimize) {
  const key = name;
  if (!name) {
    throw new Error("<Icon> requires a name!");
  }
  let svg = "";
  let filepath = "";
  if (name.includes(":")) {
    const [pack, ..._name] = name.split(":");
    name = _name.join(":");
    filepath = `/src/icons/${pack}`;
    let get$1;
    try {
      const files = /* #__PURE__ */ Object.assign({});
      const keys = Object.fromEntries(
        Object.keys(files).map((key2) => [key2.replace(/\.[cm]?[jt]s$/, ""), key2])
      );
      if (!(filepath in keys)) {
        throw new Error(`Could not find the file "${filepath}"`);
      }
      const mod = files[keys[filepath]];
      if (typeof mod.default !== "function") {
        throw new Error(
          `[astro-icon] "${filepath}" did not export a default function!`
        );
      }
      get$1 = mod.default;
    } catch (e) {
    }
    if (typeof get$1 === "undefined") {
      get$1 = get.bind(null, pack);
    }
    const contents = await get$1(name);
    if (!contents) {
      throw new Error(
        `<Icon pack="${pack}" name="${name}" /> did not return an icon!`
      );
    }
    if (!/<svg/gim.test(contents)) {
      throw new Error(
        `Unable to process "<Icon pack="${pack}" name="${name}" />" because an SVG string was not returned!

Recieved the following content:
${contents}`
      );
    }
    svg = contents;
  } else {
    filepath = `/src/icons/${name}.svg`;
    try {
      const files = /* #__PURE__ */ Object.assign({});
      if (!(filepath in files)) {
        throw new Error(`Could not find the file "${filepath}"`);
      }
      const contents = files[filepath];
      if (!/<svg/gim.test(contents)) {
        throw new Error(
          `Unable to process "${filepath}" because it is not an SVG!

Recieved the following content:
${contents}`
        );
      }
      svg = contents;
    } catch (e) {
      throw new Error(
        `[astro-icon] Unable to load "${filepath}". Does the file exist?`
      );
    }
  }
  const { innerHTML, defaultProps } = preprocess(svg, key, { optimize });
  if (!innerHTML.trim()) {
    throw new Error(`Unable to parse "${filepath}"!`);
  }
  return {
    innerHTML,
    props: { ...defaultProps, ...normalizeProps(inputProps) }
  };
}

const $$module2$9 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	preprocess,
	normalizeProps,
	fallback,
	default: load
}, Symbol.toStringTag, { value: 'Module' }));

const $$module4$8 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null
}, Symbol.toStringTag, { value: 'Module' }));

createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-icon@0.7.3/node_modules/astro-icon/lib/Icon.astro", { modules: [{ module: $$module2$9, specifier: "./utils.ts", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$N = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-icon@0.7.3/node_modules/astro-icon/lib/Icon.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Icon = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$N, $$props, $$slots);
  Astro2.self = $$Icon;
  let { name, pack, title, optimize = true, class: className, ...inputProps } = Astro2.props;
  let props = {};
  if (pack) {
    name = `${pack}:${name}`;
  }
  let innerHTML = "";
  try {
    const svg = await load(name, { ...inputProps, class: className }, optimize);
    innerHTML = svg.innerHTML;
    props = svg.props;
  } catch (e) {
    {
      throw new Error(`[astro-icon] Unable to load icon "${name}"!
${e}`);
    }
  }
  return renderTemplate`${maybeRenderHead($$result)}<svg${spreadAttributes(props)}${addAttribute(name, "astro-icon")}>${markHTMLString((title ? `<title>${title}</title>` : "") + innerHTML)}</svg>`;
});

const AstroIcon = Symbol("AstroIcon");
function trackSprite(result, name) {
  if (typeof result[AstroIcon] !== "undefined") {
    result[AstroIcon]["sprites"].add(name);
  } else {
    result[AstroIcon] = {
      sprites: /* @__PURE__ */ new Set([name])
    };
  }
}
const warned = /* @__PURE__ */ new Set();
async function getUsedSprites(result) {
  if (typeof result[AstroIcon] !== "undefined") {
    return Array.from(result[AstroIcon]["sprites"]);
  }
  const pathname = result._metadata.pathname;
  if (!warned.has(pathname)) {
    console.log(`[astro-icon] No sprites found while rendering "${pathname}"`);
    warned.add(pathname);
  }
  return [];
}

const $$module3$5 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	trackSprite,
	getUsedSprites
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$J = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-icon@0.7.3/node_modules/astro-icon/lib/Spritesheet.astro", { modules: [{ module: $$module1$7, specifier: "./constants", assert: {} }, { module: $$module2$9, specifier: "./utils.ts", assert: {} }, { module: $$module3$5, specifier: "./context.ts", assert: {} }, { module: $$module4$8, specifier: "./Props.ts", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$M = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-icon@0.7.3/node_modules/astro-icon/lib/Spritesheet.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Spritesheet = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$M, $$props, $$slots);
  Astro2.self = $$Spritesheet;
  const { optimize = true, style, ...props } = Astro2.props;
  const names = await getUsedSprites($$result);
  const icons = await Promise.all(names.map((name) => {
    return load(name, {}, optimize).then((res) => ({ ...res, name })).catch((e) => {
      {
        throw new Error(`[astro-icon] Unable to load icon "${name}"!
${e}`);
      }
    });
  }));
  return renderTemplate`${maybeRenderHead($$result)}<svg${addAttribute(`display: none; ${style ?? ""}`.trim(), "style")}${spreadAttributes({ "aria-hidden": true, ...props })} astro-icon-spritesheet>
    ${icons.map((icon) => renderTemplate`<symbol${spreadAttributes(icon.props)}${addAttribute(`${SPRITESHEET_NAMESPACE}:${icon.name}`, "id")}>${markHTMLString(icon.innerHTML)}</symbol>`)}
</svg>`;
});

const $$file$J = "/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-icon@0.7.3/node_modules/astro-icon/lib/Spritesheet.astro";
const $$url$J = undefined;

const $$module1$6 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$J,
	default: $$Spritesheet,
	file: $$file$J,
	url: $$url$J
}, Symbol.toStringTag, { value: 'Module' }));

createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-icon@0.7.3/node_modules/astro-icon/lib/SpriteProvider.astro", { modules: [{ module: $$module1$6, specifier: "./Spritesheet.astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$L = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-icon@0.7.3/node_modules/astro-icon/lib/SpriteProvider.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$SpriteProvider = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$L, $$props, $$slots);
  Astro2.self = $$SpriteProvider;
  const content = await Astro2.slots.render("default");
  return renderTemplate`${renderComponent($$result, "Fragment", Fragment, {}, { "default": () => renderTemplate`${markHTMLString(content)}` })}
${renderComponent($$result, "Spritesheet", $$Spritesheet, {})}
`;
});

createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-icon@0.7.3/node_modules/astro-icon/lib/Sprite.astro", { modules: [{ module: $$module1$7, specifier: "./constants", assert: {} }, { module: $$module2$9, specifier: "./utils.ts", assert: {} }, { module: $$module3$5, specifier: "./context.ts", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$K = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/node_modules/.pnpm/astro-icon@0.7.3/node_modules/astro-icon/lib/Sprite.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Sprite = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$K, $$props, $$slots);
  Astro2.self = $$Sprite;
  let { name, pack, title, class: className, x, y, ...inputProps } = Astro2.props;
  const props = normalizeProps(inputProps);
  if (pack) {
    name = `${pack}:${name}`;
  }
  const href = `#${SPRITESHEET_NAMESPACE}:${name}`;
  trackSprite($$result, name);
  return renderTemplate`${maybeRenderHead($$result)}<svg${spreadAttributes(props)}${addAttribute(className, "class")}${addAttribute(name, "astro-icon")}>
    ${title ? renderTemplate`<title>${title}</title>` : ""}
    <use${spreadAttributes({ "xlink:href": href, width: props.width, height: props.height, x, y })}></use>
</svg>`;
});

const deprecate = (component, message) => {
  return (...args) => {
    console.warn(message);
    return component(...args);
  };
};
const Spritesheet = deprecate(
  $$Spritesheet,
  `Direct access to <Spritesheet /> has been deprecated! Please wrap your contents in <Sprite.Provider> instead!`
);
const SpriteSheet = deprecate(
  $$Spritesheet,
  `Direct access to <SpriteSheet /> has been deprecated! Please wrap your contents in <Sprite.Provider> instead!`
);
const Sprite = Object.assign($$Sprite, { Provider: $$SpriteProvider });

const $$module1$5 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Icon,
	Icon: $$Icon,
	Spritesheet,
	SpriteSheet,
	SpriteProvider: $$SpriteProvider,
	Sprite
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$I = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/AppFooter.astro", { modules: [{ module: $$module1$5, specifier: "astro-icon", assert: {} }, { module: $$module6$6, specifier: "store/constants", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$J = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/AppFooter.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$AppFooter = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$J, $$props, $$slots);
  Astro2.self = $$AppFooter;
  const portfolioTechIcon = [
    "mdi:vuejs",
    "simple-icons:astro",
    "simple-icons:netlify"
  ];
  return renderTemplate`${maybeRenderHead($$result)}<footer class="container mx-auto flex flex-col lg:flex-row items-center justify-center m-5">
<div class="flex flex-col items-center">
    <ul class="flex flex-wrap relative list-none p-0 md:hidden">
   ${socialMedia.map(({ name, icon, url }) => renderTemplate`<li class="my-2 text-light-slate font-mono text-3xl whitespace-nowrap mx-1">
            ${renderComponent($$result, "Icon", $$Icon, { "name": icon, "class": "h-8" })}
        </li>`)}
    </ul>
    <p class="text-sm text-lightest-slate font-mono" v-text="$t('built-by')">Built by Yuniel Acosta</p>
    <p class="text-xs text-light-slate font-mono my-2" v-text="$t('design-by')">Design based on Brittany Chiang portfolio
    </p>
    <ul class="flex flex-wrap relative list-none p-0">
     ${portfolioTechIcon.map((icon) => renderTemplate`<li class="my-2 text-light-slate font-mono text-xs whitespace-nowrap mx-1">
        ${renderComponent($$result, "Icon", $$Icon, { "name": icon, "class": "h-4" })}
      </li>`)}
    </ul>
  </div>
</footer>`;
});

const $$file$I = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/AppFooter.astro";
const $$url$I = undefined;

const $$module4$7 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$I,
	default: $$AppFooter,
	file: $$file$I,
	url: $$url$I
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$H = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/Side.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$I = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/Side.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Side = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$I, $$props, $$slots);
  Astro2.self = $$Side;
  const { orientation, show } = Astro2.props;
  return renderTemplate`${show && renderTemplate`${maybeRenderHead($$result)}<div${addAttribute(`fixed bottom-0 z-10 hidden w-10 text-gray-500 md:block ${orientation === "left" ? "right-auto md:left-5 lg:left-10" : "left-auto md:right-5 lg:right-10 "}`, "class")}>
            ${renderSlot($$result, $$slots["default"])}
        </div>`}`;
});

const $$file$H = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/Side.astro";
const $$url$H = undefined;

const $$module2$8 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$H,
	default: $$Side,
	file: $$file$H,
	url: $$url$H
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$G = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/Social.astro", { modules: [{ module: $$module2$8, specifier: "atoms:Side", assert: {} }, { module: $$module6$6, specifier: "store/constants", assert: {} }, { module: $$module1$5, specifier: "astro-icon", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$H = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/Social.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Social = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$H, $$props, $$slots);
  Astro2.self = $$Social;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${renderComponent($$result, "Side", $$Side, { "show": true, "orientation": "left", "class": "astro-2FYQXDTM" }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<ul class="social-links astro-2FYQXDTM">
        ${socialMedia.map((social) => renderTemplate`<li class="astro-2FYQXDTM">
                    <a${addAttribute(social.url, "href")} target="_blank" class="my-1.5 astro-2FYQXDTM">
                        ${renderComponent($$result, "Icon", $$Icon, { "name": social.icon, "class": "astro-2FYQXDTM" })}
                    </a>
                </li>`)}
    </ul>` })}

`;
});

const $$file$G = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/Social.astro";
const $$url$G = undefined;

const $$module5$5 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$G,
	default: $$Social,
	file: $$file$G,
	url: $$url$G
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$F = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/Email.astro", { modules: [{ module: $$module6$6, specifier: "@store:constants", assert: {} }, { module: $$module2$8, specifier: "atoms:Side", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$G = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/Email.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Email = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$G, $$props, $$slots);
  Astro2.self = $$Email;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${renderComponent($$result, "Side", $$Side, { "show": true, "orientation": "right", "class": "astro-EWAKNAKR" }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<div class="email-side astro-EWAKNAKR">
        <a${addAttribute(`mailto:${email}`, "href")} class="astro-EWAKNAKR">${email}</a>
    </div>` })}

`;
});

const $$file$F = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/Email.astro";
const $$url$F = undefined;

const $$module6$4 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$F,
	default: $$Email,
	file: $$file$F,
	url: $$url$F
}, Symbol.toStringTag, { value: 'Module' }));

const SHOW_ADS_BANNER = "SHOW_ADS_BANNER";
const getShowAdsBanner = () => {
  const adsBanner = localStorage.getItem(SHOW_ADS_BANNER);
  if (adsBanner === null) {
    localStorage.setItem(SHOW_ADS_BANNER, "true");
    return true;
  }
  return adsBanner === "true";
};
const generalStore = atom({
  drawer: false,
  showNavbar: true,
  showAdsBanner: getShowAdsBanner(),
  showSide: true,
  loading: false,
  firstTimeLoading: true,
  swStatus: "pending",
  searchModal: false
});

const _sfc_main$1 = /* @__PURE__ */ defineComponent({
  __name: "BannerWrapper",
  __ssrInlineRender: true,
  setup(__props) {
    const $generalStore = useStore(generalStore);
    return (_ctx, _push, _parent, _attrs) => {
      if (unref($generalStore).showAdsBanner) {
        _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex items-center transition-height delay-200 h-10 bg-green-400 hover:bg-green-500" }, _attrs))}><p class="text-navy group-hover:text-black sm:top-1.5 w-full pl-4 sm:text-center text-sm">`);
        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
        _push(`</p><button>`);
        ssrRenderSlot(_ctx.$slots, "close-button-icon", {}, null, _push, _parent);
        _push(`</button></div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});

const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("src/components/atoms/BannerWrapper.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};

const $$module3$4 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: _sfc_main$1
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$E = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/AdsBanner.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module3$6, specifier: "astro-i18next/components", assert: {} }, { module: $$module3$4, specifier: "./BannerWrapper.vue", assert: {} }, { module: $$module1$5, specifier: "astro-icon", assert: {} }], hydratedComponents: [_sfc_main$1], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["idle"]), hoisted: [] });
const $$Astro$F = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/AdsBanner.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$AdsBanner = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$F, $$props, $$slots);
  Astro2.self = $$AdsBanner;
  return renderTemplate`${renderComponent($$result, "BannerWrapper", _sfc_main$1, { "client:idle": true, "client:component-hydration": "idle", "client:component-path": "/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/BannerWrapper.vue", "client:component-export": "default" }, { "close-button-icon": () => renderTemplate`${renderComponent($$result, "Icon", $$Icon, { "slot": "close-button-icon", "id": "close-icon", "name": "ion:close-circle-outline", "class": "text-navy mr-6 h-6 hover:h-7 hover:cursor-pointer" })}`, "default": () => renderTemplate`${renderComponent($$result, "Trans", $$Trans, { "i18nKey": "bannerDescription" }, { "default": () => renderTemplate`
        This page is under construction 👷‍♂️ 🏗 🚧. If you want to
        check more about me please visit my blog on
        ${maybeRenderHead($$result)}<a rel="noopener nofollow noreferrer" target="_blank" tabindex="0" class="underline hover:no-underline hover:bg-light-navy hover:px-2 decoration-2 decoration-cyan-500" href="https://www.yunielacosta.com"${addAttribute(t("portfolio"), "title")}>
            portfolio
        </a>${" "}
        🚀!
    ` })}` })}`;
});

const $$file$E = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/AdsBanner.astro";
const $$url$E = undefined;

const $$module7$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$E,
	default: $$AdsBanner,
	file: $$file$E,
	url: $$url$E
}, Symbol.toStringTag, { value: 'Module' }));

// src/utils.ts
var getUserConfig = async (root, configPath) => {
  const resolvedRoot = fileURLToPath(root);
  let userConfigPath;
  if (configPath) {
    const configPathWithLeadingSlash = /^\.*\//.test(configPath) ? configPath : `./${configPath}`;
    userConfigPath = fileURLToPath(new URL(configPathWithLeadingSlash, root));
  }
  load$1.use([typescript]);
  return await load$1("astro-i18next", {
    mustExist: false,
    cwd: resolvedRoot,
    filePath: userConfigPath
  });
};
var moveBaseLanguageToFirstIndex = (supportedLocales, baseLocale) => {
  const baseLocaleIndex = supportedLocales.indexOf(baseLocale);
  supportedLocales.splice(baseLocaleIndex, 1);
  supportedLocales.unshift(baseLocale);
};
var interpolate = (i18nKey, referenceString, namespace = null) => {
  const localizedString = t(i18nKey, { ns: namespace });
  if (localizedString === i18nKey) {
    console.warn(`WARNING(astro-i18next): missing translation key ${i18nKey}.`);
    return referenceString;
  }
  const tagsRegex = /<([\w\d]+)([^>]*)>/gi;
  const referenceStringMatches = referenceString.match(tagsRegex);
  if (!referenceStringMatches) {
    console.warn(
      "WARNING(astro-i18next): default slot does not include any HTML tag to interpolate! You should use the `t` function directly."
    );
    return localizedString;
  }
  const referenceTags = [];
  referenceStringMatches.forEach((tagNode) => {
    const [, name, attributes] = tagsRegex.exec(tagNode);
    referenceTags.push({ name, attributes });
    tagsRegex.exec("");
  });
  let interpolatedString = localizedString;
  for (let index = 0; index < referenceTags.length; index++) {
    const referencedTag = referenceTags[index];
    interpolatedString = interpolatedString.replaceAll(
      `<${index}>`,
      `<${referencedTag.name}${referencedTag.attributes}>`
    );
    interpolatedString = interpolatedString.replaceAll(
      `</${index}>`,
      `</${referencedTag.name}>`
    );
  }
  return interpolatedString;
};
var localizePath$1 = (path = "/", locale = null) => {
  if (!locale) {
    locale = i18next__default.language;
  }
  if (!i18next__default.options.supportedLngs.includes(locale)) {
    console.warn(
      `WARNING(astro-i18next): "${locale}" locale is not supported, add it to the supportedLngs in your astro config.`
    );
    return path;
  }
  path = path.replace(/^\/+/g, "");
  let pathSegments = path.split("/");
  if (JSON.stringify(pathSegments) === JSON.stringify([""]) || JSON.stringify(pathSegments) === JSON.stringify(["", ""])) {
    return locale === i18next__default.options.supportedLngs[0] ? `/` : `/${locale}/`;
  }
  const otherLocales = [...i18next__default.options.supportedLngs];
  for (const otherLocale of otherLocales) {
    if (pathSegments[0] === otherLocale) {
      pathSegments.shift();
      break;
    }
  }
  if (locale !== i18next__default.options.supportedLngs[0]) {
    pathSegments = [locale, ...pathSegments];
  }
  return "/" + pathSegments.join("/");
};
var localizeUrl = (url, locale = null) => {
  const [protocol, , host, ...path] = url.split("/");
  const baseUrl = protocol + "//" + host;
  return baseUrl + localizePath$1(path.join("/"), locale);
};
var detectLocaleFromPath = (path) => {
  path = path.replace(/^\/+/g, "");
  const pathSegments = path.split("/");
  if (JSON.stringify(pathSegments) === JSON.stringify([""]) || JSON.stringify(pathSegments) === JSON.stringify(["", ""])) {
    return i18next__default.options.supportedLngs[0];
  }
  const otherLocales = [...i18next__default.options.supportedLngs];
  for (const otherLocale of otherLocales) {
    if (pathSegments[0] === otherLocale) {
      return otherLocale;
    }
  }
  return i18next__default.options.supportedLngs[0];
};
var deeplyStringifyObject = (obj) => {
  const isArray = Array.isArray(obj);
  let str = isArray ? "[" : "{";
  for (const key in obj) {
    if (obj[key] === null || obj[key] === void 0) {
      continue;
    }
    let value = null;
    switch (typeof obj[key]) {
      case "string": {
        value = `"${obj[key]}"`;
        break;
      }
      case "number":
      case "boolean": {
        value = obj[key];
        break;
      }
      case "object": {
        value = deeplyStringifyObject(obj[key]);
        break;
      }
      case "function": {
        value = obj[key].toString().replace(/\s+/g, " ");
        break;
      }
      case "symbol": {
        value = `Symbol("${obj[key].description}")`;
        break;
      }
    }
    str += isArray ? `${value},` : `"${key}": ${value},`;
  }
  return `${str}${isArray ? "]" : "}"}`;
};

// src/index.ts
var src_default = (options) => {
  const customConfigPath = options == null ? void 0 : options.configPath;
  return {
    name: "astro-i18next",
    hooks: {
      "astro:config:setup": async ({ config, injectScript }) => {
        const userConfig = await getUserConfig(config.root, customConfigPath);
        if (customConfigPath && !(userConfig == null ? void 0 : userConfig.value)) {
          throw new Error(
            `[astro-i18next]: Could not find a config file at ${JSON.stringify(
              customConfigPath
            )}. Does the file exist?`
          );
        }
        const astroI18nextConfig = userConfig == null ? void 0 : userConfig.value;
        if (!astroI18nextConfig.defaultLanguage || astroI18nextConfig.defaultLanguage === "") {
          throw new Error(
            "[astro-i18next]: you must set a `baseLanguage` in your astroI18nextConfig!"
          );
        }
        if (!astroI18nextConfig.supportedLanguages) {
          astroI18nextConfig.supportedLanguages = [
            astroI18nextConfig.defaultLanguage
          ];
        }
        if (!astroI18nextConfig.supportedLanguages.includes(
          astroI18nextConfig.defaultLanguage
        )) {
          astroI18nextConfig.supportedLanguages.unshift(
            astroI18nextConfig.defaultLanguage
          );
        }
        if (astroI18nextConfig.supportedLanguages[0] !== astroI18nextConfig.defaultLanguage) {
          moveBaseLanguageToFirstIndex(
            astroI18nextConfig.supportedLanguages,
            astroI18nextConfig.defaultLanguage
          );
        }
        astroI18nextConfig.i18next.supportedLngs = [
          ...astroI18nextConfig.supportedLanguages
        ];
        astroI18nextConfig.i18next.fallbackLng = [
          ...astroI18nextConfig.supportedLanguages
        ];
        let imports = `import i18next from "i18next";`;
        let i18nextInit = `i18next`;
        if (astroI18nextConfig.i18nextPlugins && Object.keys(astroI18nextConfig.i18nextPlugins).length > 0) {
          for (const key of Object.keys(astroI18nextConfig.i18nextPlugins)) {
            imports += `import ${key} from "${astroI18nextConfig.i18nextPlugins[key]}";`;
          }
          for (const key of Object.keys(astroI18nextConfig.i18nextPlugins)) {
            i18nextInit += `.use(${key})`;
          }
        }
        i18nextInit += `.init(${deeplyStringifyObject(
          astroI18nextConfig.i18next
        )});`;
        injectScript("page-ssr", imports + i18nextInit);
      }
    }
  };
};

const $$module2$7 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: src_default,
	detectLocaleFromPath,
	interpolate,
	localizePath: localizePath$1,
	localizeUrl
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$D = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/LanguageSelector.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: localeEmoji, specifier: "locale-emoji", assert: {} }, { module: $$module2$7, specifier: "astro-i18next", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$E = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/LanguageSelector.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$LanguageSelector = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$E, $$props, $$slots);
  Astro2.self = $$LanguageSelector;
  const supportedLanguages = i18next__default.languages;
  const currentLanguage = i18next__default.language;
  const { pathname } = Astro2.url;
  const { ...attributes } = Astro2.props;
  return renderTemplate`${maybeRenderHead($$result)}<select onchange="location = this.value;"${spreadAttributes(attributes)}>
  ${supportedLanguages.map((supportedLanguage) => {
    let value = localizePath$1(pathname, supportedLanguage);
    const flag = localeEmoji__default(supportedLanguage);
    return renderTemplate`<option${addAttribute(value, "value")}${addAttribute(supportedLanguage === currentLanguage, "selected")}>
        ${flag}
      </option>`;
  })}
</select>`;
});

const $$file$D = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/LanguageSelector.astro";
const $$url$D = undefined;

const $$module8$2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$D,
	default: $$LanguageSelector,
	file: $$file$D,
	url: $$url$D
}, Symbol.toStringTag, { value: 'Module' }));

const idMax = 100;
const navMenus = [
  {
    id: `yap-${Math.floor(Math.random() * idMax)}`,
    title: "about",
    link: "/#about",
    dataCypress: "about"
  },
  {
    id: `yap-${Math.floor(Math.random() * idMax)}`,
    title: "experience",
    link: "/#jobs",
    dataCypress: "jobs"
  },
  {
    id: `yap-${Math.floor(Math.random() * idMax)}`,
    title: "work",
    link: "/#projects",
    dataCypress: "projects"
  },
  {
    id: `yap-${Math.floor(Math.random() * idMax)}`,
    title: "last-articles",
    link: "/#last3articles",
    dataCypress: "last3articles"
  },
  {
    id: `yap-${Math.floor(Math.random() * idMax)}`,
    title: "contact",
    link: "/#contact",
    dataCypress: "contact"
  },
  {
    id: `yap-${Math.floor(Math.random() * idMax)}`,
    title: "blog",
    link: "/blog",
    dataCypress: "blog"
  }
];

const $$module4$6 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	navMenus
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$C = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/Menus.astro", { modules: [{ module: $$module2$7, specifier: "astro-i18next", assert: {} }, { module: i18next, specifier: "i18next", assert: {} }, { module: $$module8$2, specifier: "atoms:LanguageSelector", assert: {} }, { module: $$module4$6, specifier: "@models:Menu", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$D = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/Menus.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Menus = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$D, $$props, $$slots);
  Astro2.self = $$Menus;
  const { drawer } = Astro2.props;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<ul class="menu-list astro-PVRDEY3B" data-cypress="menu">
	<!-- <li class="mb-6 lg:mb-0">
        <div
            v-if="!$generalStore.showSide"
            class="cursor-pointer text-lightest-slate hover:text-gray-600"
        >
            Search
        </div>
    </li> -->
	<li class="astro-PVRDEY3B">
		<ol${addAttribute(`order-list items-center space-y-6 lg:space-y-0 lg:space-x-2 lg:flex ${drawer ? "flex-col" : "hidden"} astro-PVRDEY3B`, "class")}>
			${navMenus.map((menu) => renderTemplate`<li class="astro-PVRDEY3B">
						<a${addAttribute(localizePath$1(menu.link), "href")}${addAttribute(menu.id, "id")} data-drawer-dismiss="menu-drawer" aria-controls="menu-drawer" class="astro-PVRDEY3B">
							${t("menus." + menu.title)}
						</a>
					</li>`)}
		</ol>
	</li>
	<li class="astro-PVRDEY3B">
		${renderComponent($$result, "LanguageSelector", $$LanguageSelector, { "showFlag": true, "class": "cursor-pointer select-none rounded border-b border-transparent bg-transparent text-sm text-green-500 hover:border-green-500 hover:bg-green-900 astro-PVRDEY3B" })}
	</li>
	<li class="astro-PVRDEY3B">
		<a href="/files/yuniel_acosta_cv.pdf" target="_blank" class="resume-button astro-PVRDEY3B">
			${t("resume")}
		</a>
	</li>
</ul>

`;
});

const $$file$C = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/Menus.astro";
const $$url$C = undefined;

const $$module1$4 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$C,
	default: $$Menus,
	file: $$file$C,
	url: $$url$C
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$B = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/MenuButton.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$C = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/MenuButton.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$MenuButton = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$C, $$props, $$slots);
  Astro2.self = $$MenuButton;
  const { openMenu } = Astro2.props;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${openMenu && renderTemplate`${maybeRenderHead($$result)}<svg id="open-menu-drawer" type="button" data-drawer-target="menu-drawer" data-drawer-show="menu-drawer" data-drawer-placement="right" aria-controls="menu-drawer" class="ham hamRotate ham7 astro-KX7BI75J" viewBox="0 0 100 100" width="60">
	<path class="line top astro-KX7BI75J" d="m 70,33 h -40 c 0,0 -6,1.368796 -6,8.5 0,7.131204 6,8.5013 6,8.5013 l 20,-0.0013"></path>
	<path class="line middle astro-KX7BI75J" d="m 70,50 h -40"></path>
	<path class="line bottom astro-KX7BI75J" d="m 69.575405,67.073826 h -40 c -5.592752,0 -6.873604,-9.348582 1.371031,-9.348582 8.244634,0 19.053564,21.797129 19.053564,12.274756 l 0,-40"></path>
    </svg><span class="sr-only astro-KX7BI75J">Close menu</span>`}

${!openMenu && renderTemplate`<svg id="close-menu-drawer" type="button" data-drawer-dismiss="menu-drawer" aria-controls="menu-drawer" class="ham hamRotate ham7 p-1 absolute top-1 right-2 astro-KX7BI75J" viewBox="0 0 100 100" width="60">
	<path class="line top astro-KX7BI75J" d="m 70,33 h -40 c 0,0 -6,1.368796 -6,8.5 0,7.131204 6,8.5013 6,8.5013 l 20,-0.0013"></path>
	<path class="line middle astro-KX7BI75J" d="m 70,50 h -40"></path>
	<path class="line bottom astro-KX7BI75J" d="m 69.575405,67.073826 h -40 c -5.592752,0 -6.873604,-9.348582 1.371031,-9.348582 8.244634,0 19.053564,21.797129 19.053564,12.274756 l 0,-40"></path>
    </svg><span class="sr-only astro-KX7BI75J">Close menu</span>`}`;
});

const $$file$B = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/MenuButton.astro";
const $$url$B = undefined;

const $$module1$3 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$B,
	default: $$MenuButton,
	file: $$file$B,
	url: $$url$B
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$A = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/Drawer/index.astro", { modules: [{ module: $$module1$3, specifier: "atoms:MenuButton", assert: {} }, { module: $$module1$4, specifier: "molecules:Menus", assert: {} }, { module: i18next, specifier: "i18next", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [{ type: "external", src: "./drawer.js" }] });
const $$Astro$B = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/Drawer/index.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Index$3 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$B, $$props, $$slots);
  Astro2.self = $$Index$3;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`<!-- drawer init and toggle -->${maybeRenderHead($$result)}<div class="text-center astro-73WCWJVD">
	<div class="z-50 block lg:hidden astro-73WCWJVD">
		${renderComponent($$result, "MenuButton", $$MenuButton, { "openMenu": true, "class": "astro-73WCWJVD" })}
	</div>
</div>

<!-- drawer component -->
<div id="menu-drawer" class="fixed z-40 h-screen p-4 overflow-y-auto w-64 bg-light-navy transition-transform right-0 top-0 transform-none lg:hidden astro-73WCWJVD" tabindex="-1" aria-labelledby="drawer-label" aria-modal="true" role="dialog">
	<h5 id="drawer-label" class="inline-flex items-center mb-4 text-base font-semibold text-gray-500 dark:text-gray-400 astro-73WCWJVD">
		<svg class="w-5 h-5 mr-2 astro-73WCWJVD" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" class="astro-73WCWJVD"></path>
		</svg>
		${t("name")}
	</h5>
	${renderComponent($$result, "MenuButton", $$MenuButton, { "openMenu": false, "class": "astro-73WCWJVD" })}
	${renderComponent($$result, "Menus", $$Menus, { "drawer": true, "class": "astro-73WCWJVD" })}
</div>



`;
});

const $$file$A = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/Drawer/index.astro";
const $$url$A = undefined;

const $$module2$6 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$A,
	default: $$Index$3,
	file: $$file$A,
	url: $$url$A
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$z = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/Navbar.astro", { modules: [{ module: $$module1$4, specifier: "molecules:Menus", assert: {} }, { module: $$module2$6, specifier: "molecules:Drawer/index", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [{ type: "inline", value: `
	let showNavbar = true
	let scrollDirection = 'DOWN'
	let lastScrollPosition = 0
	const navbar = document.getElementById('navbar-header')
	const navbarClassList = navbar.classList
	const navbarClassListAdd = navbarClassList.add.bind(navbarClassList)
	const navbarClassListRemove = navbarClassList.remove.bind(navbarClassList)

	const onScrollEnd = () => {
		if (showNavbar) {
			navbarClassListRemove('navbar--hidden')
		} else {
			navbarClassListAdd('navbar--hidden')
		}
		if (scrollDirection === 'UP' && lastScrollPosition !== 0) {
			navbarClassListAdd('navbar--show')
		} else {
			navbarClassListRemove('navbar--show')
		}
	}
	const onScroll = () => {
		const currentScrollPosition = window.scrollY || document.documentElement.scrollTop
		if (currentScrollPosition < 0) return

		showNavbar = currentScrollPosition < lastScrollPosition
		scrollDirection = currentScrollPosition < lastScrollPosition ? 'UP' : 'DOWN'
		lastScrollPosition = currentScrollPosition

		onScrollEnd()
	}

	window.addEventListener('scroll', onScroll)

` }] });
const $$Astro$A = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/Navbar.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Navbar = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$A, $$props, $$slots);
  Astro2.self = $$Navbar;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<header id="navbar-header" class="fixed z-50 w-full astro-YQQ7IQG4">
	<nav id="acosta-navbar" class="relative flex w-full flex-wrap items-center justify-between py-2 md:py-4 astro-YQQ7IQG4">
		<a href="/" class="border-none astro-YQQ7IQG4">
			<img src="/logo.svg" class="w-10 astro-YQQ7IQG4" alt="acosta-logo">
		</a>

		${renderComponent($$result, "Drawer", $$Index$3, { "class": "astro-YQQ7IQG4" })}

		<div class="hidden lg:block astro-YQQ7IQG4">
			${renderComponent($$result, "Menus", $$Menus, { "drawer": false, "class": "astro-YQQ7IQG4" })}
		</div>
	</nav>
</header>



`;
});

const $$file$z = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/Navbar.astro";
const $$url$z = undefined;

const $$module6$3 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$z,
	default: $$Navbar,
	file: $$file$z,
	url: $$url$z
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$y = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/templates/BaseTemplate.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module2$b, specifier: "organisms:HeadSEO", assert: {} }, { module: $$module3$6, specifier: "astro-i18next/components", assert: {} }, { module: $$module4$7, specifier: "molecules:AppFooter", assert: {} }, { module: $$module5$5, specifier: "atoms:Social", assert: {} }, { module: $$module6$4, specifier: "atoms:Email", assert: {} }, { module: $$module7$1, specifier: "atoms:AdsBanner", assert: {} }, { module: $$module8$2, specifier: "atoms:LanguageSelector", assert: {} }, { module: $$module6$3, specifier: "molecules:Navbar", assert: {} }, { module: $$module6$6, specifier: "@store:constants", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$z = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/templates/BaseTemplate.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$BaseTemplate = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$z, $$props, $$slots);
  Astro2.self = $$BaseTemplate;
  let { title, description, image, ogImageAlt } = Astro2.props;
  title = title || t("seo.title");
  description = description || t("seo.description");
  image = image ? `${domain}${image}` : `${domain}/assets/images/me.png`;
  ogImageAlt = ogImageAlt || t("seo.ogImageAlt");
  return renderTemplate`<html${addAttribute(i18next__default.language, "lang")}>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width">
		${renderComponent($$result, "HeadSEO", $$HeadSEO, { "title": title, "description": description, "image": image, "ogImageAlt": ogImageAlt })}
		${renderComponent($$result, "HeadHrefLangs", $$HeadHrefLangs, {})}
		<!-- Fonts -->
		<link rel="preconnect" href="https://fonts.gstatic.com">
		<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Lato|Rokkitt|Fira+Sans&display=swap">
	${renderHead($$result)}</head>

	<body class="content-wrapper bg-background-primary font-sans text-light-slate leading-normal flex flex-col min-h-screen">
		${renderComponent($$result, "AdsBanner", $$AdsBanner, {})}
		<div class="relative flex flex-col min-h-[100vh]">
			${renderComponent($$result, "Navbar", $$Navbar, {})}
			<div class="container mx-auto flex flex-col xl:flex-row mt-24">
				<main class="container mx-auto px-2">
					${renderSlot($$result, $$slots["default"])}
				</main>
			</div>
			${renderComponent($$result, "Social", $$Social, {})}
			${renderComponent($$result, "Email", $$Email, {})}
		</div>
		${renderComponent($$result, "AppFooter", $$AppFooter, {})}
	</body></html>`;
});

const $$file$y = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/templates/BaseTemplate.astro";
const $$url$y = undefined;

const $$module3$3 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$y,
	default: $$BaseTemplate,
	file: $$file$y,
	url: $$url$y
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$x = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/Hero.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module6$6, specifier: "@store:constants", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$y = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/Hero.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Hero = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$y, $$props, $$slots);
  Astro2.self = $$Hero;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<section class="min-h-screen astro-CYZXAWTR">
    <div class="flex flex-col items-start  astro-CYZXAWTR">
        <h1 class="my-2 font-mono text-base font-normal text-green-500 md:my-6 astro-CYZXAWTR">
            ${t("welcome")}
        </h1>
        <h2 id="generalName" class="text-4xl sm:text-5xl md:text-6xl lg:text-8xl astro-CYZXAWTR">
            ${t("name")}
        </h2>
        <h3 id="phrase"${addAttribute(`text-3xl text-gray-500 sm:text-4xl md:my-2 md:text-5xl lg:text-7xl slogan-${i18next__default.language} astro-CYZXAWTR`, "class")}>
            <!-- {slogan} -->
        </h3>
        <p class="text-justify  my-4 text-xl md:text-2xl max-w-none md:max-w-2xl astro-CYZXAWTR">
            ${t("my-self")}
        </p>
        <footer class="container mx-auto flex flex-col items-center md:items-start astro-CYZXAWTR">
            <a${addAttribute(`mailto:${email}`, "href")} class="big-button my-10 animate-pulse astro-CYZXAWTR">
                ${t("get-in-touch")}
            </a>
        </footer>
    </div>
</section>

`;
});

const $$file$x = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/Hero.astro";
const $$url$x = undefined;

const $$module3$2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$x,
	default: $$Hero,
	file: $$file$x,
	url: $$url$x
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$w = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/About.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$x = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/About.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$About = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$x, $$props, $$slots);
  Astro2.self = $$About;
  const skills = [
    "TypeScript",
    "HTML & (S)CSS",
    "Vue",
    "Node.js",
    "Spring Boot",
    "Java / Kotlin"
  ];
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<section id="about" class="astro-KVVRH6HV">
    <h2 class="numbered-heading astro-KVVRH6HV">${t("menus.about")}</h2>
    <div class="inner astro-KVVRH6HV">
      <div class="styled-text astro-KVVRH6HV">
        <div class="styled-text astro-KVVRH6HV">
          <p class="mb-2 astro-KVVRH6HV">
            ${t("bio")}
          </p>

          <p class="astro-KVVRH6HV">${t("about-tech")}</p>
        </div>
        <ul class="skills-list astro-KVVRH6HV">
          ${skills.map((skill, i) => renderTemplate`<li class="astro-KVVRH6HV">${skill}</li>`)}
        </ul>
      </div>
      <div class="styled-pic astro-KVVRH6HV">
        <div class="wrapper astro-KVVRH6HV">
          <img src="/assets/images/me.png" alt="Yuniel Acosta Pérez" class="img astro-KVVRH6HV">
        </div>
      </div>
    </div>
  </section>

  `;
});

const $$file$w = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/About.astro";
const $$url$w = undefined;

const $$module4$5 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$w,
	default: $$About,
	file: $$file$w,
	url: $$url$w
}, Symbol.toStringTag, { value: 'Module' }));

const randomInt = (min, max) => {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min + 1)) + min;
};
const inlineLinks = (className) => {
  const elements = Array.from(document.querySelectorAll(className));
  const allLinks = new Array();
  elements.forEach((el) => allLinks.push(Array.from(el.querySelectorAll("a"))));
  if (allLinks.length > 0) {
    allLinks.forEach((links) => {
      links.forEach((link) => link.classList.add("inline-link"));
    });
  }
};
const localizePath = (path = "/", locale = null) => {
  if (!locale) {
    locale = i18next__default.language;
  }
  if (!i18next__default.options.supportedLngs?.includes(locale)) {
    return path;
  }
  path = path.replace(/^\/+/g, "");
  let pathSegments = path.split("/");
  if (JSON.stringify(pathSegments) === JSON.stringify([""]) || JSON.stringify(pathSegments) === JSON.stringify(["", ""])) {
    const supportedLanguages2 = i18next__default.options.supportedLngs;
    if (supportedLanguages2)
      return locale === supportedLanguages2[0] ? `/` : `/${locale}/`;
    else
      return `/`;
  }
  const otherLocales = [...i18next__default.options.supportedLngs];
  for (const otherLocale of otherLocales) {
    if (pathSegments[0] === otherLocale) {
      pathSegments.shift();
      break;
    }
  }
  const supportedLanguages = i18next__default.options.supportedLngs;
  if (supportedLanguages && locale !== supportedLanguages[0]) {
    pathSegments = [locale, ...pathSegments];
  }
  return "/" + pathSegments.join("/");
};
const markdownfy = (str) => marked.parse(str);
const urlize = (term) => term.trim().toLowerCase().replace(/\s+/g, "-");

const $$module4$4 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	randomInt,
	inlineLinks,
	localizePath,
	markdownfy,
	urlize
}, Symbol.toStringTag, { value: 'Module' }));

const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Jobs",
  __ssrInlineRender: true,
  props: {
    jobs: {
      type: Array,
      default: () => []
    }
  },
  setup(__props) {
    const jobActiveTabIdKey = "jobActiveTabId";
    const getActiveTabId = () => {
      if (!localStorage.getItem(jobActiveTabIdKey))
        localStorage.setItem(jobActiveTabIdKey, "0");
      return Number.parseInt(localStorage.getItem(jobActiveTabIdKey) || "0");
    };
    const tabId = ref(getActiveTabId());
    const activeTabId = computed({
      get: () => tabId.value,
      set: (value) => {
        tabId.value = value;
        localStorage.setItem(jobActiveTabIdKey, value.toString());
      }
    });
    const breakpoints = useBreakpoints(breakpointsTailwind);
    const sm = breakpoints.smaller("sm");
    const range = (job) => {
      return `${new Date(job.startDate).toDateString()} - ${job.endDate ? new Date(job.endDate).toDateString() : "Present"}`;
    };
    onMounted(() => {
      inlineLinks("styled-tab-content");
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<section${ssrRenderAttrs(mergeProps({
        id: "jobs",
        class: "styled-jobs-section"
      }, _attrs))} data-v-545c1a67><h2 class="numbered-heading" data-v-545c1a67>Where I&#39;ve Worked</h2><div class="inner" data-v-545c1a67><ul class="styled-tab-list" role="tablist" aria-label="Job tabs" data-v-545c1a67><!--[-->`);
      ssrRenderList(__props.jobs, (job, i) => {
        _push(`<li data-v-545c1a67><button${ssrRenderAttr("id", `tab-${i}`)} class="${ssrRenderClass([{ "text-green-500": unref(activeTabId) === i }, "styled-tab-button"])}" role="tab"${ssrRenderAttr("aria-selected", unref(activeTabId) === i ? "true" : "false")}${ssrRenderAttr("aria-controls", `panel-${i}`)}${ssrRenderAttr("tabIndex", unref(activeTabId) === i ? "0" : "-1")} data-v-545c1a67><span data-v-545c1a67>${ssrInterpolate(job.company)}</span></button></li>`);
      });
      _push(`<!--]--><div class="styled-high-light" style="${ssrRenderStyle(
        unref(sm) ? `transform: translateX(calc(${unref(activeTabId)} * 120px));` : `transform: translateY(calc(${unref(activeTabId)} * 42px));`
      )}" data-v-545c1a67></div></ul><div data-v-545c1a67><!--[-->`);
      ssrRenderList(__props.jobs, (job, i) => {
        _push(`<div${ssrRenderAttr("id", `panel-${i}`)} class="styled-tab-content" role="tabpanel"${ssrRenderAttr("tabIndex", unref(activeTabId) === i ? 0 : -1)}${ssrRenderAttr("aria-labelledby", `tab-${i}`)}${ssrRenderAttr("aria-hidden", unref(activeTabId) !== i)}${ssrIncludeBooleanAttr(unref(activeTabId) !== i) ? " hidden" : ""} data-v-545c1a67><h3 data-v-545c1a67><span data-v-545c1a67>${ssrInterpolate(job.role)}</span><span class="company" data-v-545c1a67> \xA0@\xA0 <a${ssrRenderAttr("href", job.url)} class="inline-link" data-v-545c1a67>${ssrInterpolate(job.company)}</a></span></h3><p class="range" data-v-545c1a67>${ssrInterpolate(range(job))}</p><ul data-v-545c1a67><!--[-->`);
        ssrRenderList(job.achievement, (detail, index) => {
          _push(`<li data-v-545c1a67><span data-v-545c1a67>${ssrInterpolate(detail)}</span></li>`);
        });
        _push(`<!--]--></ul></div>`);
      });
      _push(`<!--]--></div></div></section>`);
    };
  }
});

const _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("src/components/organisms/jobs/Jobs.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const Jobs = /* @__PURE__ */ _export_sfc(_sfc_main, [["__scopeId", "data-v-545c1a67"]]);

const $$module1$2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: Jobs
}, Symbol.toStringTag, { value: 'Module' }));

const $$module2$5 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$v = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/jobs/index.astro", { modules: [{ module: $$module1$2, specifier: "./Jobs.vue", assert: {} }, { module: $$module2$5, specifier: "@models:Job", assert: {} }, { module: i18next, specifier: "i18next", assert: {} }], hydratedComponents: [Jobs], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set(["idle"]), hoisted: [] });
const $$Astro$w = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/jobs/index.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Index$2 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$w, $$props, $$slots);
  Astro2.self = $$Index$2;
  const data = await Astro2.glob(
    /* #__PURE__ */ Object.assign({"../../../data/jobs/2017-10-01-desoft.json": () => import('./chunks/2017-10-01-desoft.d36104d5.mjs'),"../../../data/jobs/2018-01-01-desoft.json": () => import('./chunks/2018-01-01-desoft.55cf31db.mjs'),"../../../data/jobs/2020-08-21-desoft.json": () => import('./chunks/2020-08-21-desoft.7bd6d03a.mjs'),"../../../data/jobs/2021-09-13-scanntech.json": () => import('./chunks/2021-09-13-scanntech.e02748f7.mjs'),"../../../data/jobs/es/2017-10-01-desoft.json": () => import('./chunks/2017-10-01-desoft.9e42dcd2.mjs'),"../../../data/jobs/es/2018-01-01-desoft.json": () => import('./chunks/2018-01-01-desoft.01a77e76.mjs'),"../../../data/jobs/es/2020-08-21-desoft.json": () => import('./chunks/2020-08-21-desoft.14851e5a.mjs'),"../../../data/jobs/es/2021-09-13-scanntech.json": () => import('./chunks/2021-09-13-scanntech.c27aa407.mjs')}),
    () => "../../../data/jobs/**/*.json"
  );
  const jobs = data.filter((job) => job.published && job.lang === i18next__default.language).sort((a, b) => {
    if (a.startDate > b.startDate)
      return -1;
    if (a.startDate < b.startDate)
      return 1;
    return 0;
  });
  return renderTemplate`${renderComponent($$result, "Jobs", Jobs, { "client:idle": true, "jobs": jobs, "client:component-hydration": "idle", "client:component-path": "/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/jobs/Jobs.vue", "client:component-export": "default" })}`;
});

const $$file$v = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/jobs/index.astro";
const $$url$v = undefined;

const $$module5$4 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$v,
	default: $$Index$2,
	file: $$file$v,
	url: $$url$v
}, Symbol.toStringTag, { value: 'Module' }));

const $$module1$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null
}, Symbol.toStringTag, { value: 'Module' }));

const $$module2$4 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$u = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ProjectTechList.astro", { modules: [{ module: $$module1$1, specifier: "@models:Project", assert: {} }, { module: $$module2$4, specifier: "@models:Tech", assert: {} }, { module: $$module1$5, specifier: "astro-icon", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$v = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ProjectTechList.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$ProjectTechList = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$v, $$props, $$slots);
  Astro2.self = $$ProjectTechList;
  const { position, showIcon = true, project } = Astro2.props;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<ul${addAttribute(`project-tech-list ${position === "end" ? "justify-end" : position === "center" ? "justify-center" : "justify-start"} astro-DSG6XQUH`, "class")}>
    ${project && project.tech && project.tech.map((tech) => renderTemplate`<li class="my-2 text-light-slate font-mono text-xs whitespace-nowrap astro-DSG6XQUH"${addAttribute(position === "end" ? "ml-3" : position === "center" ? "mx-2" : "mr-3", "class")}>
                    ${tech?.url != null ? renderTemplate`<a class="flex astro-DSG6XQUH"${addAttribute(tech?.url, "href")} target="_blank">
                            ${showIcon && tech?.icon && renderTemplate`${renderComponent($$result, "Icon", $$Icon, { "name": tech?.icon, "class": "h-4 astro-DSG6XQUH" })}`}
                            <span class="mx-1 astro-DSG6XQUH">${tech?.name}</span>
                        </a>` : renderTemplate`<span class="mx-1 astro-DSG6XQUH">${tech?.name}</span>`}
                </li>`)}
</ul>

`;
});

const $$file$u = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ProjectTechList.astro";
const $$url$u = undefined;

const $$module5$3 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$u,
	default: $$ProjectTechList,
	file: $$file$u,
	url: $$url$u
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$t = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/Link.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$u = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/Link.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Link = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$u, $$props, $$slots);
  Astro2.self = $$Link;
  const { ...attributes } = Astro2.props;
  return renderTemplate`${maybeRenderHead($$result)}<a class="hover:underline hover:font-bold no-underline decoration-green-500"${spreadAttributes(attributes)}>${renderSlot($$result, $$slots["default"])}
</a>`;
});

const $$file$t = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/Link.astro";
const $$url$t = undefined;

const $$module2$3 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$t,
	default: $$Link,
	file: $$file$t,
	url: $$url$t
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$s = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ProjectLinks.astro", { modules: [{ module: $$module1$1, specifier: "@models:Project", assert: {} }, { module: $$module2$3, specifier: "atoms:Link", assert: {} }, { module: $$module1$5, specifier: "astro-icon", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$t = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ProjectLinks.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$ProjectLinks = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$t, $$props, $$slots);
  Astro2.self = $$ProjectLinks;
  const { position, project } = Astro2.props;
  const classProjectLinks = () => {
    if (position === "end") {
      return "justify-end";
    } else if (position === "center") {
      return "justify-center";
    } else {
      return "justify-start";
    }
  };
  const classLinks = () => {
    if (position === "end") {
      return "mr-2";
    } else if (position === "center") {
      return "mx-1";
    } else {
      return "ml-2";
    }
  };
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<div${addAttribute(`project-links ${classProjectLinks()} astro-5FPGGRIU`, "class")}>
    ${project.repository && renderTemplate`${renderComponent($$result, "Link", $$Link, { "href": project.repository, "aria-label": "GitHub Link", "class": classLinks() + " astro-5FPGGRIU", "target": "_blank" }, { "default": () => renderTemplate`${renderComponent($$result, "Icon", $$Icon, { "name": "ion:fork-repo", "class": "h-5 astro-5FPGGRIU" })}` })}`}
    ${project.url && renderTemplate`${renderComponent($$result, "Link", $$Link, { "href": project.url, "aria-label": "Project Link", "class": classLinks() + " astro-5FPGGRIU", "target": "_blank" }, { "default": () => renderTemplate`${renderComponent($$result, "Icon", $$Icon, { "name": "charm:link-external", "class": "h-5 astro-5FPGGRIU" })}` })}`}
</div>

`;
});

const $$file$s = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ProjectLinks.astro";
const $$url$s = undefined;

const $$module6$2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$s,
	default: $$ProjectLinks,
	file: $$file$s,
	url: $$url$s
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$r = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ProjectsFeatured.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module1$1, specifier: "@models:Project", assert: {} }, { module: $$module5$3, specifier: "molecules:ProjectTechList", assert: {} }, { module: $$module6$2, specifier: "molecules:ProjectLinks", assert: {} }, { module: $$module4$4, specifier: "@util:utilities", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$s = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ProjectsFeatured.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$ProjectsFeatured = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$s, $$props, $$slots);
  Astro2.self = $$ProjectsFeatured;
  const { projects } = Astro2.props;
  const calculatePosition = (index) => {
    return index % 2 === 0 ? "end" : "start";
  };
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<div class="astro-Y7AA7SUJ">
    <h2 class="numbered-heading astro-Y7AA7SUJ">${t("project-title")}</h2>
    <div class="astro-Y7AA7SUJ">
        ${projects.map((project, index) => renderTemplate`<div class="styled-project astro-Y7AA7SUJ">
                    <div class="project-content astro-Y7AA7SUJ">
                        <p class="project-overline astro-Y7AA7SUJ">Featured Project</p>
                        <h3 class="project-title astro-Y7AA7SUJ">${project.title}</h3>
                        <div id="project-description" class="project-description astro-Y7AA7SUJ">${markHTMLString(markdownfy(project.content))}</div>
                        ${renderComponent($$result, "ProjectTechList", $$ProjectTechList, { "project": project, "position": calculatePosition(index), "showIcon": true, "class": "astro-Y7AA7SUJ" })}
                        ${renderComponent($$result, "ProjectLinks", $$ProjectLinks, { "project": project, "position": calculatePosition(index), "class": "astro-Y7AA7SUJ" })}
                    </div>
                    <div class="project-image astro-Y7AA7SUJ">
                        <a${addAttribute(project.url ? project.url : project.repository ? project.repository : "#", "href")} class="astro-Y7AA7SUJ">
                            ${project.cover && renderTemplate`<img class="img astro-Y7AA7SUJ"${addAttribute(project.cover, "src")}${addAttribute(project.title, "alt")}>`}
                        </a>
                    </div>
                </div>`)}
    </div>
</div>

`;
});

const $$file$r = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ProjectsFeatured.astro";
const $$url$r = undefined;

const $$module4$3 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$r,
	default: $$ProjectsFeatured,
	file: $$file$r,
	url: $$url$r
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$q = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ProjectsCommon.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module1$1, specifier: "@models:Project", assert: {} }, { module: $$module2$7, specifier: "astro-i18next", assert: {} }, { module: $$module6$2, specifier: "molecules:ProjectLinks", assert: {} }, { module: $$module5$3, specifier: "molecules:ProjectTechList", assert: {} }, { module: $$module1$5, specifier: "astro-icon", assert: {} }, { module: $$module4$4, specifier: "@util:utilities", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$r = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ProjectsCommon.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$ProjectsCommon = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$r, $$props, $$slots);
  Astro2.self = $$ProjectsCommon;
  const GRID_LIMIT = 6;
  const { projects } = Astro2.props;
  const projectsToShow = () => {
    const firstProjects = projects ? projects.slice(0, GRID_LIMIT) : [];
    return firstProjects;
  };
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<div class="flex flex-col items-center astro-KHKOHYIU">
    <div class="mt-10 mb-20 text-center astro-KHKOHYIU">
        <h2 class="section-title astro-KHKOHYIU">${t("project-subtitle")}</h2>
        <a${addAttribute(localizePath$1("/projects/"), "href")} class="inline-link astro-KHKOHYIU">${t("project-view")}
        </a>
    </div>
    <div class="grid grid-cols-1 gap-4 md:grid-cols-2 xl:grid-cols-3 astro-KHKOHYIU">
        ${projectsToShow().map((project) => renderTemplate`<div class="style-project-card astro-KHKOHYIU">
                    <div class="project-top astro-KHKOHYIU">
                        ${renderComponent($$result, "Icon", $$Icon, { "name": "ic:baseline-folder", "class": "h-10 astro-KHKOHYIU" })}
                        ${renderComponent($$result, "ProjectLinks", $$ProjectLinks, { "project": project, "position": "center", "class": "astro-KHKOHYIU" })}
                    </div>
                    <div class="text-center text-3xl text-lightest-slate my-2.5 font-bold astro-KHKOHYIU">
                        ${project?.title}
                    </div>
                    <div class="project-description astro-KHKOHYIU">
                        <p class="astro-KHKOHYIU">${markHTMLString(markdownfy(project.content))}</p>
                    </div>
                    ${renderComponent($$result, "ProjectTechList", $$ProjectTechList, { "project": project, "position": "start", "showIcon": false, "class": "astro-KHKOHYIU" })}
                </div>`)}
    </div>
    ${projects.length > 6 && renderTemplate`<a class="big-button m-5 astro-KHKOHYIU"${addAttribute(localizePath$1("/projects/"), "href")}>
                ${t("show-more")}
            </a>`}
</div>

`;
});

const $$file$q = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ProjectsCommon.astro";
const $$url$q = undefined;

const $$module5$2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$q,
	default: $$ProjectsCommon,
	file: $$file$q,
	url: $$url$q
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$p = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/Projects.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module1$1, specifier: "@models:Project", assert: {} }, { module: $$module2$4, specifier: "@models:Tech", assert: {} }, { module: $$module4$3, specifier: "molecules:ProjectsFeatured", assert: {} }, { module: $$module5$2, specifier: "molecules:ProjectsCommon", assert: {} }, { module: $$module4$4, specifier: "@util:utilities", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$q = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/Projects.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Projects$2 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$q, $$props, $$slots);
  Astro2.self = $$Projects$2;
  const projectData = await Astro2.glob(
    /* #__PURE__ */ Object.assign({"../../data/projects/2018-09-05-finis.json": () => import('./chunks/2018-09-05-finis.18a0a6cc.mjs'),"../../data/projects/2020-12-12-expenses-app.json": () => import('./chunks/2020-12-12-expenses-app.ba082a7d.mjs'),"../../data/projects/2020-12-25-meal-app.json": () => import('./chunks/2020-12-25-meal-app.07eb51c6.mjs'),"../../data/projects/2020-12-6-shop-app.json": () => import('./chunks/2020-12-6-shop-app.74f6b031.mjs'),"../../data/projects/2021-04-08-scanner-odoo.json": () => import('./chunks/2021-04-08-scanner-odoo.6090b844.mjs'),"../../data/projects/2021-04-17-bankiva.json": () => import('./chunks/2021-04-17-bankiva.385b0316.mjs'),"../../data/projects/2021-04-20-personal-blog-v1.json": () => import('./chunks/2021-04-20-personal-blog-v1.8c51b013.mjs'),"../../data/projects/2021-04-20-portfolio-blog-v2.json": () => import('./chunks/2021-04-20-portfolio-blog-v2.02a99ff9.mjs'),"../../data/projects/2021-05-01-itunes.json": () => import('./chunks/2021-05-01-itunes.4c3849f1.mjs'),"../../data/projects/2021-05-21-weather-app.json": () => import('./chunks/2021-05-21-weather-app.966cb23e.mjs'),"../../data/projects/2021-06-14-react-todo-app.json": () => import('./chunks/2021-06-14-react-todo-app.2c15d8b1.mjs'),"../../data/projects/2021-10-21-vue3-vite-typescript-tailwind-starter.json": () => import('./chunks/2021-10-21-vue3-vite-typescript-tailwind-starter.451263a6.mjs'),"../../data/projects/2022-01-05-nuxt-3-todo-app.json": () => import('./chunks/2022-01-05-nuxt-3-todo-app.335f0ce8.mjs'),"../../data/projects/2022-01-05-nuxt3-tailwindcss-typescript-vite-template.json": () => import('./chunks/2022-01-05-nuxt3-tailwindcss-typescript-vite-template.7532bf95.mjs'),"../../data/projects/2022-04-06-movie-app-nextjs.json": () => import('./chunks/2022-04-06-movie-app-nextjs.5fcad531.mjs'),"../../data/projects/es/2018-09-05-finis.json": () => import('./chunks/2018-09-05-finis.1ac10712.mjs'),"../../data/projects/es/2020-12-12-expenses-app.json": () => import('./chunks/2020-12-12-expenses-app.e1cf817b.mjs'),"../../data/projects/es/2020-12-25-meal-app.json": () => import('./chunks/2020-12-25-meal-app.37fb3c36.mjs'),"../../data/projects/es/2020-12-6-shop-app.json": () => import('./chunks/2020-12-6-shop-app.132c5afc.mjs'),"../../data/projects/es/2021-04-08-scanner-odoo.json": () => import('./chunks/2021-04-08-scanner-odoo.1187eb7f.mjs'),"../../data/projects/es/2021-04-17-bankiva.json": () => import('./chunks/2021-04-17-bankiva.3a8e2390.mjs'),"../../data/projects/es/2021-04-20-personal-blog-v1.json": () => import('./chunks/2021-04-20-personal-blog-v1.8cd14989.mjs'),"../../data/projects/es/2021-04-20-portfolio-blog-v2.json": () => import('./chunks/2021-04-20-portfolio-blog-v2.85c29bd1.mjs'),"../../data/projects/es/2021-05-01-itunes.json": () => import('./chunks/2021-05-01-itunes.73635873.mjs'),"../../data/projects/es/2021-05-21-weather-app.json": () => import('./chunks/2021-05-21-weather-app.a69656e8.mjs'),"../../data/projects/es/2021-06-14-react-todo-app.json": () => import('./chunks/2021-06-14-react-todo-app.2532e910.mjs'),"../../data/projects/es/2021-10-21-vue3-vite-typescript-tailwind-starter.json": () => import('./chunks/2021-10-21-vue3-vite-typescript-tailwind-starter.84d7fb9a.mjs'),"../../data/projects/es/2022-01-05-nuxt-3-todo-app.json": () => import('./chunks/2022-01-05-nuxt-3-todo-app.c67269f5.mjs'),"../../data/projects/es/2022-01-05-nuxt3-tailwindcss-typescript-vite-template.json": () => import('./chunks/2022-01-05-nuxt3-tailwindcss-typescript-vite-template.bf6a48a9.mjs'),"../../data/projects/es/2022-04-06-movie-app-nextjs.json": () => import('./chunks/2022-04-06-movie-app-nextjs.019aa116.mjs')}),
    () => "../../data/projects/**/*.json"
  );
  const techData = await Astro2.glob(
    /* #__PURE__ */ Object.assign({"../../data/technologies/angular.json": () => import('./chunks/angular.8e3bf02a.mjs'),"../../data/technologies/c++.json": () => import('./chunks/c__.bd142db1.mjs'),"../../data/technologies/c.json": () => import('./chunks/c.17f62d0f.mjs'),"../../data/technologies/csharp.json": () => import('./chunks/csharp.07d35c6e.mjs'),"../../data/technologies/css3.json": () => import('./chunks/css3.b07efd3d.mjs'),"../../data/technologies/dart.json": () => import('./chunks/dart.3d87c3dc.mjs'),"../../data/technologies/figma.json": () => import('./chunks/figma.1336b470.mjs'),"../../data/technologies/flask.json": () => import('./chunks/flask.52abef6e.mjs'),"../../data/technologies/flutter.json": () => import('./chunks/flutter.e908e76a.mjs'),"../../data/technologies/go.json": () => import('./chunks/go.17763279.mjs'),"../../data/technologies/hugo.json": () => import('./chunks/hugo.b29b4df5.mjs'),"../../data/technologies/idea.json": () => import('./chunks/idea.e3a2ea5c.mjs'),"../../data/technologies/itunes-api.json": () => import('./chunks/itunes-api.6c44e333.mjs'),"../../data/technologies/java.json": () => import('./chunks/java.b9c83ad0.mjs'),"../../data/technologies/javascript.json": () => import('./chunks/javascript.489f87ee.mjs'),"../../data/technologies/jekyll.json": () => import('./chunks/jekyll.05bdd887.mjs'),"../../data/technologies/keras.json": () => import('./chunks/keras.4a2d8ab3.mjs'),"../../data/technologies/kotlin.json": () => import('./chunks/kotlin.0c4b7975.mjs'),"../../data/technologies/libinsane.json": () => import('./chunks/libinsane.6add77af.mjs'),"../../data/technologies/lumen.json": () => import('./chunks/lumen.f11f1808.mjs'),"../../data/technologies/neo4j.json": () => import('./chunks/neo4j.77c0b344.mjs'),"../../data/technologies/node.json": () => import('./chunks/node.2661301f.mjs'),"../../data/technologies/numpy.json": () => import('./chunks/numpy.a1e95573.mjs'),"../../data/technologies/pandas.json": () => import('./chunks/pandas.07c23dc5.mjs'),"../../data/technologies/php.json": () => import('./chunks/php.654dc498.mjs'),"../../data/technologies/postgresql.json": () => import('./chunks/postgresql.83a6be6c.mjs'),"../../data/technologies/python.json": () => import('./chunks/python.f46ba473.mjs'),"../../data/technologies/pytorch.json": () => import('./chunks/pytorch.366176c0.mjs'),"../../data/technologies/react.json": () => import('./chunks/react.706481ab.mjs'),"../../data/technologies/ruby.json": () => import('./chunks/ruby.46934458.mjs'),"../../data/technologies/sass.json": () => import('./chunks/sass.237d269f.mjs'),"../../data/technologies/scala.json": () => import('./chunks/scala.6a3dfe9e.mjs'),"../../data/technologies/scss.json": () => import('./chunks/scss.37f3af63.mjs'),"../../data/technologies/spark.json": () => import('./chunks/spark.8c350c2c.mjs'),"../../data/technologies/spotify-web-api.json": () => import('./chunks/spotify-web-api.d44397ef.mjs'),"../../data/technologies/spring-boot.json": () => import('./chunks/spring-boot.c0734af3.mjs'),"../../data/technologies/spring.json": () => import('./chunks/spring.a9ee72b0.mjs'),"../../data/technologies/tailwind.json": () => import('./chunks/tailwind.fc30e230.mjs'),"../../data/technologies/tensorflow.json": () => import('./chunks/tensorflow.b9f7e7d9.mjs'),"../../data/technologies/typescript.json": () => import('./chunks/typescript.bd25310b.mjs'),"../../data/technologies/vite.json": () => import('./chunks/vite.394f75cb.mjs'),"../../data/technologies/vs-code.json": () => import('./chunks/vs-code.6c6d5ec3.mjs'),"../../data/technologies/vuejs.json": () => import('./chunks/vuejs.52b0035f.mjs'),"../../data/technologies/vuetify.json": () => import('./chunks/vuetify.0ef3fddc.mjs')}),
    () => "../../data/technologies/**/*.json"
  );
  const tech = {};
  techData.forEach((t) => tech[t.id] = t);
  const jsonToProject = (json) => {
    const project = {
      id: json.id,
      title: json.title,
      lang: json.lang,
      date: json.date,
      cover: json.cover,
      repository: json.repository,
      url: json.url,
      company: json.company,
      tech: json.tech.map((t) => tech[urlize(t.toLowerCase())]),
      showInProjects: json.showInProjects,
      featured: json.featured,
      published: json.published,
      content: json.content
    };
    return project;
  };
  const projects = projectData.filter((project) => project.published && project.lang === i18next__default.language).sort((a, b) => {
    if (a.date > b.date)
      return -1;
    if (a.date < b.date)
      return 1;
    return 0;
  }).map((json) => jsonToProject(json));
  const featuredProjects = projects.filter((project) => project.featured);
  const commonProjects = projects.filter((project) => project.showInProjects && !project.featured);
  return renderTemplate`${maybeRenderHead($$result)}<section id="projects" class="mx-4 md:mx-auto">
    ${featuredProjects && featuredProjects.length > 0 && renderTemplate`${renderComponent($$result, "ProjectsFeatured", $$ProjectsFeatured, { "projects": featuredProjects })}`}
${commonProjects && commonProjects.length > 0 && renderTemplate`${renderComponent($$result, "ProjectsCommon", $$ProjectsCommon, { "projects": commonProjects })}`}
</section>`;
});

const $$file$p = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/Projects.astro";
const $$url$p = undefined;

const $$module6$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$p,
	default: $$Projects$2,
	file: $$file$p,
	url: $$url$p
}, Symbol.toStringTag, { value: 'Module' }));

const jsonToArticle = (json) => {
  return {
    url: json.url,
    title: json.frontmatter.title,
    description: json.frontmatter.description,
    date: json.frontmatter.date,
    cover: json.frontmatter.cover,
    author: json.frontmatter.author,
    timeToRead: json.frontmatter.minutesRead,
    lang: json.frontmatter.lang,
    tags: json.frontmatter.tags,
    categories: json.frontmatter.categories,
    draft: json.frontmatter.draft,
    content: json.rawContent()
  };
};

const $$module3$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	jsonToArticle
}, Symbol.toStringTag, { value: 'Module' }));

const $$module6 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$o = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/LastArticles.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module3$1, specifier: "@models:Article", assert: {} }, { module: $$module6, specifier: "astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$p = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/LastArticles.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$LastArticles = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$p, $$props, $$slots);
  Astro2.self = $$LastArticles;
  const articlesFiles = {
    en: Astro2.glob(
        /* #__PURE__ */ Object.assign({"../../pages/blog/add-image-selector-flutter.md": () => Promise.resolve().then(() => _page9),"../../pages/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx.md": () => Promise.resolve().then(() => _page3),"../../pages/blog/configure-proxy-global-on-linux.md": () => Promise.resolve().then(() => _page6),"../../pages/blog/countdown-to-new-year-astronomy.md": () => Promise.resolve().then(() => _page7),"../../pages/blog/customizing-github-profile-page.md": () => Promise.resolve().then(() => _page8),"../../pages/blog/introduction-to-gridsome.md": () => Promise.resolve().then(() => _page10),"../../pages/blog/top-10-vs-code-extension-for-2021.md": () => Promise.resolve().then(() => _page5),"../../pages/blog/vue-3-with-typescript-and-decorators.md": () => Promise.resolve().then(() => _page4)}),
        () => "../../pages/blog/**/*.md"
    ),
    es: Astro2.glob(
        /* #__PURE__ */ Object.assign({"../../pages/es/blog/add-image-selector-flutter.md": () => Promise.resolve().then(() => _page23),"../../pages/es/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx.md": () => Promise.resolve().then(() => _page17),"../../pages/es/blog/configure-proxy-global-on-linux.md": () => Promise.resolve().then(() => _page20),"../../pages/es/blog/countdown-to-new-year-astronomy.md": () => Promise.resolve().then(() => _page21),"../../pages/es/blog/customizing-github-profile-page.md": () => Promise.resolve().then(() => _page22),"../../pages/es/blog/introduction-to-gridsome.md": () => Promise.resolve().then(() => _page24),"../../pages/es/blog/top-10-vs-code-extension-for-2021.md": () => Promise.resolve().then(() => _page19),"../../pages/es/blog/vue-3-with-typescript-and-decorators.md": () => Promise.resolve().then(() => _page18)}),
        () => "../../pages/es/blog/**/*.md"
    )
  };
  const postsData = i18next__default.language in articlesFiles ? await articlesFiles[i18next__default.language] : [];
  const maxNumberOfPosts = 3;
  const posts = postsData.filter((post) => !post.frontmatter.draft && post.frontmatter.lang === i18next__default.language).map((post) => jsonToArticle(post)).sort((a, b) => {
    let aDate = new Date(a.date);
    let bDate = new Date(b.date);
    return bDate.getTime() - aDate.getTime();
  }).slice(0, maxNumberOfPosts);
  return renderTemplate`${maybeRenderHead($$result)}<section id="last3articles" class="flex flex-col justify-center items-center content-center">
	<h2 class="numbered-heading">${t("menus.last-articles")}</h2>
	<div class="my-2 flex flex-col md:flex-row justify-center justify-items-center content-center gap-4">
		${posts.map((post) => renderTemplate`<article class="w-full max-w-sm bg-lightest-navy rounded-lg border border-light-navy shadow-md">
					<a${addAttribute(post.url, "href")}>
						<img class="rounded-t-lg object-cover h-48 w-96"${addAttribute(post.cover, "src")}${addAttribute(post.title, "alt")}>
					</a>
					<div class="p-5">
						<a${addAttribute(post.url, "href")}>
							<h5 class="mb-2 text-2xl font-bold tracking-tight text-lightest-slate">
								${post.title}
							</h5>
						</a>
						<p class="mb-3 font-normal line-clamp-4 md:line-clamp-3">
							${post.description}
						</p>
					</div>
					<footer class="static bottom-1">
							<a${addAttribute(post.url, "href")} class="inline-flex items-center py-2 px-3 text-sm font-medium">
							${t("read")}
						</a>
							</footer>
				</article>`)}
	</div>
</section>`;
});

const $$file$o = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/LastArticles.astro";
const $$url$o = undefined;

const $$module7 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$o,
	default: $$LastArticles,
	file: $$file$o,
	url: $$url$o
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$n = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/Contact.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$o = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/Contact.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Contact = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$o, $$props, $$slots);
  Astro2.self = $$Contact;
  return renderTemplate`${maybeRenderHead($$result)}<section id="contact" class="mx-4 md:mx-auto">
    <div class="">
        <div class="mx-auto grid grid-cols-1 gap-8 rounded-lg bg-light-navy py-16 text-light-slate shadow-lg md:grid-cols-2 md:px-12 lg:px-16 xl:px-32">
            <div class="flex flex-col justify-between">
                <div>
                    <h2 class="numbered-heading">${t("contact-me")}</h2>
                    <h3 class="text-center text-4xl font-bold leading-tight text-lightest-slate md:text-left lg:text-5xl">
                        ${t("lets-talk")}
                    </h3>
                    <div class="mt-8 text-center text-light-slate md:text-left">
                        ${t("contact-description")}
                    </div>
                </div>
                <div class="mt-8 text-center">
                    <svg id="ae37f038-3a9e-4b82-ad68-fc94ba16af2a" class="w-full" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" data-name="Layer 1" viewBox="0 0 1096 574.74">
                        <defs>
                            <linearGradient id="eb6c86d6-45fa-49e0-9a60-1b0612516196" x1="819.07" y1="732.58" x2="819.07" y2="560.46" gradientUnits="userSpaceOnUse">
                                <stop offset="0" stop-color="gray" stop-opacity="0.25"></stop>
                                <stop offset="0.54" stop-color="gray" stop-opacity="0.12"></stop>
                                <stop offset="1" stop-color="gray" stop-opacity="0.1"></stop>
                            </linearGradient>
                            <pattern id="ad310e25-2b04-44c8-bb7b-982389166780" data-name="New Pattern 3" width="36.88" height="49.48" patternUnits="userSpaceOnUse" viewBox="0 0 36.88 49.48">
                                <rect width="36.88" height="49.48" fill="none"></rect>
                                <path d="M4.33,13.19c4.5,0,4.51-7,0-7s-4.52,7,0,7Z"></path>
                                <path d="M4.51,17.16c4.51,0,4.52-7,0-7s-4.51,7,0,7Z"></path>
                                <path d="M4.51,20.94c4.51,0,4.52-7,0-7s-4.51,7,0,7Z"></path>
                                <path d="M3.38,24.72c4.51,0,4.51-7,0-7s-4.51,7,0,7Z"></path>
                                <path d="M1.09,28.29l.2.38a3.52,3.52,0,0,0,4.78,1.25,3.58,3.58,0,0,0,1.26-4.79l-.19-.37A3.52,3.52,0,0,0,2.35,23.5a3.59,3.59,0,0,0-1.26,4.79Z"></path>
                                <path d="M1.49,30.1l.18.57a3.73,3.73,0,0,0,1.61,2.09,3.59,3.59,0,0,0,2.7.35A3.54,3.54,0,0,0,8.42,28.8l-.18-.56a3.68,3.68,0,0,0-1.61-2.1,3.61,3.61,0,0,0-2.69-.35A3.56,3.56,0,0,0,1.49,30.1Z"></path>
                                <path d="M1.58,33.88v.38a3.54,3.54,0,0,0,3.5,3.5,3.56,3.56,0,0,0,3.5-3.5v-.38a3.54,3.54,0,0,0-3.5-3.5,3.57,3.57,0,0,0-3.5,3.5Z"></path>
                                <path d="M4.89,42.3c4.51,0,4.51-7,0-7s-4.51,7,0,7Z"></path>
                                <path d="M1.77,42v.19a3.54,3.54,0,0,0,3.5,3.5,3.56,3.56,0,0,0,3.5-3.5V42a3.54,3.54,0,0,0-3.5-3.5A3.56,3.56,0,0,0,1.77,42Z"></path>
                                <path d="M6,49.29c4.5,0,4.51-7,0-7s-4.52,7,0,7Z"></path>
                                <path d="M10,14.14c4.5,0,4.51-7,0-7s-4.52,7,0,7Z"></path>
                                <path d="M6.59,20.94c4.51,0,4.52-7,0-7s-4.51,7,0,7Z"></path>
                                <path d="M8.48,27c4.51,0,4.51-7,0-7s-4.51,7,0,7Z"></path>
                                <path d="M8.48,29.26c4.51,0,4.51-7,0-7s-4.51,7,0,7Z"></path>
                                <path d="M14.91,33.79c4.5,0,4.51-7,0-7s-4.51,7,0,7Z"></path>
                                <path d="M9.81,38.52c4.5,0,4.51-7,0-7s-4.52,7,0,7Z"></path>
                                <path d="M10.56,45.13c4.51,0,4.51-7,0-7s-4.51,7,0,7Z"></path>
                                <path d="M10.56,49.48c4.51,0,4.51-7,0-7s-4.51,7,0,7Z"></path>
                                <path d="M12.83,18.12c2.57,0,2.58-4,0-4s-2.58,4,0,4Z"></path>
                                <path d="M13,20.39c2.57,0,2.58-4,0-4s-2.58,4,0,4Z"></path>
                                <path d="M13.1,21v.19a2,2,0,0,0,4,0V21a2,2,0,0,0-4,0Z"></path>
                                <path d="M15.1,25.87c2.57,0,2.58-4,0-4s-2.58,4,0,4Z"></path>
                                <path d="M16.61,11.07a1,1,0,0,0,0-2,1,1,0,0,0,0,2Z"></path>
                                <path d="M21.71,16.55a1,1,0,0,0,0-2,1,1,0,0,0,0,2Z"></path>
                                <path d="M16.85,8.94V8.56a1,1,0,0,0-2,0v.38a1,1,0,0,0,2,0Z"></path>
                                <path d="M16.48,4.78V4.59a1,1,0,0,0-2,0v.19a1,1,0,0,0,2,0Z"></path>
                                <path d="M15.48,2a1,1,0,0,0,0-2,1,1,0,0,0,0,2Z"></path>
                                <path d="M10.56,2a1,1,0,0,0,0-2,1,1,0,0,0,0,2Z"></path>
                                <path d="M10.37,4.65a1,1,0,0,0,0-2,1,1,0,0,0,0,2Z"></path>
                                <path d="M7.35,6.16a1,1,0,0,0,0-2,1,1,0,0,0,0,2Z"></path>
                                <path d="M11.88,7.1h.38a1,1,0,0,0,0-2h-.38a1,1,0,0,0,0,2Z"></path>
                                <path d="M13.28,11l.57,1.32a1,1,0,0,0,1.37.36,1,1,0,0,0,.36-1.37L15,10a1,1,0,0,0-1.37-.36A1,1,0,0,0,13.28,11Z"></path>
                                <path d="M18.44,19.33v.19a1,1,0,0,0,2,0v-.19a1,1,0,0,0-2,0Z"></path>
                                <path d="M20.68,24.93l.19.38c.57,1.15,2.3.14,1.72-1l-.19-.38c-.57-1.15-2.3-.14-1.72,1Z"></path>
                                <path d="M22.13,29.38a2.48,2.48,0,0,0-.84,1.86,1,1,0,0,0,2,0,.56.56,0,0,1,.25-.44,1,1,0,0,0,0-1.42,1,1,0,0,0-1.41,0Z"></path>
                                <path d="M20.32,33.41l-.54,1.71c-.38,1.23,1.55,1.76,1.93.53l.54-1.71c.38-1.23-1.55-1.76-1.93-.53Z"></path>
                                <path d="M19.44,37h-.19a1,1,0,0,0,0,2h.19a1,1,0,0,0,0-2Z"></path>
                                <path d="M17.64,41.5l-.19.38c-.58,1.15,1.15,2.16,1.72,1l.19-.38c.58-1.15-1.15-2.16-1.72-1Z"></path>
                                <path d="M15.8,47.87v.56a1,1,0,0,0,2,0v-.56a1,1,0,0,0-2,0Z"></path>
                                <path d="M14.34,49.43a1,1,0,0,0,0-2,1,1,0,0,0,0,2Z"></path>
                                <path d="M14.34,41.31a1,1,0,0,0,0-2,1,1,0,0,0,0,2Z"></path>
                                <path d="M17.13,36.47a2,2,0,0,0,1-1.64,1,1,0,0,0-2,0c0-.13.19-.2,0-.08-1.15.58-.14,2.3,1,1.72Z"></path>
                                <path d="M17.37,31.29a1,1,0,0,0,0-2,1,1,0,0,0,0,2Z"></path>
                                <path d="M18.12,28.46a1,1,0,0,0,0-2,1,1,0,0,0,0,2Z"></path>
                                <path d="M19,24.94l.19-.38c.58-1.15-1.15-2.16-1.72-1l-.19.38c-.58,1.15,1.15,2.16,1.72,1Z"></path>
                                <path d="M17.93,16a1,1,0,0,0,0-2,1,1,0,0,0,0,2Z"></path>
                                <path d="M24.64,16.05l.57.94a1,1,0,0,0,1.72-1L26.37,15a1,1,0,0,0-1.73,1Z"></path>
                                <path d="M34.88,29.72v.19a1,1,0,0,0,2,0v-.19a1,1,0,0,0-2,0Z"></path>
                                <path d="M24,39.23a1,1,0,0,0,0-2,1,1,0,0,0,0,2Z"></path>
                                <path d="M22.85,29a1,1,0,0,0,0-2,1,1,0,0,0,0,2Z"></path>
                                <path d="M18.24,21.9l.57-.56c.93-.89-.48-2.3-1.41-1.41l-.58.56c-.93.89.49,2.3,1.42,1.41Z"></path>
                            </pattern>
                            <linearGradient id="a964f849-fa65-4178-8cc4-fb8fb10b3617" x1="462.91" y1="660.68" x2="462.91" y2="559.69" xlink:href="#eb6c86d6-45fa-49e0-9a60-1b0612516196"></linearGradient>
                        </defs>
                        <title>contact us</title>
                        <g opacity="0.1">
                            <ellipse cx="479.42" cy="362.12" rx="11.38" ry="14.9" fill="#3f3d56"></ellipse>
                            <path d="M540.43,461a18,18,0,0,0,2.38-9.11c0-8.23-5.1-14.9-11.39-14.9S520,443.68,520,451.91a18,18,0,0,0,2.38,9.11,18.61,18.61,0,0,0,0,18.21,18.61,18.61,0,0,0,0,18.21,17.94,17.94,0,0,0-2.38,9.11c0,8.22,5.1,14.9,11.38,14.9s11.39-6.68,11.39-14.9a17.94,17.94,0,0,0-2.38-9.11,18.61,18.61,0,0,0,0-18.21,18.61,18.61,0,0,0,0-18.21Z" transform="translate(-52 -162.63)" fill="#3f3d56"></path>
                            <ellipse cx="479.42" cy="271.07" rx="11.38" ry="14.9" fill="#3f3d56"></ellipse>
                            <ellipse cx="479.42" cy="252.86" rx="11.38" ry="14.9" fill="#3f3d56"></ellipse>
                            <path d="M488.82,290.86a53.08,53.08,0,0,1-4.24-6.24l29.9-4.91-32.34.24a54.62,54.62,0,0,1-1-43.2l43.39,22.51-40-29.42a54.53,54.53,0,1,1,90,61,54.54,54.54,0,0,1,6.22,9.94L541.92,321l41.39-13.89a54.53,54.53,0,0,1-8.79,51.2,54.52,54.52,0,1,1-85.7,0,54.52,54.52,0,0,1,0-67.42Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                            <path d="M586.19,324.57a54.27,54.27,0,0,1-11.67,33.71,54.52,54.52,0,1,1-85.7,0C481.51,349,586.19,318.45,586.19,324.57Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        </g>
                        <g opacity="0.1">
                            <ellipse cx="612.28" cy="330.26" rx="8.51" ry="11.13" fill="#3f3d56"></ellipse>
                            <path d="M671,445.26a13.43,13.43,0,0,0,1.77-6.8c0-6.15-3.81-11.14-8.5-11.14s-8.51,5-8.51,11.14a13.33,13.33,0,0,0,1.78,6.8,13.9,13.9,0,0,0,0,13.61,13.9,13.9,0,0,0,0,13.61,13.33,13.33,0,0,0-1.78,6.8c0,6.15,3.81,11.14,8.51,11.14s8.5-5,8.5-11.14a13.43,13.43,0,0,0-1.77-6.8,14,14,0,0,0,0-13.61,14,14,0,0,0,0-13.61Z" transform="translate(-52 -162.63)" fill="#3f3d56"></path>
                            <ellipse cx="612.28" cy="262.22" rx="8.51" ry="11.13" fill="#3f3d56"></ellipse>
                            <ellipse cx="612.28" cy="248.61" rx="8.51" ry="11.13" fill="#3f3d56"></ellipse>
                            <path d="M632.44,318.11a39,39,0,0,1-3.17-4.66l22.35-3.67-24.17.18a40.84,40.84,0,0,1-.78-32.29L659.1,294.5l-29.91-22a40.75,40.75,0,1,1,67.29,45.6,41.2,41.2,0,0,1,4.65,7.43l-29,15.07,30.93-10.38a40.76,40.76,0,0,1-6.57,38.26,40.74,40.74,0,1,1-64,0,40.74,40.74,0,0,1,0-50.38Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                            <path d="M705.2,343.3a40.57,40.57,0,0,1-8.72,25.19,40.74,40.74,0,1,1-64,0C627,361.56,705.2,338.73,705.2,343.3Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        </g>
                        <g opacity="0.1">
                            <ellipse cx="1038.58" cy="322.12" rx="11.38" ry="14.9" fill="#3f3d56"></ellipse>
                            <path d="M1081.57,421a18,18,0,0,1-2.38-9.11c0-8.23,5.1-14.9,11.39-14.9s11.38,6.67,11.38,14.9a18,18,0,0,1-2.38,9.11,18.61,18.61,0,0,1,0,18.21,18.61,18.61,0,0,1,0,18.21,17.94,17.94,0,0,1,2.38,9.11c0,8.22-5.1,14.9-11.38,14.9s-11.39-6.68-11.39-14.9a17.94,17.94,0,0,1,2.38-9.11,18.61,18.61,0,0,1,0-18.21,18.61,18.61,0,0,1,0-18.21Z" transform="translate(-52 -162.63)" fill="#3f3d56"></path>
                            <ellipse cx="1038.58" cy="231.07" rx="11.38" ry="14.9" fill="#3f3d56"></ellipse>
                            <ellipse cx="1038.58" cy="212.86" rx="11.38" ry="14.9" fill="#3f3d56"></ellipse>
                            <path d="M1133.18,250.86a53.08,53.08,0,0,0,4.24-6.24l-29.9-4.91,32.34.24a54.62,54.62,0,0,0,1-43.2l-43.39,22.51,40-29.42a54.53,54.53,0,1,0-90,61,54.54,54.54,0,0,0-6.22,9.94L1080.08,281l-41.39-13.89a54.53,54.53,0,0,0,8.79,51.2,54.52,54.52,0,1,0,85.7,0,54.52,54.52,0,0,0,0-67.42Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                            <path d="M1035.81,284.57a54.27,54.27,0,0,0,11.67,33.71,54.52,54.52,0,1,0,85.7,0C1140.49,309,1035.81,278.45,1035.81,284.57Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        </g>
                        <g opacity="0.1">
                            <ellipse cx="928.72" cy="324.26" rx="8.51" ry="11.13" fill="#3f3d56"></ellipse>
                            <path d="M974,439.26a13.43,13.43,0,0,1-1.77-6.8c0-6.15,3.81-11.14,8.5-11.14s8.51,5,8.51,11.14a13.33,13.33,0,0,1-1.78,6.8,13.9,13.9,0,0,1,0,13.61,13.9,13.9,0,0,1,0,13.61,13.33,13.33,0,0,1,1.78,6.8c0,6.15-3.81,11.14-8.51,11.14s-8.5-5-8.5-11.14a13.43,13.43,0,0,1,1.77-6.8,14,14,0,0,1,0-13.61,14,14,0,0,1,0-13.61Z" transform="translate(-52 -162.63)" fill="#3f3d56"></path>
                            <ellipse cx="928.72" cy="256.22" rx="8.51" ry="11.13" fill="#3f3d56"></ellipse>
                            <ellipse cx="928.72" cy="242.61" rx="8.51" ry="11.13" fill="#3f3d56"></ellipse>
                            <path d="M1012.56,312.11a39,39,0,0,0,3.17-4.66l-22.35-3.67,24.17.18a40.84,40.84,0,0,0,.78-32.29L985.9,288.5l29.91-22a40.75,40.75,0,1,0-67.29,45.6,41.2,41.2,0,0,0-4.65,7.43l29,15.07L942,324.23a40.76,40.76,0,0,0,6.57,38.26,40.74,40.74,0,1,0,64,0,40.74,40.74,0,0,0,0-50.38Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                            <path d="M939.8,337.3a40.57,40.57,0,0,0,8.72,25.19,40.74,40.74,0,1,0,64,0C1018,355.56,939.8,332.73,939.8,337.3Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        </g>
                        <g opacity="0.1">
                            <ellipse cx="61.59" cy="322.12" rx="11.38" ry="14.9" fill="#3f3d56"></ellipse>
                            <path d="M122.59,421a18,18,0,0,0,2.38-9.11c0-8.23-5.1-14.9-11.38-14.9s-11.38,6.67-11.38,14.9a18,18,0,0,0,2.37,9.11,18.67,18.67,0,0,0,0,18.21,18.67,18.67,0,0,0,0,18.21,17.93,17.93,0,0,0-2.37,9.11c0,8.22,5.09,14.9,11.38,14.9S125,474.77,125,466.55a17.94,17.94,0,0,0-2.38-9.11,18.61,18.61,0,0,0,0-18.21,18.61,18.61,0,0,0,0-18.21Z" transform="translate(-52 -162.63)" fill="#3f3d56"></path>
                            <ellipse cx="61.59" cy="231.07" rx="11.38" ry="14.9" fill="#3f3d56"></ellipse>
                            <ellipse cx="61.59" cy="212.86" rx="11.38" ry="14.9" fill="#3f3d56"></ellipse>
                            <path d="M71,250.86a54.33,54.33,0,0,1-4.24-6.24l29.91-4.91L64.3,240a54.62,54.62,0,0,1-1-43.2l43.4,22.51-40-29.42a54.52,54.52,0,1,1,90,61,54.54,54.54,0,0,1,6.22,9.94L124.08,281l41.4-13.89a54.59,54.59,0,0,1-8.8,51.2,54.52,54.52,0,1,1-85.7,0,54.52,54.52,0,0,1,0-67.42Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                            <path d="M168.35,284.57a54.27,54.27,0,0,1-11.67,33.71,54.52,54.52,0,1,1-85.7,0C63.67,309,168.35,278.45,168.35,284.57Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        </g>
                        <g opacity="0.1">
                            <ellipse cx="171.44" cy="324.26" rx="8.51" ry="11.13" fill="#3f3d56"></ellipse>
                            <path d="M230.17,439.26a13.43,13.43,0,0,0,1.77-6.8c0-6.15-3.8-11.14-8.5-11.14s-8.51,5-8.51,11.14a13.43,13.43,0,0,0,1.78,6.8,13.9,13.9,0,0,0,0,13.61,13.9,13.9,0,0,0,0,13.61,13.43,13.43,0,0,0-1.78,6.8c0,6.15,3.81,11.14,8.51,11.14s8.5-5,8.5-11.14a13.43,13.43,0,0,0-1.77-6.8,14,14,0,0,0,0-13.61,14,14,0,0,0,0-13.61Z" transform="translate(-52 -162.63)" fill="#3f3d56"></path>
                            <ellipse cx="171.44" cy="256.22" rx="8.51" ry="11.13" fill="#3f3d56"></ellipse>
                            <ellipse cx="171.44" cy="242.61" rx="8.51" ry="11.13" fill="#3f3d56"></ellipse>
                            <path d="M191.6,312.11a40.21,40.21,0,0,1-3.17-4.66l22.35-3.67-24.17.18a40.84,40.84,0,0,1-.78-32.29l32.43,16.83-29.91-22a40.75,40.75,0,1,1,67.29,45.6,40.12,40.12,0,0,1,4.65,7.43l-29,15.07,30.93-10.38a40.76,40.76,0,0,1-6.57,38.26,40.74,40.74,0,1,1-64,0,40.74,40.74,0,0,1,0-50.38Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                            <path d="M264.36,337.3a40.57,40.57,0,0,1-8.72,25.19,40.74,40.74,0,1,1-64,0C186.14,355.56,264.36,332.73,264.36,337.3Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        </g>
                        <ellipse cx="548" cy="493.13" rx="548" ry="8.86" fill="#667eea" opacity="0.1"></ellipse>
                        <ellipse cx="548" cy="565.88" rx="548" ry="8.86" fill="#667eea" opacity="0.1"></ellipse>
                        <ellipse cx="548" cy="341.3" rx="548" ry="8.86" fill="#667eea" opacity="0.1"></ellipse>
                        <ellipse cx="548" cy="417.21" rx="548" ry="8.86" fill="#667eea" opacity="0.1"></ellipse>
                        <path d="M860.79,273a18.3,18.3,0,0,0-10.6,1.16,15.65,15.65,0,0,1-12.74,0,17.88,17.88,0,0,0-15,.29,9.24,9.24,0,0,1-4.31,1.08c-6.08,0-11.13-6.12-12.18-14.19a11.88,11.88,0,0,0,3-3.27c3.56-5.74,9.07-9.43,15.27-9.43s11.64,3.64,15.2,9.32a11.68,11.68,0,0,0,10.09,5.54h.16C854.57,263.45,858.76,267.33,860.79,273Z" transform="translate(-52 -162.63)" fill="#667eea" opacity="0.1"></path>
                        <path d="M879.3,247.65l-9.82,6.22,6-10.84a9.7,9.7,0,0,0-5.94-2.11h-.16a11.35,11.35,0,0,1-2-.15L864,242.88l1.43-2.6a11.79,11.79,0,0,1-5.83-4.42l-6,3.78,3.76-6.84c-3.48-4.18-8.18-6.74-13.34-6.74-6.2,0-11.71,3.68-15.28,9.42a11.41,11.41,0,0,1-10.09,5.44h-.33c-6.84,0-12.38,7.75-12.38,17.31s5.54,17.32,12.38,17.32a9.39,9.39,0,0,0,4.31-1.08,17.86,17.86,0,0,1,15-.3,15.55,15.55,0,0,0,12.74,0,17.92,17.92,0,0,1,14.86.29,9.3,9.3,0,0,0,4.26,1.06c6.84,0,12.38-7.76,12.38-17.32A21.93,21.93,0,0,0,879.3,247.65Z" transform="translate(-52 -162.63)" fill="#667eea" opacity="0.1"></path>
                        <path d="M443.26,267.59a12.84,12.84,0,0,0-7.43.81,10.92,10.92,0,0,1-8.91,0,12.48,12.48,0,0,0-10.49.21,6.62,6.62,0,0,1-3,.75c-4.25,0-7.79-4.28-8.53-9.93a8.32,8.32,0,0,0,2.13-2.29c2.49-4,6.35-6.6,10.69-6.6s8.15,2.55,10.64,6.52a8.19,8.19,0,0,0,7.07,3.88h.11C438.9,260.92,441.83,263.64,443.26,267.59Z" transform="translate(-52 -162.63)" fill="#667eea" opacity="0.1"></path>
                        <path d="M456.21,249.86l-6.87,4.36,4.17-7.59a6.75,6.75,0,0,0-4.15-1.48h-.12a7.49,7.49,0,0,1-1.42-.11l-2.33,1.48,1-1.82a8.3,8.3,0,0,1-4.08-3.09l-4.17,2.64,2.64-4.78a12.21,12.21,0,0,0-9.34-4.73c-4.34,0-8.2,2.58-10.69,6.6a8,8,0,0,1-7.07,3.81h-.23c-4.79,0-8.67,5.42-8.67,12.12s3.88,12.12,8.67,12.12a6.5,6.5,0,0,0,3-.76,12.5,12.5,0,0,1,10.48-.2,11.1,11.1,0,0,0,4.49,1,11,11,0,0,0,4.43-.94,12.54,12.54,0,0,1,10.4.2,6.48,6.48,0,0,0,3,.74c4.78,0,8.66-5.43,8.66-12.12A15.33,15.33,0,0,0,456.21,249.86Z" transform="translate(-52 -162.63)" fill="#667eea" opacity="0.1"></path>
                        <path d="M321.59,346a12.82,12.82,0,0,1,7.42.81,10.94,10.94,0,0,0,8.92,0,12.52,12.52,0,0,1,10.49.2,6.47,6.47,0,0,0,3,.76c4.25,0,7.79-4.29,8.52-9.94a8.15,8.15,0,0,1-2.12-2.29c-2.5-4-6.36-6.59-10.69-6.59s-8.15,2.54-10.65,6.52a8.19,8.19,0,0,1-7.06,3.88h-.11C325.94,339.37,323,342.08,321.59,346Z" transform="translate(-52 -162.63)" fill="#667eea" opacity="0.1"></path>
                        <path d="M308.63,328.3l6.88,4.36-4.18-7.58a6.79,6.79,0,0,1,4.16-1.49h.11a8.52,8.52,0,0,0,1.43-.1l2.33,1.47-1-1.81a8.29,8.29,0,0,0,4.07-3.09l4.17,2.64L324,317.91a12.2,12.2,0,0,1,9.34-4.72c4.33,0,8.2,2.58,10.69,6.6a8,8,0,0,0,7.06,3.81h.24c4.78,0,8.66,5.43,8.66,12.12s-3.88,12.12-8.66,12.12a6.49,6.49,0,0,1-3-.75,12.48,12.48,0,0,0-10.49-.21,10.86,10.86,0,0,1-4.48,1,11,11,0,0,1-4.44-.94,12.52,12.52,0,0,0-10.39.2,6.48,6.48,0,0,1-3,.74c-4.79,0-8.67-5.42-8.67-12.12A15.44,15.44,0,0,1,308.63,328.3Z" transform="translate(-52 -162.63)" fill="#667eea" opacity="0.1"></path>
                        <path d="M716.31,652.89c2.61-4.84-.35-10.76-3.75-15.07s-7.56-8.8-7.47-14.29c.13-7.89,8.51-12.56,15.2-16.74a74.3,74.3,0,0,0,13.65-11,20.13,20.13,0,0,0,4.19-5.62c1.39-3.08,1.35-6.6,1.26-10q-.43-16.89-1.67-33.76" transform="translate(-52 -162.63)" fill="none" stroke="#3f3d56" stroke-miterlimit="10" stroke-width="4"></path>
                        <path d="M750.45,545.85a12.31,12.31,0,0,0-6.15-10.09l-2.76,5.45.09-6.6a12.31,12.31,0,1,0,8.82,11.24Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M728.49,629.17a12.31,12.31,0,0,1-23.24-5,12,12,0,0,1,.8-5,12.32,12.32,0,0,1,23,.13l-7.69,6.26,8.46-2A12.24,12.24,0,0,1,728.49,629.17Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M722.41,605.27a12.31,12.31,0,0,1-3.9-24.15l-.07,5.07,2.79-5.52h0a12.31,12.31,0,1,1,1.15,24.6Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M752.3,585.38a12.31,12.31,0,1,1,5.44-23l-2.17,6L760,564a12.31,12.31,0,0,1-7.74,21.37Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M748.79,549.13c-2.84.31-5.6,1.19-8.46,1.37s-6-.51-7.78-2.72a39.48,39.48,0,0,1-2.28-4,8.76,8.76,0,0,0-3.1-2.92,12.31,12.31,0,1,0,23,8.18C749.72,549.05,749.25,549.08,748.79,549.13Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M752.3,585.38a12.31,12.31,0,0,1-11.71-17.56,9.11,9.11,0,0,1,2.47,2.48,41.72,41.72,0,0,0,2.44,4.07c1.92,2.25,5.2,3,8.17,2.85s5.84-1,8.8-1.25c.41,0,.82-.06,1.24-.07A12.31,12.31,0,0,1,752.3,585.38Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M722.41,605.27a12.31,12.31,0,0,1-11.81-17.33,10,10,0,0,1,2.61,2.5,41.23,41.23,0,0,0,2.67,4.15c2.07,2.31,5.57,3.13,8.71,3s6-.81,9-1A12.33,12.33,0,0,1,722.41,605.27Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M728.49,629.17a12.31,12.31,0,0,1-23.24-5,12,12,0,0,1,.8-5,12.29,12.29,0,0,1,2.7,2.41c1.17,1.42,1.94,3,3.3,4.37,2.51,2.47,6.58,3.49,10.19,3.58A51.7,51.7,0,0,0,728.49,629.17Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M106.31,580.89c2.61-4.84-.35-10.76-3.75-15.07S95,557,95.09,551.53c.13-7.89,8.51-12.56,15.2-16.74a74.3,74.3,0,0,0,13.65-11,20.13,20.13,0,0,0,4.19-5.62c1.39-3.08,1.35-6.6,1.26-10q-.44-16.89-1.67-33.76" transform="translate(-52 -162.63)" fill="none" stroke="#3f3d56" stroke-miterlimit="10" stroke-width="4"></path>
                        <path d="M140.45,473.85a12.31,12.31,0,0,0-6.15-10.09l-2.76,5.45.09-6.6a12.31,12.31,0,1,0,8.82,11.24Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M118.49,557.17a12.31,12.31,0,0,1-23.24-5,12,12,0,0,1,.8-5,12.32,12.32,0,0,1,23,.13l-7.69,6.26,8.46-2A12.24,12.24,0,0,1,118.49,557.17Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M112.41,533.27a12.31,12.31,0,0,1-3.9-24.15l-.07,5.07,2.79-5.52h0a12.31,12.31,0,1,1,1.15,24.6Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M142.3,513.38a12.31,12.31,0,1,1,5.44-23l-2.17,6L150,492a12.31,12.31,0,0,1-7.74,21.37Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M138.79,477.13c-2.84.31-5.6,1.19-8.46,1.37s-6-.51-7.78-2.72a39.48,39.48,0,0,1-2.28-4,8.76,8.76,0,0,0-3.1-2.92,12.31,12.31,0,1,0,23,8.18C139.72,477.05,139.25,477.08,138.79,477.13Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M142.3,513.38a12.31,12.31,0,0,1-11.71-17.56,9.11,9.11,0,0,1,2.47,2.48,41.72,41.72,0,0,0,2.44,4.07c1.92,2.25,5.2,3,8.17,2.85s5.84-1,8.8-1.25c.41,0,.82-.06,1.24-.07A12.31,12.31,0,0,1,142.3,513.38Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M112.41,533.27a12.31,12.31,0,0,1-11.81-17.33,10,10,0,0,1,2.61,2.5,41.23,41.23,0,0,0,2.67,4.15c2.07,2.31,5.57,3.13,8.71,3s6-.81,9-1A12.33,12.33,0,0,1,112.41,533.27Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M118.49,557.17a12.31,12.31,0,0,1-23.24-5,12,12,0,0,1,.8-5,12.29,12.29,0,0,1,2.7,2.41c1.17,1.42,1.94,3,3.3,4.37,2.51,2.47,6.58,3.49,10.19,3.58A51.7,51.7,0,0,0,118.49,557.17Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M512.52,498.52c-2.61-4.83.35-10.75,3.76-15.06s7.55-8.8,7.46-14.29c-.12-7.9-8.5-12.56-15.2-16.74a74,74,0,0,1-13.64-11,19.78,19.78,0,0,1-4.2-5.61c-1.38-3.09-1.34-6.6-1.26-10q.45-16.89,1.67-33.76" transform="translate(-52 -162.63)" fill="none" stroke="#3f3d56" stroke-miterlimit="10" stroke-width="4"></path>
                        <path d="M478.39,391.49a12.3,12.3,0,0,1,6.14-10.09l2.76,5.45-.08-6.6a12.62,12.62,0,0,1,4.05-.49,12.31,12.31,0,1,1-12.87,11.73Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M500.34,474.81a12.31,12.31,0,1,0-.59-9.91l7.69,6.26-8.46-2A12.24,12.24,0,0,0,500.34,474.81Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M506.42,450.91a12.31,12.31,0,0,0,3.91-24.15l.06,5.07-2.79-5.52h0A12.31,12.31,0,0,0,494.7,438a12.16,12.16,0,0,0,.53,4.2A12.3,12.3,0,0,0,506.42,450.91Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M476.54,431a12.31,12.31,0,1,0-5.45-23l2.18,6-4.48-4.29a12.21,12.21,0,0,0-4,8.5,11.91,11.91,0,0,0,.31,3.39A12.3,12.3,0,0,0,476.54,431Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M480.05,394.77c2.84.31,5.6,1.19,8.45,1.37s6-.51,7.79-2.72a39.4,39.4,0,0,0,2.27-4,8.79,8.79,0,0,1,3.11-2.92,12.31,12.31,0,1,1-23,8.17C479.12,394.68,479.58,394.72,480.05,394.77Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M476.54,431a12.32,12.32,0,0,0,11.71-17.56,9.15,9.15,0,0,0-2.48,2.48,41.72,41.72,0,0,1-2.44,4.07c-1.91,2.25-5.19,3-8.16,2.85s-5.84-1-8.8-1.25c-.41,0-.83-.06-1.24-.07A12.3,12.3,0,0,0,476.54,431Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M506.42,450.91a12.3,12.3,0,0,0,11.81-17.33,9.83,9.83,0,0,0-2.6,2.5,41.23,41.23,0,0,1-2.67,4.15c-2.08,2.31-5.57,3.13-8.72,3s-6-.81-9-1A12.3,12.3,0,0,0,506.42,450.91Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M500.34,474.81a12.31,12.31,0,0,0,22.45-10,11.82,11.82,0,0,0-2.7,2.41c-1.17,1.42-2,3-3.3,4.37-2.52,2.47-6.58,3.49-10.2,3.58A53.94,53.94,0,0,1,500.34,474.81Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <circle cx="779.73" cy="238.18" r="99.96" fill="#3f3d56"></circle>
                        <path d="M874.64,426.59c-3.48-3.48-11.85-8.73-16-10.69-4.79-2.3-6.55-2.26-9.94.19-2.82,2-4.65,3.93-7.89,3.22s-9.66-5.55-15.87-11.74S813.91,395,813.22,391.71s1.21-5.08,3.23-7.9c2.44-3.39,2.51-5.15.19-9.94-2-4.15-7.19-12.5-10.7-16s-4.27-2.73-6.19-2a35.8,35.8,0,0,0-5.67,3c-3.48,2.33-5.43,4.27-6.8,7.19s-2.92,8.34,5.05,22.53a125.69,125.69,0,0,0,22.1,29.47l0,0,0,0A125.88,125.88,0,0,0,844,440.2c14.18,8,19.61,6.41,22.53,5.05s4.86-3.29,7.18-6.8a35.33,35.33,0,0,0,3-5.67C877.37,430.86,878.15,430.08,874.64,426.59Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M831.73,300.86a100,100,0,1,0,99.95,99.95A100,100,0,0,0,831.73,300.86Zm0,186.62a86.67,86.67,0,1,1,86.67-86.67A86.67,86.67,0,0,1,831.73,487.48Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <circle cx="550.08" cy="390.01" r="99.96" fill="#3f3d56"></circle>
                        <path d="M658.93,522.44,629,552.89a.54.54,0,0,0,0,.78L650,576a3.62,3.62,0,0,1-2.55,6.17,3.64,3.64,0,0,1-2.56-1.06L624,558.86a.57.57,0,0,0-.8,0L618.11,564a22.37,22.37,0,0,1-16,6.73,22.86,22.86,0,0,1-16.28-6.92l-4.89-5a.57.57,0,0,0-.8,0l-20.84,22.2a3.61,3.61,0,0,1-5.11,0,3.6,3.6,0,0,1,0-5.11l20.92-22.28a.6.6,0,0,0,0-.78l-29.93-30.45a.55.55,0,0,0-.94.39v60.93a8.92,8.92,0,0,0,8.89,8.89H651a8.92,8.92,0,0,0,8.89-8.89V522.83A.55.55,0,0,0,658.93,522.44Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M602.08,563.5A15.14,15.14,0,0,0,613,559l43.59-44.37a8.7,8.7,0,0,0-5.5-2H553.15a8.64,8.64,0,0,0-5.5,2L591.25,559A15.08,15.08,0,0,0,602.08,563.5Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M600.82,452.69a100,100,0,1,0,99.95,99.95A100,100,0,0,0,600.82,452.69Zm0,186.62a86.67,86.67,0,1,1,86.67-86.67A86.67,86.67,0,0,1,600.82,639.31Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <circle cx="312.85" cy="315.36" r="99.96" fill="#3f3d56"></circle>
                        <path d="M364.85,430.16,325,522.1l3.72,3.72,36.14-15.94L401,525.82l3.72-3.72Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M364.85,378A100,100,0,1,0,464.8,478,100,100,0,0,0,364.85,378Zm0,186.62A86.67,86.67,0,1,1,451.52,478,86.67,86.67,0,0,1,364.85,564.66Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M840.93,603.88q-1.36-3.32-2.79-6.62a19.65,19.65,0,0,0-3.41-5.89,6.24,6.24,0,0,0-2-1.5,8.53,8.53,0,0,0-2.61-.52,20.83,20.83,0,0,0-4.1-.11c-.53-.16-1.13-.37-1.72-.61a14.28,14.28,0,0,0,10.64-13.25c0-.2,0-.41,0-.61a14.25,14.25,0,0,0-14.19-14.31,14,14,0,0,0-7.45,2.13,13.37,13.37,0,0,0-15,7.23,16.53,16.53,0,0,0-5.1,12.3c0,.21,0,.43,0,.63.26,7.77,5.28,14,11.62,14.63a6.66,6.66,0,0,0-1.84,1.23c-1.94,1.87-2.26,4.84-2.47,7.54l-.15,2L797,609.35a.62.62,0,0,0-.15,1.09l3.21,2.29c0,.19,0,.38,0,.57s0,.43.06.65a4.59,4.59,0,0,0-1.24,1.77,8.18,8.18,0,0,0-.29,3.24l.12,2.79a21.91,21.91,0,0,0,.85,6.21c.42,1.24,2.24,4.23,3.55,4.25-1.21,5.5-1.53,17.1-1.53,17.1-.15.15.27.29,1,.41.72,5.52,3.07,21,7.24,27.81a58.64,58.64,0,0,1,1.57,6.76s1.19,14.71,2.76,19.08c1.34,3.72,2.4,12.9,2.69,15.56a1.53,1.53,0,0,0-1.11,1.14c-.79,2.38-5.91,6-5.91,6a24.76,24.76,0,0,0-4.42,2.83c-1.61,1.45-1.55,2.76,5.6,1.94,13.8-1.59,16.16-6,16.16-6s-.22-.74-.55-1.7a18.46,18.46,0,0,0-1.81-4.27c-.2-.19-.4.13-.64.63a85.63,85.63,0,0,1-.94-19.31s.39-6.76-1.58-11.53a21.83,21.83,0,0,1,0-7.55c.79-3.18-3.15-18.69-3.15-18.69L816.23,651a3.28,3.28,0,0,1,.63,1.33l.06.23.06.33a.62.62,0,0,0,.16.31c1.54,6.4,5.76,24.13,5.76,26.73,0,3.18,3.94,11.13,3.94,11.13s1.57,13.12,4.33,18.28c2.1,3.93,2.15,9.69,2.05,12.23h0s-.47,3.27-1.26,4.06a9.66,9.66,0,0,0-1.49,2.59l-.09.19s-1.18,2.39-.39,2.79a19.37,19.37,0,0,0,9.46,1.19s1.58-2,1.58-2.78a12.52,12.52,0,0,0-.18-1.42c-.29-1.88-.83-4.84-.84-4.87.33-1.28-1-4.84-1-4.84l-.4-11.13a51.38,51.38,0,0,0-2.76-22.27s-2-7.15-1.57-9.14-.79-23.06-.79-23.06l-.12-.3a22.78,22.78,0,0,1,.12-4.47c.39-4.77-1.18-14.71-1.58-15.1a13.1,13.1,0,0,1-.56-3.29c.09-.83.36-3.26.73-6.28a112.91,112.91,0,0,0,11.62-1,1.45,1.45,0,0,0,1-.4,1.4,1.4,0,0,0,.23-.81C845.39,615.24,843.2,609.42,840.93,603.88ZM833,616.49c.41-2.85.85-5.61,1.29-7.66l.06.18a55.65,55.65,0,0,1,1.9,6.3A21.43,21.43,0,0,1,833,616.49Z" transform="translate(-52 -162.63)" fill="url(#eb6c86d6-45fa-49e0-9a60-1b0612516196)"></path>
                        <path d="M802.37,648.68s2.36,21.23,7.47,29.48a57.21,57.21,0,0,1,1.57,6.68s1.18,14.54,2.75,18.86,2.75,16.12,2.75,16.12,5.5,6.28,7.47,1.18a82.82,82.82,0,0,1-1.18-20.44s.39-6.68-1.57-11.4a21.32,21.32,0,0,1,0-7.46c.78-3.15-3.15-18.47-3.15-18.47l-3.14-15.33Z" transform="translate(-52 -162.63)" fill="#be6f72"></path>
                        <path d="M827.13,724.93s-2.36,4.32-16.11,5.89c-7.14.81-7.19-.48-5.58-1.92a24.9,24.9,0,0,1,4.4-2.8s5.11-3.53,5.89-5.89,3.54-.39,3.54-.39c3.93,5.89,4.72-1.58,5.5-.79a17.73,17.73,0,0,1,1.81,4.21C826.91,724.19,827.13,724.93,827.13,724.93Z" transform="translate(-52 -162.63)" fill="#ff6f61"></path>
                        <path d="M827.13,724.93s-2.36,4.32-16.11,5.89c-7.14.81-7.19-.48-5.58-1.92,1.12.71,3.38,1,7.93-.83,6.55-2.68,11.3-4.23,13.21-4.83C826.91,724.19,827.13,724.93,827.13,724.93Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M823.2,700.56s.39-6.68-1.57-11.4a21.32,21.32,0,0,1,0-7.46c.78-3.15-3.15-18.47-3.15-18.47l-3.14-15.33-2.72.16,3.11,15.17s3.93,15.32,3.15,18.47a21.32,21.32,0,0,0,0,7.46c2,4.72,1.57,11.4,1.57,11.4A82.82,82.82,0,0,0,821.63,721a3.44,3.44,0,0,1-1.14,1.62c1.46.66,3,.63,3.89-1.62A82.82,82.82,0,0,1,823.2,700.56Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M820.64,562.42a14,14,0,0,0-7.42,2.11,13.35,13.35,0,0,0-15,7.15,16.28,16.28,0,0,0-5.09,12.16c0,8.36,5.63,15.13,12.57,15.13,5,0,9.38-3.56,11.39-8.71a13.8,13.8,0,0,0,3.54.46,14.15,14.15,0,0,0,0-28.3Z" transform="translate(-52 -162.63)" fill="#3f3d56"></path>
                        <path d="M832.24,650.65l1.18,3.14s1.18,20.83.78,22.8,1.58,9,1.58,9a50.31,50.31,0,0,1,2.75,22l.39,11s1.57,4.32.79,5.11S833,723,833,723s.79-8.25-2-13.36-4.32-18.08-4.32-18.08-3.93-7.86-3.93-11-6.29-28.69-6.29-28.69Z" transform="translate(-52 -162.63)" fill="#be6f72"></path>
                        <path d="M801.58,650.26s.4-14.15,2-18.47a29.33,29.33,0,0,0,1.75-6.27s23.79,4.3,25.76,2.73c0,0,.39,5.5.79,5.89s2,10.22,1.57,14.94,0,4.71,0,4.71-16.12,2.36-16.51,0-1.57-2.35-1.57-2.35S800.8,651,801.58,650.26Z" transform="translate(-52 -162.63)" fill="#3f3d56"></path>
                        <g opacity="0.1">
                            <path d="M814.55,650.26s-9.94-.27-12.94-.81c0,.51,0,.81,0,.81-.78.78,13.76,1.18,13.76,1.18a1,1,0,0,1,.54.22C815.38,650.26,814.55,650.26,814.55,650.26Z" transform="translate(-52 -162.63)"></path>
                            <path d="M831.85,634.14c-.4-.39-.79-5.89-.79-5.89a1.69,1.69,0,0,1-.67.24c.14,1.66.41,4.21.67,4.47s2,10.22,1.57,14.94,0,4.71,0,4.71-12.75,1.87-15.84.62c0,.17.09.36.12.56.39,2.36,16.51,0,16.51,0s-.4,0,0-4.71S832.24,634.54,831.85,634.14Z" transform="translate(-52 -162.63)"></path>
                            <path d="M814.55,650.26s-9.94-.27-12.94-.81c0,.51,0,.81,0,.81-.78.78,13.76,1.18,13.76,1.18a1,1,0,0,1,.54.22C815.38,650.26,814.55,650.26,814.55,650.26Z" transform="translate(-52 -162.63)" fill="url(#ad310e25-2b04-44c8-bb7b-982389166780)"></path>
                            <path d="M831.85,634.14c-.4-.39-.79-5.89-.79-5.89a1.69,1.69,0,0,1-.67.24c.14,1.66.41,4.21.67,4.47s2,10.22,1.57,14.94,0,4.71,0,4.71-12.75,1.87-15.84.62c0,.17.09.36.12.56.39,2.36,16.51,0,16.51,0s-.4,0,0-4.71S832.24,634.54,831.85,634.14Z" transform="translate(-52 -162.63)" fill="url(#ad310e25-2b04-44c8-bb7b-982389166780)"></path>
                        </g>
                        <path d="M818.9,587.18a5.21,5.21,0,0,0,1.5,1.94,3.36,3.36,0,0,0,1.41.61c-.88.51-1.84.89-2.72,1.4a48.36,48.36,0,0,0-4,3,8.14,8.14,0,0,1-4.59,1.78,5.62,5.62,0,0,0,.64-5.59,5.22,5.22,0,0,1-.7-1.94c0-1.13,1-2,1.93-2.6.75-.51,1.52-1,2.3-1.49.61-.38,1.53-1.18,2.3-1.15s.86.71,1,1.41A11.09,11.09,0,0,0,818.9,587.18Z" transform="translate(-52 -162.63)" fill="#be6f72"></path>
                        <path d="M818.9,587.18a5.21,5.21,0,0,0,1.5,1.94,3.36,3.36,0,0,0,1.41.61c-.88.51-1.84.89-2.72,1.4a48.36,48.36,0,0,0-4,3,8.14,8.14,0,0,1-4.59,1.78,5.62,5.62,0,0,0,.64-5.59,5.22,5.22,0,0,1-.7-1.94c0-1.13,1-2,1.93-2.6.75-.51,1.52-1,2.3-1.49.61-.38,1.53-1.18,2.3-1.15s.86.71,1,1.41A11.09,11.09,0,0,0,818.9,587.18Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <circle cx="776.11" cy="438.7" r="9.04" fill="#be6f72"></circle>
                        <path d="M840.88,729.64c0,.79-1.57,2.75-1.57,2.75a19.46,19.46,0,0,1-9.43-1.18c-.79-.39.39-2.75.39-2.75l.09-.19a9.54,9.54,0,0,1,1.49-2.56c.78-.78,1.25-4,1.25-4,2.44-4,6.77,1.73,6.77,1.73s.55,3,.84,4.82C840.81,728.91,840.88,729.44,840.88,729.64Z" transform="translate(-52 -162.63)" fill="#ff6f61"></path>
                        <path d="M840.88,729.64c0,.79-1.57,2.75-1.57,2.75a19.46,19.46,0,0,1-9.43-1.18c-.79-.39.39-2.75.39-2.75l.09-.19a19,19,0,0,0,8.56,1.76l1.79-1.79C840.81,728.91,840.88,729.44,840.88,729.64Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <circle cx="758.03" cy="419.83" r="8.84" fill="#be6f72"></circle>
                        <path d="M802.9,600.14c-1.94,1.85-2.26,4.78-2.46,7.45l-.3,3.91a19.72,19.72,0,0,0-.07,3.17c0,.65.16,1.31.22,2s.08,1.56.09,2.35l0,5.78a6.82,6.82,0,0,0,.64,3.47,2.36,2.36,0,0,0,3,1.08,3.42,3.42,0,0,0,1.24-1.92,29.85,29.85,0,0,0,2-7.32c.08-.87.09-1.74.17-2.61s.23-1.78.36-2.66c.56-3.68.81-7.4,1.06-11.11.07-1.1,1.06-5.43-.38-5.91-.7-.23-2.15.49-2.82.73A7.94,7.94,0,0,0,802.9,600.14Z" transform="translate(-52 -162.63)" fill="#be6f72"></path>
                        <path d="M802.9,600.14c-1.94,1.85-2.26,4.78-2.46,7.45l-.3,3.91a19.72,19.72,0,0,0-.07,3.17c0,.65.16,1.31.22,2s.08,1.56.09,2.35l0,5.78a6.82,6.82,0,0,0,.64,3.47,2.36,2.36,0,0,0,3,1.08,3.42,3.42,0,0,0,1.24-1.92,29.85,29.85,0,0,0,2-7.32c.08-.87.09-1.74.17-2.61s.23-1.78.36-2.66c.56-3.68.81-7.4,1.06-11.11.07-1.1,1.06-5.43-.38-5.91-.7-.23-2.15.49-2.82.73A7.94,7.94,0,0,0,802.9,600.14Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M821.23,588.16s-6.68,5.11-10.61,6.29c0,0-2.33,2.66-2.73,3.3s-1.2,7.7-2,9.28-2.75,5.11,0,8.64c0,0,.78,3.54.39,4.72s-1.82,5.5-.52,5.7,5.24,2.94,8.77,2.16,16.71,3,16.71,3S833.42,611,835,607.42l-3.54-1.18s-9.82-5.89-3.93-14.93C827.52,591.31,822,590.13,821.23,588.16Z" transform="translate(-52 -162.63)" fill="#ff6f61"></path>
                        <path d="M796.84,611.83l8.12,5.75a.6.6,0,0,0,.71,0l2.2-1.65a.62.62,0,0,0,0-.94l-6.25-5.55a.6.6,0,0,0-.61-.12L797,610.76A.61.61,0,0,0,796.84,611.83Z" transform="translate(-52 -162.63)" fill="#3f3d56"></path>
                        <path d="M799.57,629.15a21.76,21.76,0,0,1-.85-6.13l-.12-2.77a8,8,0,0,1,.29-3.2,5.23,5.23,0,0,1,3.37-2.95,11.64,11.64,0,0,1,4.59-.33,1.18,1.18,0,0,1,.59.16,1.1,1.1,0,0,1,.32.54,3.62,3.62,0,0,1,.18,2.89,3,3,0,0,1-.92.95c-1.09.78-2.36,1.3-3.39,2.15a1.23,1.23,0,0,0-.46.58,1.35,1.35,0,0,0,0,.63,10.08,10.08,0,0,0,.52,1.61,1.59,1.59,0,0,0,.45.68c.19.16.44.22.64.37.43.35,1.33.81,1.28,1.36-.15,2-1.35,4.24-1.82,6.22C803.34,635.78,800.15,630.84,799.57,629.15Z" transform="translate(-52 -162.63)" fill="#be6f72"></path>
                        <g opacity="0.1">
                            <path d="M812.2,628.25l-.22,0a6.73,6.73,0,0,0,2.57,0l.25,0A9,9,0,0,0,812.2,628.25Z" transform="translate(-52 -162.63)"></path>
                            <path d="M832.83,606.83c-1.41,3.17-3.49,20.34-3.86,23.75,1.38.36,2.29.62,2.29.62S833.42,611,835,607.42Z" transform="translate(-52 -162.63)"></path>
                        </g>
                        <path d="M828.42,601.61a3,3,0,0,0,1.29,1.95,17.31,17.31,0,0,1,2.29,2.32,16.43,16.43,0,0,1,2.27,4.55,55.75,55.75,0,0,1,1.89,6.22c-5,2.32-10.68,2.21-16,3.74a12.77,12.77,0,0,0-6,3.55,8.27,8.27,0,0,0-2.21,6.51.85.85,0,0,0,.12.39.84.84,0,0,0,.7.28,6,6,0,0,0,3.67-1.26,17.46,17.46,0,0,0,2.81-2.76,4.52,4.52,0,0,1,2-1.48c2.89-.88,6-.83,9-.88a113.42,113.42,0,0,0,13.41-1.06,1.08,1.08,0,0,0,1.2-1.2c.44-5.9-1.75-11.66-4-17.13q-1.35-3.29-2.78-6.55a19.4,19.4,0,0,0-3.4-5.82,6,6,0,0,0-2-1.48A8.46,8.46,0,0,0,830,591a19,19,0,0,0-4.39-.08,9.36,9.36,0,0,0-.42,2.27c.08,2.7,1.26,5.23,2.42,7.67C827.76,601.23,828.19,601.25,828.42,601.61Z" transform="translate(-52 -162.63)" fill="#be6f72"></path>
                        <path d="M812.41,606.67a7.33,7.33,0,0,0-1,3.82,5.14,5.14,0,0,0,.25,1.56,5.06,5.06,0,0,0,3.19,3" transform="translate(-52 -162.63)" fill="none" stroke="#000" stroke-miterlimit="10" opacity="0.1"></path>
                        <path d="M817.5,573.82a4.59,4.59,0,0,0-1.45.23c-1.31-2-4.39-3.38-8-3.38-4.78,0-8.65,2.47-8.65,5.51s3.87,5.5,8.65,5.5a12.17,12.17,0,0,0,5.19-1.1,4.71,4.71,0,1,0,4.24-6.76Z" transform="translate(-52 -162.63)" fill="#3f3d56"></path>
                        <path d="M817.89,582.07a4.7,4.7,0,0,1-4.24-2.67,12.17,12.17,0,0,1-5.19,1.1c-4.77,0-8.64-2.46-8.64-5.5a3.31,3.31,0,0,1,0-.55,3.73,3.73,0,0,0-.44,1.73c0,3,3.87,5.5,8.65,5.5a12.17,12.17,0,0,0,5.19-1.1,4.71,4.71,0,0,0,8.87-1.17A4.69,4.69,0,0,1,817.89,582.07Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M798.23,574a13.35,13.35,0,0,1,15-7.15,14.14,14.14,0,0,1,21.52,10.86c0-.39,0-.78,0-1.18a14.14,14.14,0,0,0-21.57-12,13.35,13.35,0,0,0-15,7.15,16.28,16.28,0,0,0-5.09,12.16c0,.4,0,.79,0,1.18A16,16,0,0,1,798.23,574Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M888.39,577c2.61-4.83-.35-10.76-3.76-15.07s-7.55-8.79-7.46-14.29c.12-7.89,8.5-12.55,15.2-16.74a73.9,73.9,0,0,0,13.64-11,19.93,19.93,0,0,0,4.2-5.61c1.38-3.09,1.34-6.6,1.26-10q-.44-16.9-1.67-33.76" transform="translate(-52 -162.63)" fill="none" stroke="#3f3d56" stroke-miterlimit="10" stroke-width="4"></path>
                        <path d="M922.52,469.93a12.29,12.29,0,0,0-6.14-10.08l-2.76,5.45.08-6.6a12.08,12.08,0,0,0-4.05-.49,12.31,12.31,0,1,0,12.87,11.72Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M900.57,553.26a12.31,12.31,0,1,1,.59-9.92l-7.69,6.26,8.46-2A12.24,12.24,0,0,1,900.57,553.26Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M894.49,529.35a12.31,12.31,0,0,1-3.91-24.15l-.06,5.07,2.79-5.51h0a12.32,12.32,0,0,1,12.87,11.73,12.3,12.3,0,0,1-11.72,12.87Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M924.37,509.47a12.31,12.31,0,1,1,5.45-23l-2.18,6,4.48-4.3a12.24,12.24,0,0,1,4,8.5,11.88,11.88,0,0,1-.31,3.39A12.31,12.31,0,0,1,924.37,509.47Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M920.87,473.21c-2.84.32-5.61,1.2-8.46,1.38s-6-.51-7.79-2.73a38.2,38.2,0,0,1-2.27-4,8.85,8.85,0,0,0-3.1-2.92,12.31,12.31,0,1,0,23,8.17C921.79,473.13,921.33,473.16,920.87,473.21Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M924.37,509.47a12.32,12.32,0,0,1-11.71-17.56,9.11,9.11,0,0,1,2.48,2.47,39.47,39.47,0,0,0,2.44,4.07c1.91,2.26,5.19,3,8.16,2.86s5.84-1,8.8-1.25c.41,0,.83-.07,1.24-.08A12.31,12.31,0,0,1,924.37,509.47Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M894.49,529.35A12.3,12.3,0,0,1,882.68,512a10.15,10.15,0,0,1,2.6,2.5c1,1.35,1.55,2.91,2.67,4.15,2.08,2.32,5.57,3.13,8.72,3.06s6-.82,9-1.05A12.31,12.31,0,0,1,894.49,529.35Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M900.57,553.26a12.32,12.32,0,0,1-22.45-10,12.06,12.06,0,0,1,2.7,2.41c1.18,1.43,1.95,3,3.3,4.38,2.52,2.47,6.58,3.48,10.2,3.58A53.94,53.94,0,0,0,900.57,553.26Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M1047.39,729c2.61-4.83-.35-10.76-3.76-15.07s-7.55-8.79-7.46-14.29c.12-7.89,8.5-12.55,15.2-16.74a73.9,73.9,0,0,0,13.64-11,19.93,19.93,0,0,0,4.2-5.61c1.38-3.09,1.34-6.6,1.26-10q-.43-16.9-1.67-33.76" transform="translate(-52 -162.63)" fill="none" stroke="#3f3d56" stroke-miterlimit="10" stroke-width="4"></path>
                        <path d="M1081.52,621.93a12.29,12.29,0,0,0-6.14-10.08l-2.76,5.45.08-6.6a12.08,12.08,0,0,0-4-.49,12.31,12.31,0,1,0,12.87,11.72Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M1059.57,705.26a12.31,12.31,0,1,1,.59-9.92l-7.69,6.26,8.46-2A12.24,12.24,0,0,1,1059.57,705.26Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M1053.49,681.35a12.31,12.31,0,0,1-3.91-24.15l-.06,5.07,2.79-5.51h0a12.32,12.32,0,0,1,12.87,11.73,12.3,12.3,0,0,1-11.72,12.87Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M1083.37,661.47a12.31,12.31,0,1,1,5.45-23l-2.18,6,4.48-4.3a12.24,12.24,0,0,1,4,8.5,11.88,11.88,0,0,1-.31,3.39A12.31,12.31,0,0,1,1083.37,661.47Z" transform="translate(-52 -162.63)" fill="#667eea"></path>
                        <path d="M1079.87,625.21c-2.84.32-5.61,1.2-8.46,1.38s-6-.51-7.79-2.73a38.2,38.2,0,0,1-2.27-4,8.85,8.85,0,0,0-3.1-2.92,12.31,12.31,0,1,0,23,8.17C1080.79,625.13,1080.33,625.16,1079.87,625.21Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M1083.37,661.47a12.32,12.32,0,0,1-11.71-17.56,9.11,9.11,0,0,1,2.48,2.47,39.47,39.47,0,0,0,2.44,4.07c1.91,2.26,5.19,3,8.16,2.86s5.84-1,8.8-1.25c.41,0,.83-.07,1.24-.08A12.31,12.31,0,0,1,1083.37,661.47Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M1053.49,681.35A12.3,12.3,0,0,1,1041.68,664a10.15,10.15,0,0,1,2.6,2.5c1,1.35,1.55,2.91,2.67,4.15,2.08,2.32,5.57,3.13,8.72,3.06s6-.82,9-1.05A12.31,12.31,0,0,1,1053.49,681.35Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M1059.57,705.26a12.32,12.32,0,0,1-22.45-10,12.06,12.06,0,0,1,2.7,2.41c1.18,1.43,2,3,3.3,4.38,2.52,2.47,6.58,3.48,10.2,3.58A53.94,53.94,0,0,0,1059.57,705.26Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M530,587.91a9.81,9.81,0,0,0-3.91-7.92,11.5,11.5,0,0,0-9.61-11.28,11.48,11.48,0,0,0-7.65-8.55h0a9.76,9.76,0,0,0-1.42-.33l-.14,0-.25,0-.2,0-.22,0-.27,0h-.61a11.26,11.26,0,0,0-10.88,9.62c-3.51-.81-6.72.24-7.31,2.46a3,3,0,0,0,.1,1.78c.6,1.72,2.55,3.37,5.16,4.18l.34.1.51.13.11,0h0a8.84,8.84,0,0,0-.84,3.79,8.74,8.74,0,0,0,4.71,7.8l-.23.14a3.12,3.12,0,0,0-.76,1.06,15.86,15.86,0,0,0-1.47,3.54c-.25,1.06-.29,2.16-.6,3.21-.58,1.93-2.06,3.56-2.23,5.57-.08.9.07,2-.57,2.58a3.11,3.11,0,0,1-.51.36,4.13,4.13,0,0,0-1.11,1.17,3.88,3.88,0,0,1-.78,1.12c-.58.43-1.53.39-1.81,1.06s.45,1.46.28,2.19-.79.87-1.24,1.28a4.45,4.45,0,0,0-1.07,2,6.56,6.56,0,0,1-5.4-1.38,10.09,10.09,0,0,1,.56,2,8.76,8.76,0,0,0-2.91-1.46,9.19,9.19,0,0,1-3.1-2.3l1.66-.23L469,600.41l-2.17-.45,1.94,3.73a1.19,1.19,0,0,0-.66.79,3.39,3.39,0,0,0-.07,1.27,22.73,22.73,0,0,0,.5,3l.56,2.62c.05.24.11.49.18.73a6.89,6.89,0,0,0-2.17.24,18.88,18.88,0,0,0-4.51-1.07,2.5,2.5,0,0,0-1,0,2.59,2.59,0,0,0-.95.77,30.76,30.76,0,0,0-3.35,4.72c-4,6.86-9.21,12.85-14.14,19.05-3.4,1.38-6.83,2.69-10.26,4l-7.38,2.82a11.19,11.19,0,0,1-4.58,1c-.7,0-1.57-.15-2,.45a4.21,4.21,0,0,0-.45,1l-.76.08h0a8.74,8.74,0,0,0-1.77-3.26,1.12,1.12,0,0,0-.83.64c-.18.33-.29.69-.5,1-.39.58-1.08.86-1.57,1.35s-.8,1.25-1.34,1.75a5.3,5.3,0,0,1-2.51,1,15.84,15.84,0,0,0-3.93,1.49,6.33,6.33,0,0,1-1.45.67,5.45,5.45,0,0,1-1.71.06l-3.9-.29a3.08,3.08,0,0,0-1.05.05,2,2,0,0,0-1.24,2,3.15,3.15,0,0,0,1.24,2.15,7.94,7.94,0,0,0,2.22,1.15A65.15,65.15,0,0,0,409.79,658v.79a17.75,17.75,0,0,0,8,1.9,1.24,1.24,0,0,0,.6-.11,1.32,1.32,0,0,0,.5-.78,32.17,32.17,0,0,0,1.56-7.66h0a4,4,0,0,0,1.41-.36c1.34-.37,2.68.55,4.07.7,1.71.19,3.29-.81,4.91-1.42l.7-.23a7.68,7.68,0,0,1-1.62,1.55c-.67.48-1.42.84-2.07,1.34a14.26,14.26,0,0,1-1.76,1.36,11.05,11.05,0,0,1-1.35.52,8.91,8.91,0,0,0-1.93,1,3.91,3.91,0,0,0-1.31,1.28,1.92,1.92,0,0,0-.11,1.8,1.9,1.9,0,0,0,1.29.9,5.29,5.29,0,0,0,1.59,0c2.12-.16,4.23-.35,6.34-.54a16.92,16.92,0,0,0,2.65-.38c.46-.11.92-.26,1.38-.39a12.31,12.31,0,0,1,2.41-.36,2,2,0,0,1,.7.07c.49.16.84.66,1.34.76a2,2,0,0,0,1-.13,22.3,22.3,0,0,1,4.69-.5c.69,0,1.5-.17,1.82-.81s-.26-1.67-.52-2.52a7.71,7.71,0,0,1-.22-1.66,10.39,10.39,0,0,0-1.16-3.94,10.29,10.29,0,0,1-.87-1.8,45.47,45.47,0,0,0,8.63-4.38,15.43,15.43,0,0,1,4.92-2.37,13.38,13.38,0,0,1,6.18.72,140.61,140.61,0,0,1,14.17,4.94c2.21.91,4.41,1.87,6.69,2.56a10.43,10.43,0,0,0,2.38,2.31,11,11,0,0,0,5.15,1.41,67.48,67.48,0,0,0,7.25.27,12.23,12.23,0,0,0,5.4-1,5.55,5.55,0,0,0,1.13-.75,4.48,4.48,0,0,0,3.56-1.31A8.63,8.63,0,0,0,512,646.5c.59-2.28.14-5,1.54-6.82.37-.5.86-.9,1.23-1.4a3.94,3.94,0,0,0,.64-2.31.47.47,0,0,1,.06-.09,8.47,8.47,0,0,0,.6-2.3,13.14,13.14,0,0,1,.65-1.82,56.19,56.19,0,0,0,1.86-5.39,31.49,31.49,0,0,0,.86-3.7c.15-1,.24-2,.32-3a18.63,18.63,0,0,1,.91-4.63,37.68,37.68,0,0,0,2.1-11.08v-.22a7.43,7.43,0,0,0,6.58-7.56,7.89,7.89,0,0,0-.69-3.23A10,10,0,0,0,530,587.91Zm-35.78,43.47c.11.39.24.77.37,1.15-.59-.57-1.16-1.16-1.75-1.74.23.08.47.15.69.24A3.73,3.73,0,0,1,494.19,631.38Zm-2.83-1.92c-3.46-3-7.46-5.33-11-8.24,1.93.95,3.81,2.06,5.67,3.12q3.31,1.89,6.71,3.63A5.49,5.49,0,0,1,491.36,629.46Zm1.47-7.56.17-.17c0,.43,0,.82,0,1.19l-.93-.32A8.28,8.28,0,0,0,492.83,621.9ZM462.43,630a28.63,28.63,0,0,0,3.68-5.25c1.37,2.39,3.6,4.12,5.49,6.13C468.55,630.49,465.49,630.16,462.43,630Z" transform="translate(-52 -162.63)" fill="url(#a964f849-fa65-4178-8cc4-fb8fb10b3617)"></path>
                        <polygon points="415.35 438.25 417.53 438.69 424.96 449.68 421.69 450.12 415.35 438.25" fill="#2f2e41"></polygon>
                        <path d="M414.49,645.46a42.78,42.78,0,0,0,2.18,5.67,54,54,0,0,0,7.25-2.07,22.86,22.86,0,0,0-1.51-2,7.46,7.46,0,0,0-2.05-1.57,5.64,5.64,0,0,0-2.49,0C416.75,645.46,415.62,645.48,414.49,645.46Z" transform="translate(-52 -162.63)" fill="#fbbebe"></path>
                        <path d="M420.37,648.39a4.52,4.52,0,0,1-2.48-2.82A9.08,9.08,0,0,0,416,642.2a1.08,1.08,0,0,0-.84.63c-.18.32-.29.68-.49,1-.4.57-1.1.85-1.6,1.33s-.8,1.23-1.34,1.72a5.32,5.32,0,0,1-2.53,1,16.41,16.41,0,0,0-4,1.47,6.9,6.9,0,0,1-1.47.66,5.82,5.82,0,0,1-1.72,0l-3.94-.28a3.08,3.08,0,0,0-1,0,1.91,1.91,0,0,0-1.25,2,3,3,0,0,0,1.25,2.12,8.3,8.3,0,0,0,2.24,1.14,65.9,65.9,0,0,0,10.56,3v.78a18.28,18.28,0,0,0,8.05,1.87,1.36,1.36,0,0,0,.6-.1,1.32,1.32,0,0,0,.5-.78,31.2,31.2,0,0,0,1.65-8.56,6.82,6.82,0,0,0-.17-2.21c-.22-.71.52-.41-.16-.69" transform="translate(-52 -162.63)" fill="#2f2e41"></path>
                        <path d="M495.93,633.54c-11.68.7-23.22-2.72-34.92-3.08a17.05,17.05,0,0,0-4.34.27,21.87,21.87,0,0,0-4.3,1.67c-6.27,2.92-12.76,5.34-19.24,7.75l-7.45,2.77a11.28,11.28,0,0,1-4.61,1c-.71,0-1.58-.15-2,.44-1.21,1.8-.64,4.43.16,6.45.26.65.7,1.36,1.4,1.43a4.07,4.07,0,0,0,1.42-.36c1.35-.36,2.7.55,4.1.7,1.72.18,3.32-.8,4.95-1.4,2.7-1,5.64-1,8.48-1.44,4.75-.79,9.16-3,13.28-5.51a15.5,15.5,0,0,1,4.95-2.34,13.7,13.7,0,0,1,6.23.71,143,143,0,0,1,14.29,4.86,66.61,66.61,0,0,0,7.46,2.73,27,27,0,0,0,16.73-1c1.87-.74,3.9-2,4-4.06.07-1.15-.83-2.16-1.42-3.15-.38-.63-.77-1.26-1.18-1.87C501.92,637.21,499.48,633.33,495.93,633.54Z" transform="translate(-52 -162.63)" fill="#2f2e41"></path>
                        <path d="M495.93,633.54c-11.68.7-23.22-2.72-34.92-3.08a17.05,17.05,0,0,0-4.34.27,21.87,21.87,0,0,0-4.3,1.67c-6.27,2.92-12.76,5.34-19.24,7.75l-7.45,2.77a11.28,11.28,0,0,1-4.61,1c-.71,0-1.58-.15-2,.44-1.21,1.8-.64,4.43.16,6.45.26.65.7,1.36,1.4,1.43a4.07,4.07,0,0,0,1.42-.36c1.35-.36,2.7.55,4.1.7,1.72.18,3.32-.8,4.95-1.4,2.7-1,5.64-1,8.48-1.44,4.75-.79,9.16-3,13.28-5.51a15.5,15.5,0,0,1,4.95-2.34,13.7,13.7,0,0,1,6.23.71,143,143,0,0,1,14.29,4.86,66.61,66.61,0,0,0,7.46,2.73,27,27,0,0,0,16.73-1c1.87-.74,3.9-2,4-4.06.07-1.15-.83-2.16-1.42-3.15-.38-.63-.77-1.26-1.18-1.87C501.92,637.21,499.48,633.33,495.93,633.54Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M436.92,646q2.74.93,5.53,1.72c1-1.71,3-2.9,3.43-4.86a.46.46,0,0,0,0-.26.48.48,0,0,0-.21-.19,10.48,10.48,0,0,0-4.34-1.27c-1.2-.07-1.75,1.18-2.29,2.06C438.83,643.59,437.41,646.19,436.92,646Z" transform="translate(-52 -162.63)" fill="#fbbebe"></path>
                        <path d="M439.48,644.78a4,4,0,0,1-2.69-1.77c-.25-.45-.53-1.06-1.05-1s-.69.6-.8,1.07a30,30,0,0,1-1.51,5.19,9.74,9.74,0,0,1-3.23,4.25c-.68.47-1.43.82-2.1,1.32a14.43,14.43,0,0,1-1.77,1.34,10.51,10.51,0,0,1-1.36.5,9.43,9.43,0,0,0-1.94,1,3.85,3.85,0,0,0-1.33,1.27,1.83,1.83,0,0,0-.1,1.77,1.89,1.89,0,0,0,1.29.88,5.44,5.44,0,0,0,1.61,0c2.13-.15,4.26-.34,6.39-.53a18.44,18.44,0,0,0,2.67-.37l1.39-.38a11.06,11.06,0,0,1,2.43-.36,1.89,1.89,0,0,1,.71.07c.49.16.84.65,1.35.75a2.26,2.26,0,0,0,1-.13,22.08,22.08,0,0,1,4.73-.49c.7,0,1.52-.18,1.84-.8.4-.78-.26-1.65-.53-2.49a8,8,0,0,1-.22-1.63,9.94,9.94,0,0,0-1.17-3.88c-.54-1-1.28-2.1-.9-3.16a3,3,0,0,0,.36-1.09C444.4,644.39,440.46,645,439.48,644.78Z" transform="translate(-52 -162.63)" fill="#2f2e41"></path>
                        <path d="M478.42,614.8a9.12,9.12,0,0,1-4.66-4.62c-.19-.44-.35-.91-.54-1.35a10.26,10.26,0,0,0-2.78-3.87,1.37,1.37,0,0,0-1-.43,1.09,1.09,0,0,0-.75.81,3.09,3.09,0,0,0-.08,1.25,22.27,22.27,0,0,0,.5,2.92l.57,2.58a5.66,5.66,0,0,0,.35,1.15,4,4,0,0,0,.95,1.13c.52.48,1.05.94,1.58,1.4a5.43,5.43,0,0,0,1,.69,5.81,5.81,0,0,0,1.77.52,15.06,15.06,0,0,1,6.64,2.56s0-1.73,0-1.92a2.54,2.54,0,0,0-.5-1.39A8.87,8.87,0,0,0,478.42,614.8Z" transform="translate(-52 -162.63)" fill="#fbbebe"></path>
                        <path d="M478.42,614.8a9.12,9.12,0,0,1-4.66-4.62c-.19-.44-.35-.91-.54-1.35a10.26,10.26,0,0,0-2.78-3.87,1.37,1.37,0,0,0-1-.43,1.09,1.09,0,0,0-.75.81,3.09,3.09,0,0,0-.08,1.25,22.27,22.27,0,0,0,.5,2.92l.57,2.58a5.66,5.66,0,0,0,.35,1.15,4,4,0,0,0,.95,1.13c.52.48,1.05.94,1.58,1.4a5.43,5.43,0,0,0,1,.69,5.81,5.81,0,0,0,1.77.52,15.06,15.06,0,0,1,6.64,2.56s0-1.73,0-1.92a2.54,2.54,0,0,0-.5-1.39A8.87,8.87,0,0,0,478.42,614.8Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <ellipse cx="450.2" cy="429.57" rx="2.84" ry="2.86" fill="#2f2e41"></ellipse>
                        <path d="M500.44,590.48a3.07,3.07,0,0,0-2.24.32,3.11,3.11,0,0,0-.77,1.05,15.25,15.25,0,0,0-1.48,3.48c-.25,1-.29,2.13-.61,3.16-.58,1.9-2.07,3.51-2.24,5.49-.08.89.07,1.93-.58,2.53a3.68,3.68,0,0,1-.51.37,3.84,3.84,0,0,0-1.12,1.15,3.77,3.77,0,0,1-.79,1.09c-.58.43-1.54.39-1.82,1s.45,1.44.28,2.16-.8.86-1.25,1.26a4.37,4.37,0,0,0-1.08,2,6.67,6.67,0,0,1-5.44-1.35,17.32,17.32,0,0,1,.85,6.22,2.54,2.54,0,0,1-.5,1.92,34.64,34.64,0,0,1,6.67,1.16,4.6,4.6,0,0,0,2.91,0,4.86,4.86,0,0,0,1.34-1.06c1.2-1.22,2.46-2.55,2.75-4.24a24.91,24.91,0,0,0,.05-2.87,16.18,16.18,0,0,1,.73-3.49,41.53,41.53,0,0,0,1.27-7.18c.13-1.5,1.43-2.7,2.11-4,1.28-2.53,2.6-5.16,2.69-8C501.7,591.73,501.38,590.58,500.44,590.48Z" transform="translate(-52 -162.63)" fill="#2f2e41"></path>
                        <path d="M500.44,590.48a3.07,3.07,0,0,0-2.24.32,3.11,3.11,0,0,0-.77,1.05,15.25,15.25,0,0,0-1.48,3.48c-.25,1-.29,2.13-.61,3.16-.58,1.9-2.07,3.51-2.24,5.49-.08.89.07,1.93-.58,2.53a3.68,3.68,0,0,1-.51.37,3.84,3.84,0,0,0-1.12,1.15,3.77,3.77,0,0,1-.79,1.09c-.58.43-1.54.39-1.82,1s.45,1.44.28,2.16-.8.86-1.25,1.26a4.37,4.37,0,0,0-1.08,2,6.67,6.67,0,0,1-5.44-1.35,17.32,17.32,0,0,1,.85,6.22,2.54,2.54,0,0,1-.5,1.92,34.64,34.64,0,0,1,6.67,1.16,4.6,4.6,0,0,0,2.91,0,4.86,4.86,0,0,0,1.34-1.06c1.2-1.22,2.46-2.55,2.75-4.24a24.91,24.91,0,0,0,.05-2.87,16.18,16.18,0,0,1,.73-3.49,41.53,41.53,0,0,0,1.27-7.18c.13-1.5,1.43-2.7,2.11-4,1.28-2.53,2.6-5.16,2.69-8C501.7,591.73,501.38,590.58,500.44,590.48Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M497.78,636c-2.43-1.16-4.21-3.31-6.18-5.16-3.75-3.53-8.34-6-12.29-9.33-2.62-2.19-5-4.74-7.83-6.58a19.57,19.57,0,0,0-8.39-2.93,2.23,2.23,0,0,0-1,0,2.3,2.3,0,0,0-.95.75,30.22,30.22,0,0,0-3.39,4.65c-5,8.5-12.11,15.64-18,23.54a1.5,1.5,0,0,0-.29.56,1.39,1.39,0,0,0,.22.87l1.2,2.34c.67,1.32,1.75,2.85,3.19,2.59a3.49,3.49,0,0,0,1.67-1.07l5.38-5.15,5.64-5.39c3.3-3.15,6.66-6.38,8.82-10.42,1.68,2.92,4.67,4.83,6.71,7.5.78,1,1.42,2.13,2.12,3.21,1.11,1.72,2.38,3.34,3.64,5l6.47,8.25a12.38,12.38,0,0,0,3,3,11.45,11.45,0,0,0,5.19,1.39,68.59,68.59,0,0,0,7.31.26,12.6,12.6,0,0,0,5.45-1,4.94,4.94,0,0,0,2.95-4.39,6.44,6.44,0,0,0-.93-2.73C505.15,641.59,502.13,638.07,497.78,636Z" transform="translate(-52 -162.63)" fill="#2f2e41"></path>
                        <ellipse cx="451.95" cy="431.55" rx="2.19" ry="2.2" fill="#e8e8f0"></ellipse>
                        <path d="M503.47,592.53a4.21,4.21,0,0,1,.24,3.16,12.82,12.82,0,0,1-1.41,2.91,13.85,13.85,0,0,1-1.83,2.6c3.38.16,6.65-1.16,9.62-2.76,2.4-1.29,4.79-2.88,6.07-5.29a2.8,2.8,0,0,1-2.24-.42,8,8,0,0,1-1.71-1.59l-1.69-1.9a7.61,7.61,0,0,1-1-1.37,3.78,3.78,0,0,1-.45-2.21,12.87,12.87,0,0,1-2.24,1.86c-1.21.79-2.54,1.36-3.76,2.14-.42.28-1.38.72-1.13,1.28S503.13,591.93,503.47,592.53Z" transform="translate(-52 -162.63)" fill="#fbbebe"></path>
                        <path d="M503.47,592.53a4.21,4.21,0,0,1,.24,3.16,12.82,12.82,0,0,1-1.41,2.91,13.85,13.85,0,0,1-1.83,2.6c3.38.16,6.65-1.16,9.62-2.76,2.4-1.29,4.79-2.88,6.07-5.29a2.8,2.8,0,0,1-2.24-.42,8,8,0,0,1-1.71-1.59l-1.69-1.9a7.61,7.61,0,0,1-1-1.37,3.78,3.78,0,0,1-.45-2.21,12.87,12.87,0,0,1-2.24,1.86c-1.21.79-2.54,1.36-3.76,2.14-.42.28-1.38.72-1.13,1.28S503.13,591.93,503.47,592.53Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M503.51,592.86a2.85,2.85,0,0,0,0,3.3c.1.12.46.87.61.88a.55.55,0,0,0,.38-.2,25.1,25.1,0,0,0,2.14-2.55,4.76,4.76,0,0,1,2.72-1.78,5.88,5.88,0,0,1,3.75,1.17,3.56,3.56,0,0,1,1.29,1,3.49,3.49,0,0,1,.42,1.43,68.9,68.9,0,0,1,.38,9.09,35.82,35.82,0,0,1-.43,6.55c-.22,1.11-.54,2.2-.69,3.33a21.24,21.24,0,0,0-.14,3v4.18a11,11,0,0,0,.16,2.29c.2.91.63,1.76.92,2.65a17.33,17.33,0,0,1,.61,3.13l.57,4.32c.18,1.36.32,2.85-.51,4-.37.49-.86.89-1.24,1.38-1.41,1.84-1,4.47-1.55,6.72a8.38,8.38,0,0,1-2.74,4.2,4.53,4.53,0,0,1-3.61,1.29c-1.76-.33-2.81-2.16-3.29-3.89s-.65-3.61-1.69-5.07a13.45,13.45,0,0,0-3.34-2.79,5.77,5.77,0,0,1-2.61-3.39c-.11-.63,0-1.28-.11-1.92a4.53,4.53,0,0,0-2.79-3.67c-.9-.35-2-.48-2.52-1.3a6.07,6.07,0,0,0,2.63-3.53,18.13,18.13,0,0,0,.64-4.46l.3-5c.14-2.25.2-4.47,1.19-6.49.44-.9,1-1.75,1.45-2.64a28.66,28.66,0,0,0,1.55-3.87c.72-2.06,1.44-4.12,2.08-6.2a11.68,11.68,0,0,1,1.14-2.89C501.72,594.19,502.5,593.06,503.51,592.86Z" transform="translate(-52 -162.63)" fill="#e8e8f0"></path>
                        <path d="M492.36,625.5l1.33,0,.28-2a4.17,4.17,0,0,1,.28-1.17,7,7,0,0,1,.77-1.12c1.3-1.85,1.21-4.3,1.53-6.55a33.33,33.33,0,0,1,2.92-8.56l2.58-5.75a7.94,7.94,0,0,0,.56-1.47,8.82,8.82,0,0,0,.16-1.7c0-.89.28-4.13.31-5,0-.33-.73-.15-.88-.44-.32-.64-.76,1.09-1.37,1.47a3.36,3.36,0,0,0-1.19,1.74c-.56,1.44-.9,3-1.42,4.43a9.05,9.05,0,0,1-2.41,3.92c-.53.46-1.14.83-1.64,1.33-1.6,1.58-1.76,4.09-1.81,6.35C492.32,612.36,492.06,625.5,492.36,625.5Z" transform="translate(-52 -162.63)" fill="#2f2e41"></path>
                        <path d="M511.5,590.47a4.54,4.54,0,0,0-2.37,3.25,16.44,16.44,0,0,1-1.2,4c-1.62,2.82-5.75,3.64-6.9,6.69a12.3,12.3,0,0,0-.46,3.15c-.2,2.19-.92,4.3-1.14,6.48a28.87,28.87,0,0,0,.12,5.09L501,636.35a23,23,0,0,1-.43,7.58,7.3,7.3,0,0,0,4.34-.72c1.35-.62,2.59-1.47,3.9-2.19,2.24-1.24,4.72-2.11,6.69-3.76a4.09,4.09,0,0,0,.9-1A8.65,8.65,0,0,0,517,634a12.2,12.2,0,0,1,.65-1.78,52.45,52.45,0,0,0,1.88-5.32,30.53,30.53,0,0,0,.86-3.64c.16-1,.25-2,.33-3a17.6,17.6,0,0,1,.92-4.55,36.65,36.65,0,0,0,2.11-10.92,5.71,5.71,0,0,0-.11-1.6,8.56,8.56,0,0,0-.88-1.83c-.6-1.13-1-2.37-1.52-3.52a17.31,17.31,0,0,0-5.91-6.21C514.17,590.84,512.81,590,511.5,590.47Z" transform="translate(-52 -162.63)" fill="#2f2e41"></path>
                        <path d="M481.29,618.57a10.43,10.43,0,0,1-2.75-2.09c-.36-.42-.66-.89-1-1.31a6.81,6.81,0,0,0-3.46-2,16.9,16.9,0,0,0-4-.39,7.26,7.26,0,0,0-2.67.32,2.72,2.72,0,0,0-1.77,1.9,3.15,3.15,0,0,0,1.35,2.8,6.36,6.36,0,0,0,2.69,1.3,21.5,21.5,0,0,0,2.43.29c4.78.5,9.05,3.1,13.24,5.47q5.52,3.14,11.26,5.84a23.4,23.4,0,0,0,.19-3.45c0-.86-.07-2.18-.88-2.69a17.66,17.66,0,0,0-3.58-1.07,56.34,56.34,0,0,1-7.21-2.92C483.81,620,482.54,619.3,481.29,618.57Z" transform="translate(-52 -162.63)" fill="#fbbebe"></path>
                        <ellipse cx="450.2" cy="420.35" rx="8.52" ry="8.57" fill="#fbbebe"></ellipse>
                        <path d="M513.93,600.18a13.66,13.66,0,0,0-1.65,3.09c-1,2.16-2.7,4-3.53,6.29s-.84,5.23-2.55,7.1a2.49,2.49,0,0,0-.75,1.08,5.16,5.16,0,0,1-.08.78c-.25.68-1.36.71-1.57,1.41-.06.2,0,.42-.1.62-.17.45-.77.52-1.16.79-.83.56-.66,1.86-1.25,2.67a2.25,2.25,0,0,1-2.13.75,7.5,7.5,0,0,1-2.21-.83,2.13,2.13,0,0,0-.8-.25,1.65,1.65,0,0,0-.92.32,5.67,5.67,0,0,0-2.3,4.85,15.84,15.84,0,0,0,1.32,5.43,2.18,2.18,0,0,0,.43.81,1.91,1.91,0,0,0,2.12.16,10,10,0,0,1,2.07-.93c1.32-.24,2.61.67,3.95.59a5.49,5.49,0,0,0,2.66-1.17,14.7,14.7,0,0,0,3.58-3c.58-.77,1-1.64,1.52-2.46a31.54,31.54,0,0,1,2.15-2.87l4.92-6a13.83,13.83,0,0,0,1.32-1.82,12.83,12.83,0,0,0,1-2.75,21.07,21.07,0,0,0,1-4.89,18.79,18.79,0,0,0-.36-4.1,14.49,14.49,0,0,0-1-3.91C518.54,599.68,515.94,597.84,513.93,600.18Z" transform="translate(-52 -162.63)" fill="#2f2e41"></path>
                        <path d="M531.05,589a9.6,9.6,0,0,0-3.94-7.8,11.41,11.41,0,0,0-9.69-11.11,11.07,11.07,0,0,0-21.81.59c-3.54-.8-6.78.24-7.37,2.42s1.91,5,5.64,6a10.51,10.51,0,0,0,3.62.36,11.08,11.08,0,0,0,7.62,4.75,11.37,11.37,0,0,0,8.32,8.58,9.55,9.55,0,0,0,2.57,3.55c0,.27,0,.55,0,.83a7.21,7.21,0,1,0,14.42,0,7.7,7.7,0,0,0-.69-3.19A9.64,9.64,0,0,0,531.05,589Z" transform="translate(-52 -162.63)" fill="#f86d70"></path>
                        <path d="M490.64,573.56c.59-2.18,3.83-3.22,7.37-2.42a11.26,11.26,0,0,1,11-9.48l.73,0a10.84,10.84,0,0,0-3.14-.47,11.26,11.26,0,0,0-11,9.48c-3.54-.8-6.78.24-7.37,2.42s1.91,5,5.64,6a11,11,0,0,0,2.14.37C492.44,578.39,490.05,575.79,490.64,573.56Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <path d="M518.37,597.59a7.52,7.52,0,0,1,0-.82,9.34,9.34,0,0,1-2.57-3.55,11.34,11.34,0,0,1-8.32-8.59,11.05,11.05,0,0,1-7.63-4.74,9.6,9.6,0,0,1-2.13-.06,11.11,11.11,0,0,0,7.35,4.37,11.37,11.37,0,0,0,8.32,8.58,9.55,9.55,0,0,0,2.57,3.55c0,.27,0,.55,0,.83a7.34,7.34,0,0,0,7.17,7.46A7.46,7.46,0,0,1,518.37,597.59Z" transform="translate(-52 -162.63)" opacity="0.1"></path>
                        <ellipse cx="505.04" cy="584.74" rx="1.31" ry="1.75" transform="translate(-302.82 261.95) rotate(-37.22)" fill="#fbbebe"></ellipse>
                    </svg>
                </div>
            </div>
            <form id="contact-form" class="mx-auto" method="POST"${addAttribute("https://formspree.io/f/xknperzd", "action")}>
                <div>
                    <span class="text-sm font-bold uppercase text-lightest-slate">
                        ${t("your-full-name")}
                    </span>
                    <input id="form-name" class="focus:shadow-outline mt-2 w-full rounded-lg border-2 border-green-500 bg-transparent p-3 text-green-500 focus:outline-none" name="name" required type="text"${addAttribute(t("your-full-name").toLocaleLowerCase(), "placeholder")}>
                </div>
                <div class="mt-8">
                    <span class="text-sm font-bold uppercase text-lightest-slate">
                        ${t("your-email")}
                    </span>
                    <input id="form-email" class="focus:shadow-outline mt-2 w-full rounded-lg border-2 border-green-500 bg-transparent p-3 text-green-500 focus:outline-none"${addAttribute(t("your-email").toLocaleLowerCase(), "placeholder")} name="email" required type="email">
                </div>
                <div class="mt-8">
                    <span class="text-sm font-bold uppercase text-lightest-slate">
                        ${t("subject")}
                    </span>
                    <input id="form-subject" class="focus:shadow-outline mt-2 w-full rounded-lg border-2 border-green-500 bg-transparent p-3 text-green-500 focus:outline-none"${addAttribute(t("subject").toLocaleLowerCase(), "placeholder")} name="subject" required type="text">
                </div>
                <div class="mt-8">
                    <span class="text-sm font-bold uppercase text-lightest-slate">
                        ${t("message")}
                    </span>
                    <textarea id="form-message"${addAttribute(t("message").toLocaleLowerCase(), "placeholder")} name="message" required class="focus:shadow-outline mt-2 h-32 w-full rounded-lg border-2 border-green-500 bg-transparent p-3 text-green-500 focus:outline-none"></textarea>
                </div>
                <div class="mt-8">
                    <button class="big-button w-full" type="submit" value="Send Message">
                        ${t("send-message")}
                    </button>
                </div>
            </form>
        </div>
    </div>
</section>`;
});

const $$file$n = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/Contact.astro";
const $$url$n = undefined;

const $$module8$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$n,
	default: $$Contact,
	file: $$file$n,
	url: $$url$n
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$m = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/index.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module3$3, specifier: "templates:BaseTemplate", assert: {} }, { module: $$module3$2, specifier: "organisms:Hero", assert: {} }, { module: $$module4$5, specifier: "organisms:About", assert: {} }, { module: $$module5$4, specifier: "organisms:jobs/index", assert: {} }, { module: $$module6$1, specifier: "organisms:Projects", assert: {} }, { module: $$module7, specifier: "organisms:LastArticles", assert: {} }, { module: $$module8$1, specifier: "organisms:Contact", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$n = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/index.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Index$1 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$n, $$props, $$slots);
  Astro2.self = $$Index$1;
  changeLanguage("en");
  return renderTemplate`${renderComponent($$result, "BaseTemplate", $$BaseTemplate, {}, { "default": () => renderTemplate`${maybeRenderHead($$result)}<div class="mx-4">
    ${renderComponent($$result, "Hero", $$Hero, {})}
    ${renderComponent($$result, "About", $$About, {})}
    ${renderComponent($$result, "Jobs", $$Index$2, {})}
    ${renderComponent($$result, "Projects", $$Projects$2, {})}
    ${renderComponent($$result, "LastArticles", $$LastArticles, {})}
    ${renderComponent($$result, "Contact", $$Contact, {})}
  </div>` })}`;
});

const $$file$m = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/index.astro";
const $$url$m = "";

const _page1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$m,
	default: $$Index$1,
	file: $$file$m,
	url: $$url$m
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$l = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/AllProjects.astro", { modules: [{ module: $$module1$1, specifier: "@models:Project", assert: {} }, { module: $$module2$4, specifier: "@models:Tech", assert: {} }, { module: i18next, specifier: "i18next", assert: {} }, { module: $$module3$3, specifier: "templates:BaseTemplate", assert: {} }, { module: $$module5$3, specifier: "molecules:ProjectTechList", assert: {} }, { module: $$module6$2, specifier: "molecules:ProjectLinks", assert: {} }, { module: $$module4$4, specifier: "@util:utilities", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$m = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/AllProjects.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$AllProjects = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$m, $$props, $$slots);
  Astro2.self = $$AllProjects;
  const projectData = await Astro2.glob(
    /* #__PURE__ */ Object.assign({"../../data/projects/2018-09-05-finis.json": () => import('./chunks/2018-09-05-finis.18a0a6cc.mjs'),"../../data/projects/2020-12-12-expenses-app.json": () => import('./chunks/2020-12-12-expenses-app.ba082a7d.mjs'),"../../data/projects/2020-12-25-meal-app.json": () => import('./chunks/2020-12-25-meal-app.07eb51c6.mjs'),"../../data/projects/2020-12-6-shop-app.json": () => import('./chunks/2020-12-6-shop-app.74f6b031.mjs'),"../../data/projects/2021-04-08-scanner-odoo.json": () => import('./chunks/2021-04-08-scanner-odoo.6090b844.mjs'),"../../data/projects/2021-04-17-bankiva.json": () => import('./chunks/2021-04-17-bankiva.385b0316.mjs'),"../../data/projects/2021-04-20-personal-blog-v1.json": () => import('./chunks/2021-04-20-personal-blog-v1.8c51b013.mjs'),"../../data/projects/2021-04-20-portfolio-blog-v2.json": () => import('./chunks/2021-04-20-portfolio-blog-v2.02a99ff9.mjs'),"../../data/projects/2021-05-01-itunes.json": () => import('./chunks/2021-05-01-itunes.4c3849f1.mjs'),"../../data/projects/2021-05-21-weather-app.json": () => import('./chunks/2021-05-21-weather-app.966cb23e.mjs'),"../../data/projects/2021-06-14-react-todo-app.json": () => import('./chunks/2021-06-14-react-todo-app.2c15d8b1.mjs'),"../../data/projects/2021-10-21-vue3-vite-typescript-tailwind-starter.json": () => import('./chunks/2021-10-21-vue3-vite-typescript-tailwind-starter.451263a6.mjs'),"../../data/projects/2022-01-05-nuxt-3-todo-app.json": () => import('./chunks/2022-01-05-nuxt-3-todo-app.335f0ce8.mjs'),"../../data/projects/2022-01-05-nuxt3-tailwindcss-typescript-vite-template.json": () => import('./chunks/2022-01-05-nuxt3-tailwindcss-typescript-vite-template.7532bf95.mjs'),"../../data/projects/2022-04-06-movie-app-nextjs.json": () => import('./chunks/2022-04-06-movie-app-nextjs.5fcad531.mjs'),"../../data/projects/es/2018-09-05-finis.json": () => import('./chunks/2018-09-05-finis.1ac10712.mjs'),"../../data/projects/es/2020-12-12-expenses-app.json": () => import('./chunks/2020-12-12-expenses-app.e1cf817b.mjs'),"../../data/projects/es/2020-12-25-meal-app.json": () => import('./chunks/2020-12-25-meal-app.37fb3c36.mjs'),"../../data/projects/es/2020-12-6-shop-app.json": () => import('./chunks/2020-12-6-shop-app.132c5afc.mjs'),"../../data/projects/es/2021-04-08-scanner-odoo.json": () => import('./chunks/2021-04-08-scanner-odoo.1187eb7f.mjs'),"../../data/projects/es/2021-04-17-bankiva.json": () => import('./chunks/2021-04-17-bankiva.3a8e2390.mjs'),"../../data/projects/es/2021-04-20-personal-blog-v1.json": () => import('./chunks/2021-04-20-personal-blog-v1.8cd14989.mjs'),"../../data/projects/es/2021-04-20-portfolio-blog-v2.json": () => import('./chunks/2021-04-20-portfolio-blog-v2.85c29bd1.mjs'),"../../data/projects/es/2021-05-01-itunes.json": () => import('./chunks/2021-05-01-itunes.73635873.mjs'),"../../data/projects/es/2021-05-21-weather-app.json": () => import('./chunks/2021-05-21-weather-app.a69656e8.mjs'),"../../data/projects/es/2021-06-14-react-todo-app.json": () => import('./chunks/2021-06-14-react-todo-app.2532e910.mjs'),"../../data/projects/es/2021-10-21-vue3-vite-typescript-tailwind-starter.json": () => import('./chunks/2021-10-21-vue3-vite-typescript-tailwind-starter.84d7fb9a.mjs'),"../../data/projects/es/2022-01-05-nuxt-3-todo-app.json": () => import('./chunks/2022-01-05-nuxt-3-todo-app.c67269f5.mjs'),"../../data/projects/es/2022-01-05-nuxt3-tailwindcss-typescript-vite-template.json": () => import('./chunks/2022-01-05-nuxt3-tailwindcss-typescript-vite-template.bf6a48a9.mjs'),"../../data/projects/es/2022-04-06-movie-app-nextjs.json": () => import('./chunks/2022-04-06-movie-app-nextjs.019aa116.mjs')}),
    () => "../../data/projects/**/*.json"
  );
  const techData = await Astro2.glob(
    /* #__PURE__ */ Object.assign({"../../data/technologies/angular.json": () => import('./chunks/angular.8e3bf02a.mjs'),"../../data/technologies/c++.json": () => import('./chunks/c__.bd142db1.mjs'),"../../data/technologies/c.json": () => import('./chunks/c.17f62d0f.mjs'),"../../data/technologies/csharp.json": () => import('./chunks/csharp.07d35c6e.mjs'),"../../data/technologies/css3.json": () => import('./chunks/css3.b07efd3d.mjs'),"../../data/technologies/dart.json": () => import('./chunks/dart.3d87c3dc.mjs'),"../../data/technologies/figma.json": () => import('./chunks/figma.1336b470.mjs'),"../../data/technologies/flask.json": () => import('./chunks/flask.52abef6e.mjs'),"../../data/technologies/flutter.json": () => import('./chunks/flutter.e908e76a.mjs'),"../../data/technologies/go.json": () => import('./chunks/go.17763279.mjs'),"../../data/technologies/hugo.json": () => import('./chunks/hugo.b29b4df5.mjs'),"../../data/technologies/idea.json": () => import('./chunks/idea.e3a2ea5c.mjs'),"../../data/technologies/itunes-api.json": () => import('./chunks/itunes-api.6c44e333.mjs'),"../../data/technologies/java.json": () => import('./chunks/java.b9c83ad0.mjs'),"../../data/technologies/javascript.json": () => import('./chunks/javascript.489f87ee.mjs'),"../../data/technologies/jekyll.json": () => import('./chunks/jekyll.05bdd887.mjs'),"../../data/technologies/keras.json": () => import('./chunks/keras.4a2d8ab3.mjs'),"../../data/technologies/kotlin.json": () => import('./chunks/kotlin.0c4b7975.mjs'),"../../data/technologies/libinsane.json": () => import('./chunks/libinsane.6add77af.mjs'),"../../data/technologies/lumen.json": () => import('./chunks/lumen.f11f1808.mjs'),"../../data/technologies/neo4j.json": () => import('./chunks/neo4j.77c0b344.mjs'),"../../data/technologies/node.json": () => import('./chunks/node.2661301f.mjs'),"../../data/technologies/numpy.json": () => import('./chunks/numpy.a1e95573.mjs'),"../../data/technologies/pandas.json": () => import('./chunks/pandas.07c23dc5.mjs'),"../../data/technologies/php.json": () => import('./chunks/php.654dc498.mjs'),"../../data/technologies/postgresql.json": () => import('./chunks/postgresql.83a6be6c.mjs'),"../../data/technologies/python.json": () => import('./chunks/python.f46ba473.mjs'),"../../data/technologies/pytorch.json": () => import('./chunks/pytorch.366176c0.mjs'),"../../data/technologies/react.json": () => import('./chunks/react.706481ab.mjs'),"../../data/technologies/ruby.json": () => import('./chunks/ruby.46934458.mjs'),"../../data/technologies/sass.json": () => import('./chunks/sass.237d269f.mjs'),"../../data/technologies/scala.json": () => import('./chunks/scala.6a3dfe9e.mjs'),"../../data/technologies/scss.json": () => import('./chunks/scss.37f3af63.mjs'),"../../data/technologies/spark.json": () => import('./chunks/spark.8c350c2c.mjs'),"../../data/technologies/spotify-web-api.json": () => import('./chunks/spotify-web-api.d44397ef.mjs'),"../../data/technologies/spring-boot.json": () => import('./chunks/spring-boot.c0734af3.mjs'),"../../data/technologies/spring.json": () => import('./chunks/spring.a9ee72b0.mjs'),"../../data/technologies/tailwind.json": () => import('./chunks/tailwind.fc30e230.mjs'),"../../data/technologies/tensorflow.json": () => import('./chunks/tensorflow.b9f7e7d9.mjs'),"../../data/technologies/typescript.json": () => import('./chunks/typescript.bd25310b.mjs'),"../../data/technologies/vite.json": () => import('./chunks/vite.394f75cb.mjs'),"../../data/technologies/vs-code.json": () => import('./chunks/vs-code.6c6d5ec3.mjs'),"../../data/technologies/vuejs.json": () => import('./chunks/vuejs.52b0035f.mjs'),"../../data/technologies/vuetify.json": () => import('./chunks/vuetify.0ef3fddc.mjs')}),
    () => "../../data/technologies/**/*.json"
  );
  const tech = {};
  techData.forEach((t2) => tech[t2.id] = t2);
  const jsonToProject = (json) => {
    const project = {
      id: json.id,
      title: json.title,
      lang: json.lang,
      date: json.date,
      cover: json.cover,
      repository: json.repository,
      url: json.url,
      company: json.company,
      tech: json.tech.map((t2) => tech[urlize(t2.toLowerCase())]),
      showInProjects: json.showInProjects,
      featured: json.featured,
      published: json.published,
      content: json.content
    };
    return project;
  };
  const projects = projectData.filter((project) => project.published && project.lang === i18next__default.language).sort((a, b) => {
    if (a.date > b.date)
      return -1;
    if (a.date < b.date)
      return 1;
    return 0;
  }).map((json) => jsonToProject(json));
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${renderComponent($$result, "BaseTemplate", $$BaseTemplate, { "class": "astro-GMA7SFL6" }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<div class="container mx-auto py-16 astro-GMA7SFL6">
    <div class="astro-GMA7SFL6">
      <h1 class="big-heading astro-GMA7SFL6">${t("all-projects")}</h1>
      <p class="subtitle astro-GMA7SFL6">
        ${t("big-list")}
      </p>
    </div>
    <div class="styled-table-container astro-GMA7SFL6">
      <table class="astro-GMA7SFL6">
        <thead class="astro-GMA7SFL6">
          <tr class="astro-GMA7SFL6">
            <th class="astro-GMA7SFL6">${t("year")}</th>
            <th class="astro-GMA7SFL6">${t("title")}</th>
            <th class="hide-on-mobile astro-GMA7SFL6">${t("made-at")}</th>
            <th class="hide-on-mobile astro-GMA7SFL6">${t("built-at")}</th>
            <th class="astro-GMA7SFL6">${t("link")}</th>
          </tr>
        </thead>
        <tbody class="astro-GMA7SFL6">
          ${projects.map((project) => renderTemplate`<tr class="astro-GMA7SFL6">
                <td class="overline year astro-GMA7SFL6">
                  ${typeof project.date === "string" ? new Date(project.date).getFullYear() : project.date.getFullYear()}
                </td>
                <td class="title astro-GMA7SFL6">${project.title}</td>
                <td class="company hide-on-mobile astro-GMA7SFL6">
                  ${project.company ? project.company : t("personal-projects")}
                </td>
                <td class="tech hide-on-mobile astro-GMA7SFL6">
                  ${renderComponent($$result, "ProjectTechList", $$ProjectTechList, { "project": project, "position": "start", "showIcon": true, "class": "astro-GMA7SFL6" })}
                </td>
                <td class="links astro-GMA7SFL6">
                  ${renderComponent($$result, "ProjectLinks", $$ProjectLinks, { "project": project, "position": "start", "class": "astro-GMA7SFL6" })}
                </td>
              </tr>`)}
        </tbody>
      </table>
    </div>
  </div>` })}`;
});

const $$file$l = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/AllProjects.astro";
const $$url$l = undefined;

const $$module2$2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$l,
	default: $$AllProjects,
	file: $$file$l,
	url: $$url$l
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$k = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/projects.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module2$2, specifier: "organisms:AllProjects", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$l = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/projects.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Projects$1 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$l, $$props, $$slots);
  Astro2.self = $$Projects$1;
  changeLanguage("en");
  return renderTemplate`${renderComponent($$result, "AllProjects", $$AllProjects, {})}`;
});

const $$file$k = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/projects.astro";
const $$url$k = "/projects";

const _page2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$k,
	default: $$Projects$1,
	file: $$file$k,
	url: $$url$k
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$j = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetCard.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$k = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetCard.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$WidgetCard = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$k, $$props, $$slots);
  Astro2.self = $$WidgetCard;
  const { title } = Astro2.props;
  return renderTemplate`${maybeRenderHead($$result)}<div class="mb-5 p-4 md:p-0">
	<div class="bg-light-navy">
		<h3 class="m-1 p-1 text-center font-mono text-3xl font-bold uppercase text-lightest-slate md:text-center">
			${title}
		</h3>
	</div>
	${renderSlot($$result, $$slots["default"])}
</div>`;
});

const $$file$j = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetCard.astro";
const $$url$j = undefined;

const $$module1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$j,
	default: $$WidgetCard,
	file: $$file$j,
	url: $$url$j
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$i = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetRecentPost.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module3$1, specifier: "@models:Article", assert: {} }, { module: $$module1$5, specifier: "astro-icon", assert: {} }, { module: $$module1, specifier: "molecules:WidgetCard", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$j = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetRecentPost.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$WidgetRecentPost = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$j, $$props, $$slots);
  Astro2.self = $$WidgetRecentPost;
  const { pathname } = Astro2.url;
  const isBlogRoot = pathname.endsWith("/blog");
  const { recentPosts } = Astro2.props;
  return renderTemplate`${!isBlogRoot && renderTemplate`${renderComponent($$result, "WidgetCard", $$WidgetCard, { "title": t("recent-post") })}${maybeRenderHead($$result)}<ul class="relative my-4 flex list-none flex-col p-0">
		${recentPosts.filter((article) => article.url !== pathname).map((article) => renderTemplate`<li class="my-2 flex flex-row font-mono text-base text-light-slate">
					<div class="flex flex-row items-center justify-center">
						<a${addAttribute(article.url, "href")} class="inline-link flex items-center justify-center">
							${renderComponent($$result, "Icon", $$Icon, { "name": "zondicons:cheveron-right", "class": "h-6" })}
							<p class="pl-2">${article.title}</p>
						</a>
					</div>
				</li>`)}
	</ul>`}

`;
});

const $$file$i = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetRecentPost.astro";
const $$url$i = undefined;

const $$module2$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$i,
	default: $$WidgetRecentPost,
	file: $$file$i,
	url: $$url$i
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$h = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetCategory.astro", { modules: [{ module: $$module1$5, specifier: "astro-icon", assert: {} }, { module: $$module1, specifier: "molecules:WidgetCard", assert: {} }, { module: i18next, specifier: "i18next", assert: {} }, { module: $$module2$7, specifier: "astro-i18next", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$i = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetCategory.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$WidgetCategory = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$i, $$props, $$slots);
  Astro2.self = $$WidgetCategory;
  const { categories } = Astro2.props;
  const allCategories = Object.keys(categories);
  return renderTemplate`${renderComponent($$result, "WidgetCard", $$WidgetCard, { "title": t("categories") }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<ul class="relative my-4 flex list-none flex-col p-0">
		${allCategories.map((category) => renderTemplate`<li class="my-2 flex flex-row whitespace-nowrap font-mono text-base text-light-slate">
					<a${addAttribute(localizePath$1(`/blog/category/${category}`), "href")} class="inline-link">
						<div class="flex items-center justify-center">
							${renderComponent($$result, "Icon", $$Icon, { "name": "zondicons:cheveron-right", "class": "h-6" })}
							<span>${category}</span>
						</div>
					</a>
					<p>(${categories[category]})</p>
				</li>`)}
	</ul>` })}`;
});

const $$file$h = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetCategory.astro";
const $$url$h = undefined;

const $$module3 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$h,
	default: $$WidgetCategory,
	file: $$file$h,
	url: $$url$h
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$g = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetTagCloud.astro", { modules: [{ module: $$module1, specifier: "molecules:WidgetCard", assert: {} }, { module: i18next, specifier: "i18next", assert: {} }, { module: $$module2$7, specifier: "astro-i18next", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$h = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetTagCloud.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$WidgetTagCloud = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$h, $$props, $$slots);
  Astro2.self = $$WidgetTagCloud;
  const { tags } = Astro2.props;
  const allTags = Object.keys(tags);
  const totalCount = allTags.reduce((acc, cur) => acc + tags[cur], 0);
  const textSize = (tag) => {
    const totalCountInPost = tags[tag];
    const percent = totalCountInPost / totalCount * 100;
    if (percent <= 12.5)
      return "text-base";
    else if (percent > 12.5 && percent <= 25)
      return "text-lg";
    else if (percent > 25 && percent <= 37.5)
      return "text-xl";
    else if (percent > 37.5 && percent <= 50)
      return "text-2xl";
    else if (percent > 50 && percent <= 62.5)
      return "text-3xl";
    else if (percent > 62.5 && percent <= 75)
      return "text-4xl";
    else if (percent > 75 && percent <= 87.5)
      return "text-5xl";
    else
      return "text-6xl";
  };
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${renderComponent($$result, "WidgetCard", $$WidgetCard, { "title": t("tags"), "class": "astro-7BECG4WP" }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<div class="tag-cloud-tags astro-7BECG4WP">
		${allTags.map((tag) => renderTemplate`<a${addAttribute(localizePath$1(`/blog/tag/${tag}`), "href")}${addAttribute(tag, "aria-label")}${addAttribute(`inline-link ${textSize(tag)} astro-7BECG4WP`, "class")}>
					<span class="capitalize astro-7BECG4WP">${tag}</span>
				</a>`)}
	</div>` })}

`;
});

const $$file$g = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetTagCloud.astro";
const $$url$g = undefined;

const $$module4$2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$g,
	default: $$WidgetTagCloud,
	file: $$file$g,
	url: $$url$g
}, Symbol.toStringTag, { value: 'Module' }));

var __freeze$1 = Object.freeze;
var __defProp$1 = Object.defineProperty;
var __template$1 = (cooked, raw) => __freeze$1(__defProp$1(cooked, "raw", { value: __freeze$1(raw || cooked.slice()) }));
var _a$1;
const $$metadata$f = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetWrapper.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module2$1, specifier: "molecules:WidgetRecentPost", assert: {} }, { module: $$module3, specifier: "molecules:WidgetCategory", assert: {} }, { module: $$module4$2, specifier: "molecules:WidgetTagCloud", assert: {} }, { module: $$module3$1, specifier: "@models:Article", assert: {} }, { module: $$module6, specifier: "astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$g = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetWrapper.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$WidgetWrapper = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$g, $$props, $$slots);
  Astro2.self = $$WidgetWrapper;
  const { pathname } = Astro2.url;
  const isBlogRoot = pathname.endsWith("/blog");
  const articlesFiles = {
    en: Astro2.glob(
      /* #__PURE__ */ Object.assign({"../../pages/blog/add-image-selector-flutter.md": () => Promise.resolve().then(() => _page9),"../../pages/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx.md": () => Promise.resolve().then(() => _page3),"../../pages/blog/configure-proxy-global-on-linux.md": () => Promise.resolve().then(() => _page6),"../../pages/blog/countdown-to-new-year-astronomy.md": () => Promise.resolve().then(() => _page7),"../../pages/blog/customizing-github-profile-page.md": () => Promise.resolve().then(() => _page8),"../../pages/blog/introduction-to-gridsome.md": () => Promise.resolve().then(() => _page10),"../../pages/blog/top-10-vs-code-extension-for-2021.md": () => Promise.resolve().then(() => _page5),"../../pages/blog/vue-3-with-typescript-and-decorators.md": () => Promise.resolve().then(() => _page4)}),
      () => "../../pages/blog/**/*.md"
    ),
    es: Astro2.glob(
      /* #__PURE__ */ Object.assign({"../../pages/es/blog/add-image-selector-flutter.md": () => Promise.resolve().then(() => _page23),"../../pages/es/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx.md": () => Promise.resolve().then(() => _page17),"../../pages/es/blog/configure-proxy-global-on-linux.md": () => Promise.resolve().then(() => _page20),"../../pages/es/blog/countdown-to-new-year-astronomy.md": () => Promise.resolve().then(() => _page21),"../../pages/es/blog/customizing-github-profile-page.md": () => Promise.resolve().then(() => _page22),"../../pages/es/blog/introduction-to-gridsome.md": () => Promise.resolve().then(() => _page24),"../../pages/es/blog/top-10-vs-code-extension-for-2021.md": () => Promise.resolve().then(() => _page19),"../../pages/es/blog/vue-3-with-typescript-and-decorators.md": () => Promise.resolve().then(() => _page18)}),
      () => "../../pages/es/blog/**/*.md"
    )
  };
  const postsData = i18next__default.language in articlesFiles ? await articlesFiles[i18next__default.language] : [];
  const allPosts = postsData.filter((post) => !post.frontmatter.draft && post.frontmatter.lang === i18next__default.language).map((post) => jsonToArticle(post)).sort((a, b) => {
    let aDate = new Date(a.date);
    let bDate = new Date(b.date);
    return bDate.getTime() - aDate.getTime();
  });
  const tags = allPosts.reduce((acc, post) => {
    post.tags.forEach((tag) => {
      const tagLower = tag.toLowerCase();
      if (tagLower in acc) {
        acc[tagLower] += 1;
      } else {
        acc[tagLower] = 1;
      }
    });
    return acc;
  }, {});
  const categories = allPosts.reduce((acc, post) => {
    post.categories.forEach((category) => {
      const categoryLower = category.toLowerCase();
      if (categoryLower in acc) {
        acc[categoryLower] += 1;
      } else {
        acc[categoryLower] = 1;
      }
    });
    return acc;
  }, {});
  return renderTemplate(_a$1 || (_a$1 = __template$1(["", '<div class="container mx-auto w-4/5">\n	', "\n</div>\n\n<script is:global>\n	const categoryEl = document.getElementById('categoryWidget')\n	// if the url is /blog or es/blog, remove the category widget\n	if (categoryEl) {\n		const isBlogRoot = window?.location?.href?.endsWith('/blog') || window?.location?.href?.endsWith('/blog/')\n		if (isBlogRoot) {\n			console.log('removing category widget')\n			categoryEl?.classList.add('hidden')\n		} else {\n			console.log('keeping category widget')\n			categoryEl?.classList.remove('hidden')\n		}\n	}\n<\/script>"])), maybeRenderHead($$result), renderSlot($$result, $$slots["widget"], renderTemplate`
		${!isBlogRoot && renderTemplate`<div id="categoryWidget">
					${renderComponent($$result, "WidgetRecentPost", $$WidgetRecentPost, { "recentPosts": allPosts.slice(0, 5) })}
				</div>`}
		${renderComponent($$result, "WidgetTagCloud", $$WidgetTagCloud, { "tags": tags })}
		${renderComponent($$result, "WidgetCategory", $$WidgetCategory, { "categories": categories })}
	`));
});

const $$file$f = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/WidgetWrapper.astro";
const $$url$f = undefined;

const $$module5$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$f,
	default: $$WidgetWrapper,
	file: $$file$f,
	url: $$url$f
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$e = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/ToTop.astro", { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [{ type: "inline", value: `
    let showScrollToTop = false;
	const onScroll = () => {
		const currentScrollPosition = window.scrollY || document.documentElement.scrollTop;
		if (currentScrollPosition < 0) return

		showScrollToTop = currentScrollPosition > 30
	}
	window.addEventListener('scroll', onScroll)

    const scrollToTopElement = document.getElementById('toTop')
    const onScrollToTop = () => {
        if (showScrollToTop) {
            scrollToTopElement?.classList.remove('invisible')
        } else {
            scrollToTopElement?.classList.add('invisible')
        }
    }
	onScrollToTop()
    setInterval(onScrollToTop, 100)
` }] });
const $$Astro$f = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/ToTop.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$ToTop = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$f, $$props, $$slots);
  Astro2.self = $$ToTop;
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate`${maybeRenderHead($$result)}<a id="toTop" class="scroll-top animate-bounce hover:animate-none astro-VKESBM7V" href="#body">
	<svg width="32" height="32" viewBox="0 0 24 24" class="astro-VKESBM7V"><path fill="currentColor" d="M11 20V7.825l-5.6 5.6L4 12l8-8l8 8l-1.4 1.425l-5.6-5.6V20Z" class="astro-VKESBM7V"></path></svg>
</a>

`;
});

const $$file$e = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/ToTop.astro";
const $$url$e = undefined;

const $$module8 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$e,
	default: $$ToTop,
	file: $$file$e,
	url: $$url$e
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$d = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/templates/BlogTemplate.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module2$b, specifier: "organisms:HeadSEO", assert: {} }, { module: $$module3$6, specifier: "astro-i18next/components", assert: {} }, { module: $$module4$7, specifier: "molecules:AppFooter", assert: {} }, { module: $$module5$1, specifier: "molecules:WidgetWrapper", assert: {} }, { module: $$module6$3, specifier: "molecules:Navbar", assert: {} }, { module: $$module6$6, specifier: "@store:constants", assert: {} }, { module: $$module8, specifier: "atoms:ToTop", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$e = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/templates/BlogTemplate.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$BlogTemplate = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$e, $$props, $$slots);
  Astro2.self = $$BlogTemplate;
  let { title, description, image, ogImageAlt, lang } = Astro2.props;
  title = title || t("seo.title");
  description = description || t("seo.description");
  image = image ? `${domain}${image}` : `${domain}/assets/images/me.png`;
  ogImageAlt = ogImageAlt || t("seo.ogImageAlt");
  lang = lang || i18next__default.language;
  changeLanguage(lang);
  return renderTemplate`<html${addAttribute(i18next__default.language, "lang")} class="scroll-smooth">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width">
		${renderComponent($$result, "HeadSEO", $$HeadSEO, { "title": title, "description": description, "image": image, "ogImageAlt": ogImageAlt })}
		${renderComponent($$result, "HeadHrefLangs", $$HeadHrefLangs, {})}
		<!-- Fonts -->
		<link rel="preconnect" href="https://fonts.gstatic.com">
		<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Lato|Rokkitt|Fira+Sans&display=swap">
	${renderHead($$result)}</head>

	<body id="body" class="content-wrapper bg-background-primary font-sans text-light-slate leading-normal flex flex-col min-h-screen">
		<div class="relative flex flex-col min-h-[100vh]">
			${renderComponent($$result, "Navbar", $$Navbar, {})}
			<div class="container mx-auto flex flex-col xl:flex-row mt-24">
				<main class=" xl:basis-4/5">
					${renderSlot($$result, $$slots["default"])}
					${renderComponent($$result, "ToTop", $$ToTop, {})}
				</main>
				<aside class="xl:basis-1/5">
					${renderSlot($$result, $$slots["widget"], renderTemplate`
						${renderComponent($$result, "WidgetWrapper", $$WidgetWrapper, {})}
					`)}
				</aside>
			</div>
		</div>
		${renderComponent($$result, "AppFooter", $$AppFooter, {})}
	</body></html>`;
});

const $$file$d = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/templates/BlogTemplate.astro";
const $$url$d = undefined;

const $$module2 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$d,
	default: $$BlogTemplate,
	file: $$file$d,
	url: $$url$d
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$c = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/PostHeader.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module2$7, specifier: "astro-i18next", assert: {} }, { module: $$module3$1, specifier: "@models:Article", assert: {} }, { module: $$module4$4, specifier: "@util:utilities", assert: {} }, { module: $$module1$5, specifier: "astro-icon", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$d = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/PostHeader.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$PostHeader = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$d, $$props, $$slots);
  Astro2.self = $$PostHeader;
  const { article } = Astro2.props;
  const formatDate = (date) => {
    if (typeof date === "string") {
      date = new Date(date);
    }
    return date.toLocaleDateString();
  };
  return renderTemplate`${maybeRenderHead($$result)}<ul class="flex flex-col md:flex-row items-center relative list-none p-0 mb-4 text-light-slate font-mono text-sm">
    ${article.date && renderTemplate`<li class="my-2 flex items-center whitespace-nowrap mx-1">
      ${renderComponent($$result, "Icon", $$Icon, { "name": "mdi:calendar-month-outline", "class": "h-4" })}
      <span class="mx-2">${formatDate(article.date)}</span>
    </li>`}
    ${article.timeToRead && renderTemplate`<li class="my-2 whitespace-nowrap mx-1">
      <span>${t("time-to-read", { timeToRead: article.timeToRead })}</span>
    </li>`}
    ${article.url && renderTemplate`<li class="my-2 whitespace-nowrap mx-1">
      <a${addAttribute(localizePath$1(article.url), "href")} class="flex text-green-500">
        ${renderComponent($$result, "Icon", $$Icon, { "name": "la:comments", "class": "h-4 mr-1" })}
        300
      </a>
    </li>`}
    ${article.author && renderTemplate`<li class="my-2 whitespace-nowrap mx-1">
      <span class="mr-1">${t("author")}</span>
      <a${addAttribute(localizePath$1(urlize(article.author)), "href")} class="inline-link">${article.author}</a>
    </li>`}
  </ul>`;
});

const $$file$c = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/PostHeader.astro";
const $$url$c = undefined;

const $$module4$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$c,
	default: $$PostHeader,
	file: $$file$c,
	url: $$url$c
}, Symbol.toStringTag, { value: 'Module' }));

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/templates/BlogPostTemplate.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module2, specifier: "templates:BlogTemplate", assert: {} }, { module: $$module4$1, specifier: "molecules:PostHeader", assert: {} }, { module: $$module2$7, specifier: "astro-i18next", assert: {} }, { module: $$module1$5, specifier: "astro-icon", assert: {} }, { module: $$module6$6, specifier: "@store:constants", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$c = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/templates/BlogPostTemplate.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$BlogPostTemplate = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$c, $$props, $$slots);
  Astro2.self = $$BlogPostTemplate;
  let { frontmatter } = Astro2.props;
  const title = frontmatter.title || t("seo.title");
  const description = frontmatter.description || t("seo.description");
  const image = frontmatter.cover ? frontmatter.cover : `${domain}/assets/images/me.png`;
  const ogImageAlt = description || t("seo.ogImageAlt");
  const categories = frontmatter.categories || Array();
  const tags = frontmatter.tags || Array();
  const lang = frontmatter.lang || "en";
  const STYLES = [];
  for (const STYLE of STYLES)
    $$result.styles.add(STYLE);
  return renderTemplate(_a || (_a = __template(["", "\n\n\n\n<script>\n	const paragraphs = document.querySelectorAll('p')\n\n	const firstParagraph = Array.from(paragraphs).find((p) => p.textContent.trim().length > 0)\n\n	if (firstParagraph) {\n		firstParagraph.id = 'first-paragraph'\n	}\n<\/script>"])), renderComponent($$result, "BlogTemplate", $$BlogTemplate, { "title": title, "description": description, "image": image, "ogImageAlt": ogImageAlt, "lang": lang }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<article class="mx-2 md:mx-8 lg:mx-24 md:px-2">
		<h1 class="mt-10 md:mt-0 text-center md:text-justify text-2xl md:text-4xl font-bold leading-tight md:tracking-wider">${frontmatter.title}</h1>
		${renderComponent($$result, "PostHeader", $$PostHeader, { "article": frontmatter })}
		<div class="markdown-body">
			${renderSlot($$result, $$slots["default"])}
		</div>
		<div class="mb-8 my-8 flex items-start justify-items-start">
			<a${addAttribute(localizePath$1("/blog"), "href")} class="font-bold uppercase">
				<div class="flex items-center md:items-start justify-center sm:text-center animate-pulse hover:animate-none">
					${renderComponent($$result, "Icon", $$Icon, { "name": "ic:round-arrow-back", "class": "h-7 mr-1 animate-bounce hover:animate-none" })}
					<span>${t("back-to-block")}</span>
				</div>
			</a>
		</div>
		<div class="flex flex-col md:flex-row">
			<!--category-->
			<div class="flex items-center justify-center mb-8 text-sm mx-1">
				${renderComponent($$result, "Icon", $$Icon, { "name": "ic:outline-category", "class": "h-5 mr-2" })}
				${categories.map((category) => renderTemplate`<a${addAttribute(localizePath$1(category), "href")} class="inline-link mx-1">
							${category}
						</a>`)}
			</div>
			<!-- tags -->
			<div class="flex items-center justify-center mb-8 text-sm mx-1">
				${renderComponent($$result, "Icon", $$Icon, { "name": "clarity:tags-solid-alerted", "class": "h-5 mr-2" })}
				${tags.map((tag) => renderTemplate`<a${addAttribute(localizePath$1(tag), "href")} class="inline-link mx-1">
							${tag}
						</a>`)}
			</div>
		</div>
	</article>` }));
});

const html$f = "<p><img src=\"/uploads/nx.png\" alt=\"nx\" title=\"angular + nestjs + nx\"></p>\n<h2 id=\"why-this-post\">Why this post?</h2>\n<p>Angular is one of the most highly recommended frontend frameworks in the software industry. However, if you want to create a full-stack web-application, it only covers half of the requirements. For a while now, I’ve been pairing it with <a href=\"https://nestjs.com/\">NestJS</a> and it’s been working really well in multiple projects.</p>\n<p>I keep recommending this combination to friends and coworkers, so I wanted to finally write down the setup I use as a reference/starting point. Maybe this post inspires you to also give it a try. If so, please let me know how it worked for you.</p>\n<p><a href=\"https://angular.io/\">Angular</a> will be our frontend-framework for this example, we will use <a href=\"https://nestjs.com/\">NestJS</a> for our backend, and all of this will function as a whole inside <a href=\"https://nx.dev/\">Nx</a> workspace. We will introduce a few quality-of-life improvements as well as bundle both projects up into one single package.</p>\n<p><a href=\"https://nestjs.com/\">NestJS</a> is an abstraction layer that sits on top of <a href=\"https://expressjs.com/es/\">Express</a> or <a href=\"https://www.fastify.io/\">Fastify</a>, both NodeJS-powered REST-frameworks. It is written in Typescript and follows a lot of the same patterns found in Angular (annotations, DI, etc.). Nx is a set of tools developed by ex-Googlers which help develop in Monorepos. They also offer pretty sensible default choices and configuration overrides.</p>\n<p>You ready? Let’s go!</p>\n<h1 id=\"scaffolding\">Scaffolding</h1>\n<p>First, we’ll setup a new Nx workspace and create an Angular and NestJS application inside it:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">❯ npx create-nx-workspace@latest</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">✔ Workspace name (e.g., org name)     · hn-feed</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">✔ What to create </span><span style=\"color: #FF7B72\">in</span><span style=\"color: #C9D1D9\"> the new workspace · angular-nest</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">✔ Application name                    · client</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">✔ Default stylesheet format           · css</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">✔ Use Nx Cloud</span><span style=\"color: #FF7B72\">?</span><span style=\"color: #C9D1D9\"> (It</span><span style=\"color: #A5D6FF\">'s free and doesn'</span><span style=\"color: #C9D1D9\">t require registration.) · No</span></span></code></pre>\n<p>When finished, this will have done the following:</p>\n<ol>\n<li>create a new directory with the workspace name</li>\n<li>generate a fresh Angular project located under <code>apps/client</code></li>\n<li>create a new NestJS project located under <code>apps/api</code></li>\n<li>generate a sample typescript library inside the workspace - to be used by both client and api (located under <code>libs/api-interfaces</code>)</li>\n</ol>\n<p>What’s also neat is that Nx comes with improved tooling for both projects, such as:</p>\n<ul>\n<li>using Jest over Karma as a unit-test runner</li>\n<li>using Cypress over Protractor for E2E specs (Angular only)</li>\n<li>using Prettier to format the code automatically</li>\n<li>decent TSLint settings for the whole workspace</li>\n</ul>\n<p>There’s <a href=\"https://nx.dev/angular/getting-started/why-nx#10-minute-nx-overview\">tons more features</a> offered by Nx, but those are the ones I wanted to point out right now.</p>\n<h1 id=\"running-the-projects\">Running the projects</h1>\n<p>Now that we have the basic projects set up, it’s time to boot them up. Open 2 Terminal windows and run the following commands:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #A5D6FF\">`[Terminal 1]: npm run nx -- serve client `</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #A5D6FF\">`[Terminal 2]: npm run nx -- serve api`</span></span></code></pre>\n<p>The first command will run the default Angular dev-server, compile and serve the frontend under <a href=\"http://localhost:4200/\"></a><a href=\"http://localhost:4200\">http://localhost:4200</a>. The second will start the NestJS dev-server, compile the Typescript down to NodeJS-compatible JavaScript and serve the result under <a href=\"http://localhost:3333/api\"></a><a href=\"http://localhost:3333/api\">http://localhost:3333/api</a>. As a nice bonus, Nx has added a proxy configuration for the Angular dev-server, which will proxy requests to <a href=\"http://localhost:4200/api\"></a><a href=\"http://localhost:4200/api\">http://localhost:4200/api</a> to the NestJS dev-server for us, so that we don’t run into any CORS issues while developing. The proxy config can be found under <code>apps/client/proxy.conf.json</code> and it’s referenced inside the <code>angular.json</code> project definition file.</p>\n<p>If you open now your browser on <a href=\"http://localhost:4200/\"></a><a href=\"http://localhost:4200\">http://localhost:4200</a>, you should see a page similar to this one:</p>\n<p><img src=\"/uploads/localhost.png\" alt=\"localhost:4200\" title=\"App running in localhost\"></p>\n<p>If you inspect the network and refresh, you’ll see an XHR request to <a href=\"http://localhost:4200/api/hello\"></a><a href=\"http://localhost:4200/api/hello\">http://localhost:4200/api/hello</a> showing that the proxy has been set up properly.</p>\n<h2 id=\"wait-what\">Wait, what?</h2>\n<p>Let me explain what’s going on:</p>\n<p>The NestJS project was configured with a prefix to use for all controllers. This prefix was defined as follows under (<code>apps/api/src/main.ts</code>)</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">globalPrefix</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'api'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">app.</span><span style=\"color: #D2A8FF\">setGlobalPrefix</span><span style=\"color: #C9D1D9\">(globalPrefix)</span></span></code></pre>\n<p>Nx also generated a sample REST-controller, called AppController (<code>apps/api/src/app/app.controller.ts</code>) that currently serves a static chunk of data, in our case an object of the Typescript interface <code>Message</code> defined like this (<code>libs/api-interfaces/src/lib/api-interfaces.ts</code>):</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">interface</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">Message</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FFA657\">message</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">string</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span></code></pre>\n<p>Because the interface <code>Message</code> is defined in the shared library, it can be used both by frontend and backend. Sweet, type-safety across both projects!</p>\n<p>The AppController method is annotated with</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\"> @</span><span style=\"color: #D2A8FF\">Get</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'hello'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">getData</span><span style=\"color: #C9D1D9\">(): Message {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FF7B72\">return</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">.appService.</span><span style=\"color: #D2A8FF\">getData</span><span style=\"color: #C9D1D9\">();</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span></code></pre>\n<p>which tells NestJS to expose a new GET-endpoint under <a href=\"http://localhost:3333/api/hello\"></a><a href=\"http://localhost:3333/api/hello\">http://localhost:3333/api/hello</a> and return our message object, when the server is running.</p>\n<p>On the other end of the stack we have the Angular project, which was configured to do a sample GET request to this exact endpoint. The sample code can be found in the AppComponent of the frontend under <code>apps/client/src/app/app.component.ts</code></p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">AppComponent</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FFA657\">hello$</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">.http.</span><span style=\"color: #D2A8FF\">get</span><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #FFA657\">Message</span><span style=\"color: #C9D1D9\">>(</span><span style=\"color: #A5D6FF\">'/api/hello'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">constructor</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #FF7B72\">private</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">http</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">HttpClient</span><span style=\"color: #C9D1D9\">) {}</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span></code></pre>\n<p>and it’s invoked using the async pipe directly in the template:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">>Message: {{ hello$ | async | json }}&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>Now, since the Angular dev-server is running on <a href=\"http://localhost:4200/\"></a><a href=\"http://localhost:4200\">http://localhost:4200</a>, the request will go to <a href=\"http://localhost/4200/api/hello\"></a><a href=\"http://localhost/4200/api/hello\">http://localhost/4200/api/hello</a> due to the relative path in the <code>httpClient</code> call. This gets picked up by the Angular proxy config and is forwarded to our NestJS server. Awesome 🎉</p>\n<h1 id=\"tweaking-the-application-for-development\">Tweaking the application for development</h1>\n<p>Congratulations, we now have a workspace with both NestJS and Angular running beside each other as well as sample code on how to call the backend from the frontend. That’s already pretty neat!</p>\n<p>What I like to do in order to make for a better development experience, is starting both frontend and backend dev-server in parallel, with a single command. For this we will install a node-helper called <a href=\"https://www.npmjs.com/package/concurrently\">concurrently</a>.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">npm install --save-dev concurrently</span></span></code></pre>\n<p>Once that’s done, we can adapt the <code>package.json</code> as follows:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #A5D6FF\">\"start:fe\"</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">\"ng serve client\"</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #A5D6FF\">\"start:be\"</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">\"ng serve api\"</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #A5D6FF\">\"dev\"</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">\"concurrently -p=</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\">{name}</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\"> -n=</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\">Angular,NestJS</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\"> -c=</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\">green,blue</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\"> </span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\">npm run start:fe</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\"> </span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\">npm run start:be</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\">\"</span><span style=\"color: #C9D1D9\">,</span></span></code></pre>\n<p>Now running <code>npm run dev</code> will start both dev-servers in parallel, prefix each line to the Terminal with either “Angular” or “NestJS” and color the prefixes in green and blue. Awesome!</p>\n<h1 id=\"serving-frontend-and-backend-from-a-single-server-for-production\">Serving frontend and backend from a single server for production</h1>\n<p>Okay, now we have a full-stack application ready for development. Let’s finalise it by packaging our app as a single executable npm package that will serve both our frontend and backend.</p>\n<p>To achieve this we will create a production build of our Angular application and configure our NestJS server to serve the frontend under its root path, so that we can bundle both in a self-contained package (to deploy it e.g. to CloudFoundry or some other cloud provider).</p>\n<p>First, we’ll create a production build of the Angular frontend:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\">  npm run nx -- build client --prod</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\"> hn-feed@0.0.0 nx /Users/acosta/Projects/hn-feed</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\"> nx </span><span style=\"color: #A5D6FF\">\"build\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"client\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"--prod\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\"> ng run client:build:production</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">Generating ES5 bundles </span><span style=\"color: #FF7B72\">for</span><span style=\"color: #C9D1D9\"> differential loading...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">ES5 bundle generation complete.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">// ... A few seconds later...</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">Date: 2020-06-17T16:14:41.427Z - Hash: 4957569a994e1b83d273 - Time: 34832ms</span></span></code></pre>\n<p>Now our frontends compiled (minified, uglified, polyfilled) output can be found under <code>dist/apps/client</code></p>\n<p>Let’s configure NestJS to serve this folder when we access its root path.</p>\n<p>First, we’ll install the NestJS <code>serve-static</code> package to allow serving of static assets</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">npm install --save @nestjs/serve-static</span></span></code></pre>\n<p>Now all we need to do is import and configure the <code>ServeStaticModule</code> provided by this package inside the AppModule (<code>apps/api/src/app/app.module.ts</code>)</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { ServeStaticModule } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'@nestjs/serve-static'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { join } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'path'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">// ...</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">@</span><span style=\"color: #D2A8FF\">Module</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  imports: [</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    ServeStaticModule.</span><span style=\"color: #D2A8FF\">forRoot</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      rootPath: </span><span style=\"color: #D2A8FF\">join</span><span style=\"color: #C9D1D9\">(__dirname, </span><span style=\"color: #A5D6FF\">'..'</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #A5D6FF\">'client'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    })</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  ]</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// ...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">AppModule</span><span style=\"color: #C9D1D9\"> {}</span></span></code></pre>\n<p>which instructs NestJS to traverse into <code>../client</code> from its own dist-folder (<code>dist/apps/api</code>) and serve the contents on its root path.</p>\n<p>And sure enough, running only the backend via <code>npm run start:be</code> and navigating to <a href=\"http://localhost:3333/\"></a><a href=\"http://localhost:3333/\">http://localhost:3333/</a> should yield the same result as before, when we ran the Angular dev-server:</p>\n<h1 id=\"packaging-the-application-for-deployment\">Packaging the application for deployment</h1>\n<p>All that’s left now is to bundle everything in an <code>npm</code> package and we’ll be ready to deploy our full-stack application. Let’s do that now.</p>\n<p>We need to edit the <code>package.json</code> to only include the dist-files and as a convenience we’ll add a start-script:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">{</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FFA198; font-style: italic\">...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">\"files\"</span><span style=\"color: #C9D1D9\">: [</span><span style=\"color: #A5D6FF\">\"dist/apps/client\"</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #A5D6FF\">\"dist/apps/api\"</span><span style=\"color: #C9D1D9\">],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FFA198; font-style: italic\">...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FFA198; font-style: italic\">scripts</span><span style=\"color: #C9D1D9\">: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">\"serve\"</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">\"node dist/apps/api/main.js\"</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FFA198; font-style: italic\">...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span></code></pre>\n<p>Now, if we run <code>npm pack</code>, a tarball file will be generated for us in the project directory:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">npm pack</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice 📦  hn-feed@0.0.0</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice === Tarball Contents ===</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">// ...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice === Tarball Details ===</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice name:          hn-feed</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice version:       0.0.0</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice filename:      hn-feed-0.0.0.tgz</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice total files:   14</span></span></code></pre>\n<p>We can now upload this package to our favorite cloud provider, have it run <code>npm install --production</code> after the upload and provide the <code>serve</code> script as a startup command for the package (this step varies depending on your cloud provider).</p>\n<p>Of course you can also run this package locally, by simply unpacking the tarball file, running <code>npm install --production</code> inside the directory, then running <code>npm run serve</code>.</p>\n<p>I hope you found this post helpful. Let me know if you’re missing any important steps! There’s obviously a lot more we can do now that we have this setup, like runtime type validation for our frontend or backend, sharing logic across frontend and backend by using a shared library in the same workspace, etc. If you’re interested in those topics, I’ll gladly write a follow-up post to this one :)</p>\n<p>Thanks for reading!</p>";

				const frontmatter$f = {"minutesRead":8,"layout":"../../components/templates/BlogPostTemplate.astro","title":"Building FullStack Web app with Angular, NestJS and Nx","lang":"en","description":"Angular is one of the most highly recommended frontend frameworks in the software industry. However, if you want to create a full-stack web-application, it only covers half of the requirements. For a while now, I've been pairing it with NestJS and it's been working really well in multiple projects.","date":"2021-05-22T23:32:13.655Z","cover":"/uploads/nx.png","author":"Yuniel Acosta","tags":["Angular","NestJS","Nx","TypeScript"],"categories":["Programming"],"draft":false};
				const file$f = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx.md";
				const url$f = "/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx";
				function rawContent$f() {
					return "\n![nx](/uploads/nx.png 'angular + nestjs + nx')\n\n## Why this post?\n\nAngular is one of the most highly recommended frontend frameworks in the software industry. However, if you want to create a full-stack web-application, it only covers half of the requirements. For a while now, I've been pairing it with [NestJS](https://nestjs.com/) and it's been working really well in multiple projects.\n\nI keep recommending this combination to friends and coworkers, so I wanted to finally write down the setup I use as a reference/starting point. Maybe this post inspires you to also give it a try. If so, please let me know how it worked for you.\n\n[Angular](https://angular.io/) will be our frontend-framework for this example, we will use [NestJS](https://nestjs.com/) for our backend, and all of this will function as a whole inside [Nx](https://nx.dev/) workspace. We will introduce a few quality-of-life improvements as well as bundle both projects up into one single package.\n\n[NestJS](https://nestjs.com/) is an abstraction layer that sits on top of [Express](https://expressjs.com/es/) or [Fastify](https://www.fastify.io/), both NodeJS-powered REST-frameworks. It is written in Typescript and follows a lot of the same patterns found in Angular (annotations, DI, etc.). Nx is a set of tools developed by ex-Googlers which help develop in Monorepos. They also offer pretty sensible default choices and configuration overrides.\n\nYou ready? Let's go!\n\n# Scaffolding\n\nFirst, we'll setup a new Nx workspace and create an Angular and NestJS application inside it:\n\n```shell\n❯ npx create-nx-workspace@latest\n✔ Workspace name (e.g., org name)     · hn-feed\n✔ What to create in the new workspace · angular-nest\n✔ Application name                    · client\n✔ Default stylesheet format           · css\n✔ Use Nx Cloud? (It's free and doesn't require registration.) · No\n```\n\nWhen finished, this will have done the following:\n\n1. create a new directory with the workspace name\n2. generate a fresh Angular project located under `apps/client`\n3. create a new NestJS project located under `apps/api`\n4. generate a sample typescript library inside the workspace - to be used by both client and api (located under `libs/api-interfaces`)\n\nWhat's also neat is that Nx comes with improved tooling for both projects, such as:\n\n- using Jest over Karma as a unit-test runner\n- using Cypress over Protractor for E2E specs (Angular only)\n- using Prettier to format the code automatically\n- decent TSLint settings for the whole workspace\n\nThere's [tons more features](https://nx.dev/angular/getting-started/why-nx#10-minute-nx-overview) offered by Nx, but those are the ones I wanted to point out right now.\n\n# Running the projects\n\nNow that we have the basic projects set up, it's time to boot them up. Open 2 Terminal windows and run the following commands:\n\n```shell\n`[Terminal 1]: npm run nx -- serve client `\n\n`[Terminal 2]: npm run nx -- serve api`\n```\n\nThe first command will run the default Angular dev-server, compile and serve the frontend under [](http://localhost:4200/)<http://localhost:4200>. The second will start the NestJS dev-server, compile the Typescript down to NodeJS-compatible JavaScript and serve the result under [](http://localhost:3333/api)<http://localhost:3333/api>. As a nice bonus, Nx has added a proxy configuration for the Angular dev-server, which will proxy requests to [](http://localhost:4200/api)<http://localhost:4200/api> to the NestJS dev-server for us, so that we don't run into any CORS issues while developing. The proxy config can be found under `apps/client/proxy.conf.json` and it's referenced inside the `angular.json` project definition file.\n\nIf you open now your browser on [](http://localhost:4200/)<http://localhost:4200>, you should see a page similar to this one:\n\n![localhost:4200](/uploads/localhost.png 'App running in localhost')\n\nIf you inspect the network and refresh, you'll see an XHR request to [](http://localhost:4200/api/hello)<http://localhost:4200/api/hello> showing that the proxy has been set up properly.\n\n## Wait, what?\n\nLet me explain what's going on:\n\nThe NestJS project was configured with a prefix to use for all controllers. This prefix was defined as follows under (`apps/api/src/main.ts`)\n\n```typescript\nconst globalPrefix = 'api'\napp.setGlobalPrefix(globalPrefix)\n```\n\nNx also generated a sample REST-controller, called AppController (`apps/api/src/app/app.controller.ts`) that currently serves a static chunk of data, in our case an object of the Typescript interface `Message` defined like this (`libs/api-interfaces/src/lib/api-interfaces.ts`):\n\n```typescript\nexport interface Message {\n  message: string\n}\n```\n\nBecause the interface `Message` is defined in the shared library, it can be used both by frontend and backend. Sweet, type-safety across both projects!\n\nThe AppController method is annotated with\n\n```typescript\n @Get('hello')\n  getData(): Message {\n    return this.appService.getData();\n  }\n```\n\nwhich tells NestJS to expose a new GET-endpoint under [](http://localhost:3333/api/hello)<http://localhost:3333/api/hello> and return our message object, when the server is running.\n\nOn the other end of the stack we have the Angular project, which was configured to do a sample GET request to this exact endpoint. The sample code can be found in the AppComponent of the frontend under `apps/client/src/app/app.component.ts`\n\n```typescript\nexport class AppComponent {\n  hello$ = this.http.get<Message>('/api/hello')\n  constructor(private http: HttpClient) {}\n}\n```\n\nand it's invoked using the async pipe directly in the template:\n\n```html\n<div>Message: {{ hello$ | async | json }}</div>\n```\n\nNow, since the Angular dev-server is running on [](http://localhost:4200/)<http://localhost:4200>, the request will go to [](http://localhost/4200/api/hello)<http://localhost/4200/api/hello> due to the relative path in the `httpClient` call. This gets picked up by the Angular proxy config and is forwarded to our NestJS server. Awesome 🎉\n\n# Tweaking the application for development\n\nCongratulations, we now have a workspace with both NestJS and Angular running beside each other as well as sample code on how to call the backend from the frontend. That's already pretty neat!\n\nWhat I like to do in order to make for a better development experience, is starting both frontend and backend dev-server in parallel, with a single command. For this we will install a node-helper called [concurrently](https://www.npmjs.com/package/concurrently).\n\n```shell\nnpm install --save-dev concurrently\n```\n\nOnce that's done, we can adapt the `package.json` as follows:\n\n```shell\n\"start:fe\": \"ng serve client\",\n\"start:be\": \"ng serve api\",\n\"dev\": \"concurrently -p=\\\"{name}\\\" -n=\\\"Angular,NestJS\\\" -c=\\\"green,blue\\\" \\\"npm run start:fe\\\" \\\"npm run start:be\\\"\",\n```\n\nNow running `npm run dev` will start both dev-servers in parallel, prefix each line to the Terminal with either \"Angular\" or \"NestJS\" and color the prefixes in green and blue. Awesome!\n\n# Serving frontend and backend from a single server for production\n\nOkay, now we have a full-stack application ready for development. Let's finalise it by packaging our app as a single executable npm package that will serve both our frontend and backend.\n\nTo achieve this we will create a production build of our Angular application and configure our NestJS server to serve the frontend under its root path, so that we can bundle both in a self-contained package (to deploy it e.g. to CloudFoundry or some other cloud provider).\n\nFirst, we'll create a production build of the Angular frontend:\n\n```shell\n>  npm run nx -- build client --prod\n\n> hn-feed@0.0.0 nx /Users/acosta/Projects/hn-feed\n> nx \"build\" \"client\" \"--prod\"\n\n\n> ng run client:build:production\nGenerating ES5 bundles for differential loading...\nES5 bundle generation complete.\n\n// ... A few seconds later...\n\nDate: 2020-06-17T16:14:41.427Z - Hash: 4957569a994e1b83d273 - Time: 34832ms\n```\n\nNow our frontends compiled (minified, uglified, polyfilled) output can be found under `dist/apps/client`\n\nLet's configure NestJS to serve this folder when we access its root path.\n\nFirst, we'll install the NestJS `serve-static` package to allow serving of static assets\n\n```shell\nnpm install --save @nestjs/serve-static\n```\n\nNow all we need to do is import and configure the `ServeStaticModule` provided by this package inside the AppModule (`apps/api/src/app/app.module.ts`)\n\n```typescript\nimport { ServeStaticModule } from '@nestjs/serve-static'\nimport { join } from 'path'\n\n// ...\n\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'client')\n    })\n  ]\n  // ...\n})\nexport class AppModule {}\n```\n\nwhich instructs NestJS to traverse into `../client` from its own dist-folder (`dist/apps/api`) and serve the contents on its root path.\n\nAnd sure enough, running only the backend via `npm run start:be` and navigating to [](http://localhost:3333/)<http://localhost:3333/> should yield the same result as before, when we ran the Angular dev-server:\n\n# Packaging the application for deployment\n\nAll that's left now is to bundle everything in an `npm` package and we'll be ready to deploy our full-stack application. Let's do that now.\n\nWe need to edit the `package.json` to only include the dist-files and as a convenience we'll add a start-script:\n\n```json\n{\n    ...\n    \"files\": [\"dist/apps/client\", \"dist/apps/api\"],\n    ...\n    scripts: {\n    \"serve\": \"node dist/apps/api/main.js\",\n    ...\n    }\n}\n```\n\nNow, if we run `npm pack`, a tarball file will be generated for us in the project directory:\n\n```shell\nnpm pack\nnpm notice\nnpm notice 📦  hn-feed@0.0.0\nnpm notice === Tarball Contents ===\n// ...\nnpm notice === Tarball Details ===\nnpm notice name:          hn-feed\nnpm notice version:       0.0.0\nnpm notice filename:      hn-feed-0.0.0.tgz\nnpm notice total files:   14\n```\n\nWe can now upload this package to our favorite cloud provider, have it run `npm install --production` after the upload and provide the `serve` script as a startup command for the package (this step varies depending on your cloud provider).\n\nOf course you can also run this package locally, by simply unpacking the tarball file, running `npm install --production` inside the directory, then running `npm run serve`.\n\nI hope you found this post helpful. Let me know if you're missing any important steps! There's obviously a lot more we can do now that we have this setup, like runtime type validation for our frontend or backend, sharing logic across frontend and backend by using a shared library in the same workspace, etc. If you're interested in those topics, I'll gladly write a follow-up post to this one :)\n\nThanks for reading!\n";
				}
				function compiledContent$f() {
					return html$f;
				}
				function getHeadings$f() {
					return [{"depth":2,"slug":"why-this-post","text":"Why this post?"},{"depth":1,"slug":"scaffolding","text":"Scaffolding"},{"depth":1,"slug":"running-the-projects","text":"Running the projects"},{"depth":2,"slug":"wait-what","text":"Wait, what?"},{"depth":1,"slug":"tweaking-the-application-for-development","text":"Tweaking the application for development"},{"depth":1,"slug":"serving-frontend-and-backend-from-a-single-server-for-production","text":"Serving frontend and backend from a single server for production"},{"depth":1,"slug":"packaging-the-application-for-deployment","text":"Packaging the application for deployment"}];
				}
				function getHeaders$f() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$f();
				}				async function Content$f() {
					const { layout, ...content } = frontmatter$f;
					content.file = file$f;
					content.url = url$f;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$f });
					return createVNode($$BlogPostTemplate, {
									file: file$f,
									url: url$f,
									content,
									frontmatter: content,
									headings: getHeadings$f(),
									rawContent: rawContent$f,
									compiledContent: compiledContent$f,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$f[Symbol.for('astro.needsHeadRendering')] = false;

const _page3 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$f,
	file: file$f,
	url: url$f,
	rawContent: rawContent$f,
	compiledContent: compiledContent$f,
	getHeadings: getHeadings$f,
	getHeaders: getHeaders$f,
	Content: Content$f,
	default: Content$f
}, Symbol.toStringTag, { value: 'Module' }));

const html$e = "<p><img src=\"/uploads/vue3-typescript.png\" alt=\"vue3+typescript\" title=\"Vue 3 with Typescript\"></p>\n<p>I always use Typescript and some decorator libraries on my <a href=\"https://vuejs.org/\">VueJS</a> projects. It has allowed me to use a class syntax for my components and store files which, I feel, is easier to read than the normal VueJS javascript syntax. I’ll be going through a step by step process on how to achieve this. We will be building a counter component that will allow you to increment/decrement a counter.</p>\n<p>First we want to start off by creating a new VueJS project using the <a href=\"https://cli.vuejs.org/\">Vue CLI</a>. If you haven’t already done so, you can easily install the CLI with the following command:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">npm install -g @vue/cli</span></span></code></pre>\n<p>Next, we are going to create a new VueJS project with the <code>vue create</code> command.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">vue create vue-typescript-decorators</span></span></code></pre>\n<p>With the latest version of the CLI, you can create a Vue 2 or 3 project. Once you run the <code>vue create</code> command, you will be prompted with the following options. We will pick <code>Manually select features</code> so that we can create a Typescript project with Vue 3.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">Vue CLI v4.5.9</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">?</span><span style=\"color: #C9D1D9\"> Please pick a preset:</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  standard ([Vue 2] node-sass, babel, typescript, router, vuex, eslint, unit-jest, e2e-cypress)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  Default ([Vue 2] babel, eslint)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  Default (Vue 3 Preview) ([Vue 3] babel, eslint)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">❯ Manually </span><span style=\"color: #FF7B72\">select</span><span style=\"color: #C9D1D9\"> features</span></span></code></pre>\n<p>You will be prompted with which features you want to add to the project. For now, we will just add Typescript, Router and Vuex.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">Vue CLI v4.5.9</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">?</span><span style=\"color: #C9D1D9\"> Please pick a preset: Manually </span><span style=\"color: #FF7B72\">select</span><span style=\"color: #C9D1D9\"> features</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">?</span><span style=\"color: #C9D1D9\"> Check the features needed </span><span style=\"color: #FF7B72\">for</span><span style=\"color: #C9D1D9\"> your project:</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◉ Choose Vue version</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◉ Babel</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◉ TypeScript</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◯ Progressive Web App (PWA) Support</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◉ Router</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">❯◉ Vuex</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◯ CSS Pre-processors</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◉ Linter / Formatter</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◯ Unit Testing</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◯ E2E Testing</span></span></code></pre>\n<p>You will be prompted with which version of VueJS you want to use. In this example, we are going to use version 3 but this example should work just fine with version 2 or 3 (expect for how you register Vuex in 2 vs 3).</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">?</span><span style=\"color: #C9D1D9\"> Choose a version of Vue.js that you want to start the project with</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  2.x</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">❯ 3.x (Preview)</span></span></code></pre>\n<p>Before we start coding, we need to install the libraries that add decorator support to our project. Here is a list of libraries we will be adding:</p>\n<ul>\n<li><a href=\"https://github.com/vuejs/vue-class-component\">vue-class-component</a> used to define components which is installed by default when Typescript Vue 3 project created</li>\n<li><a href=\"https://github.com/kaorun343/vue-property-decorator\">vue-property-decorator</a> used to define props, watches, etc.</li>\n<li><a href=\"https://github.com/ktsn/vuex-class\">vuex-class</a> used to import state, getters, mutations and actions in components</li>\n<li><a href=\"https://github.com/gertqin/vuex-class-modules\">vuex-class-modules</a> used to define state, getters, mutations and actions</li>\n</ul>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\"> npm install vue-property-decorator vuex-class vuex-class-modules -P</span></span></code></pre>\n<p>If we look at the <code>Home.vue</code> view, the generated view already uses <code>vue-class-component</code> which uses the <code>Options</code> decorator to define a Vue component. Inside the <code>@Options</code> decorator, I added the <code>name</code> attribute and called this view <code>Home</code>. I noticed that if you do not do this, it is much harder to figure out what is what in the Vue tools when inspecting the different components. Also notice how you define a class called <code>Home</code> as the default export and extend from <code>Vue</code> from the <code>vue-class-component</code> library.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #8B949E\">// src/views/Home.vue</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\">script lang</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"ts\"</span><span style=\"color: #FF7B72\">></span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { Options, Vue } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"vue-class-component\"</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> HelloWorld </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"@/components/HelloWorld.vue\"</span><span style=\"color: #C9D1D9\">; </span><span style=\"color: #8B949E\">// @ is an alias to /src</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">@</span><span style=\"color: #D2A8FF\">Options</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  name: </span><span style=\"color: #A5D6FF\">\"Home\"</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  components: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    HelloWorld</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #FFA657\"> Home </span><span style=\"color: #FF7B72\">extends</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">Vue</span><span style=\"color: #FFA657\"> {}</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">&#x3C;/</span><span style=\"color: #C9D1D9\">script</span><span style=\"color: #FF7B72\">></span></span></code></pre>\n<p>Next we are going to setup the Vuex store. I will create a vuex module so you can see what that looks like using the <code>vuex-class-modules</code> libary. This counter example doesn’t require a module since it is so simple but most projects increase in complexity pretty quickly where splitting out your stores into modules becomes important.</p>\n<p>We will go ahead and create a new store called <code>counter.ts</code> under <code>src/store</code>. You will notice that we just need to export a default class that extends <code>VueModule</code> from <code>vuex-class-modules</code>. Inside the class we will create examples of state, getters, mutations and actions.</p>\n<ul>\n<li>State - Inside the class we will add a private level variable called <code>_count</code>. All state will be defined as class level variables.</li>\n<li>Getters - I created a getter method called <code>count</code> to return the value of the class level variable. All vuex getters will be defined as javascript getters in the class. This getter was not necessary for this simple example but I threw it in there so that you can see examples of a getter.</li>\n<li>Mutations - Two mutations are added, one to add to the counter and one to subtract from the counter. These are just standard methods in the class but need to be decorated with <code>@Mutation</code>.</li>\n<li>Actions - Two actions are added, one to add to the counter and one to subtract from the counter. Each method has been defined with <code>async</code> since actions are asynchronous functions. These are just standard methods in the class but need to be decorated with <code>@Action</code>.</li>\n</ul>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #8B949E\">// src/store/counter.ts</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { VuexModule, Module, Mutation, Action } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vuex-class-modules'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">@</span><span style=\"color: #D2A8FF\">Module</span><span style=\"color: #C9D1D9\">({ generateMutationSetters: </span><span style=\"color: #79C0FF\">true</span><span style=\"color: #C9D1D9\"> })</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #FFA657\"> Counter </span><span style=\"color: #FF7B72\">extends</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">VuexModule</span><span style=\"color: #FFA657\"> {</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #8B949E\">// state</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">private</span><span style=\"color: #FFA657\"> _count </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #8B949E\">// getters</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">get</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">count</span><span style=\"color: #FFA657\">()</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">number</span><span style=\"color: #FFA657\"> </span><span style=\"color: #C9D1D9\">{</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FF7B72\">return</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">._count</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #8B949E\">// mutations</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  @</span><span style=\"color: #C9D1D9\">Mutation</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">public</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">addToCount</span><span style=\"color: #FFA657\">() </span><span style=\"color: #C9D1D9\">{</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">._count</span><span style=\"color: #FF7B72\">++</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  @</span><span style=\"color: #C9D1D9\">Mutation</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">public</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">subtractFromCount</span><span style=\"color: #FFA657\">() </span><span style=\"color: #C9D1D9\">{</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">._count </span><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">._count</span><span style=\"color: #FF7B72\">--</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #8B949E\">// actions</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  @</span><span style=\"color: #C9D1D9\">Action</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">public</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">add</span><span style=\"color: #FFA657\">()</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #FFA657\"> Promise&#x3C;</span><span style=\"color: #79C0FF\">void</span><span style=\"color: #FFA657\">> </span><span style=\"color: #C9D1D9\">{</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">addToCount</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  @</span><span style=\"color: #C9D1D9\">Action</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">public</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">subtract</span><span style=\"color: #FFA657\">()</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #FFA657\"> Promise&#x3C;</span><span style=\"color: #79C0FF\">void</span><span style=\"color: #FFA657\">> </span><span style=\"color: #C9D1D9\">{</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">subtractFromCount</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">}</span></span></code></pre>\n<p>We now need to register <code>counter.ts</code> as a module using Vuex 4 (version 4 is used automatically in a Vue 3 project). Using the new Vuex 4 syntax, we create an empty store with <code>createStore</code> and then create a new instance of <code>Counter</code> and register it with the module name of <code>counter</code>. We will do this in <code>index.ts</code> to define the counter module and any subsequent modules we create.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #8B949E\">// src/store/index.ts</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { createStore } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vuex'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> Counter </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'./counter'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">store</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">createStore</span><span style=\"color: #C9D1D9\">({})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">// tslint:disable-next-line:no-unused-expression</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">Counter</span><span style=\"color: #C9D1D9\">({ store, name: </span><span style=\"color: #A5D6FF\">'counter'</span><span style=\"color: #C9D1D9\"> })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> </span><span style=\"color: #C9D1D9\">store</span></span></code></pre>\n<p>We are now going to create the counter component. Create a file called <code>Counter.vue</code> under <code>src/components</code>. We’ll start by exporting a class level component. We will use the <code>@Options</code> annotation to define the name of the component as <code>Counter</code>. Last, we will create a constant that makes a reference to the <code>counter</code> Vuex module using the <code>vuex-class</code> library.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\">script lang</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"ts\"</span><span style=\"color: #FF7B72\">></span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { Options, Vue } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"vue-class-component\"</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { Prop } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"vue-property-decorator\"</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { namespace } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"vuex-class\"</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">counterModule</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">namespace</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">\"counter\"</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">@</span><span style=\"color: #D2A8FF\">Options</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  name: </span><span style=\"color: #A5D6FF\">\"Counter\"</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #FFA657\"> Counter </span><span style=\"color: #FF7B72\">extends</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">Vue</span><span style=\"color: #FFA657\"> {</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">...</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">}</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">&#x3C;/</span><span style=\"color: #C9D1D9\">script</span><span style=\"color: #FF7B72\">></span></span>\n<span class=\"line\"></span></code></pre>\n<p>We’ll add a property to the <code>Counter</code> component just as an example of how to use the <code>@Prop</code> decorator from the <code>vue-property-decorator</code> library. This property serves no real purpose in this example but just gives you an idea on how to use it. There is a way to define the property in the <code>@Options</code> decorator but I prefer to use <code>vue-property-decorator</code> instead.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">@</span><span style=\"color: #D2A8FF\">Prop</span><span style=\"color: #C9D1D9\">({ type: </span><span style=\"color: #79C0FF\">String</span><span style=\"color: #C9D1D9\"> })</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">private msg</span><span style=\"color: #FF7B72\">!</span><span style=\"color: #C9D1D9\">: string;</span></span></code></pre>\n<p>To reference the count in the Vuex state, we can use the namespaced decorator from <code>vuex-class</code> to create a private level variable in the component. We can also do the same thing for the getters in Vuex. In both cases, I specified the name of the property in the Vuex store inside the decorator. This is only necessary if the name of the Vuex property differs from private level variable you are creating.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">  @counterModule.</span><span style=\"color: #D2A8FF\">State</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">\"_count\"</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  private counter</span><span style=\"color: #FF7B72\">!</span><span style=\"color: #C9D1D9\">: number;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  @counterModule.</span><span style=\"color: #D2A8FF\">Getter</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">\"count\"</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  private getCounter</span><span style=\"color: #FF7B72\">!</span><span style=\"color: #C9D1D9\">: () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> number;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>To reference the actions in the Vuex store, we will use the namespaced decorator again to create private level variables in the component to reference the Vuex actions.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">  @counterModule.Action</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  private add</span><span style=\"color: #FF7B72\">!</span><span style=\"color: #C9D1D9\">: () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Promise</span><span style=\"color: #FF7B72\">&#x3C;void></span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  @counterModule.Action</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  private subtract</span><span style=\"color: #FF7B72\">!</span><span style=\"color: #C9D1D9\">: () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Promise</span><span style=\"color: #FF7B72\">&#x3C;void></span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Last thing to do in the component is to create the template. This is pretty straight forward. We will create an <code>h1</code> that displays the passed property, two buttons for adding and subtracting from the counter and two <code>divs</code> to display the counter from the Vuex state and getters.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"hello\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">h1</span><span style=\"color: #C9D1D9\">>{{ msg }}&#x3C;/</span><span style=\"color: #7EE787\">h1</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">@click</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"add\"</span><span style=\"color: #C9D1D9\">>+&#x3C;/</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">@click</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"subtract\"</span><span style=\"color: #C9D1D9\">>-&#x3C;/</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">>State: {{ counter }}&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">>Getter: {{ getCounter }}&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>The final version of <code>Counter.vue</code> should look like this.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">// src/components/Counter.vue</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"hello\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">h1</span><span style=\"color: #C9D1D9\">>{{ msg }}&#x3C;/</span><span style=\"color: #7EE787\">h1</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">@click</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"add\"</span><span style=\"color: #C9D1D9\">>+&#x3C;/</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">@click</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"subtract\"</span><span style=\"color: #C9D1D9\">>-&#x3C;/</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">>State: {{ counter }}&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">>Getter: {{ getCounter }}&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">lang</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"ts\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { Options, Vue } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vue-class-component'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { Prop } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vue-property-decorator'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { namespace } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vuex-class'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">counterModule</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">namespace</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'counter'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  @</span><span style=\"color: #D2A8FF\">Options</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    name: </span><span style=\"color: #A5D6FF\">'Counter'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #FFA657\"> Counter </span><span style=\"color: #FF7B72\">extends</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">Vue</span><span style=\"color: #FFA657\"> {</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    @</span><span style=\"color: #D2A8FF\">Prop</span><span style=\"color: #FFA657\">({ </span><span style=\"color: #C9D1D9\">type: </span><span style=\"color: #79C0FF\">String</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">})</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    </span><span style=\"color: #FF7B72\">private</span><span style=\"color: #FFA657\"> msg</span><span style=\"color: #FF7B72\">!:</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">string</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    @</span><span style=\"color: #C9D1D9\">counterModule</span><span style=\"color: #FFA657\">.</span><span style=\"color: #D2A8FF\">State</span><span style=\"color: #FFA657\">(</span><span style=\"color: #A5D6FF\">'_count'</span><span style=\"color: #FFA657\">)</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    </span><span style=\"color: #FF7B72\">private</span><span style=\"color: #FFA657\"> counter</span><span style=\"color: #FF7B72\">!:</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">number</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    @</span><span style=\"color: #C9D1D9\">counterModule</span><span style=\"color: #FFA657\">.</span><span style=\"color: #D2A8FF\">Getter</span><span style=\"color: #FFA657\">(</span><span style=\"color: #A5D6FF\">'count'</span><span style=\"color: #FFA657\">)</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    </span><span style=\"color: #FF7B72\">private</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">getCounter</span><span style=\"color: #FF7B72\">!:</span><span style=\"color: #FFA657\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">number</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    @</span><span style=\"color: #C9D1D9\">counterModule</span><span style=\"color: #FFA657\">.</span><span style=\"color: #C9D1D9\">Action</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    </span><span style=\"color: #FF7B72\">private</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">add</span><span style=\"color: #FF7B72\">!:</span><span style=\"color: #FFA657\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #FFA657\"> Promise&#x3C;</span><span style=\"color: #79C0FF\">void</span><span style=\"color: #FFA657\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    @</span><span style=\"color: #C9D1D9\">counterModule</span><span style=\"color: #FFA657\">.</span><span style=\"color: #C9D1D9\">Action</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    </span><span style=\"color: #FF7B72\">private</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">subtract</span><span style=\"color: #FF7B72\">!:</span><span style=\"color: #FFA657\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #FFA657\"> Promise&#x3C;</span><span style=\"color: #79C0FF\">void</span><span style=\"color: #FFA657\">></span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>Lastly, we are going to drop in the <code>Counter</code> component onto the home page. We will pass the message of <code>Counter</code> to the component.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">// src/views/Home.vue</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"home\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">alt</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"Vue logo\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"../assets/logo.png\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #FFA198; font-style: italic\">Counter</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">msg</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"Counter\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #FFA198; font-style: italic\">HelloWorld</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">msg</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"Welcome to Your Vue.js + TypeScript App\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">lang</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"ts\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { Options, Vue } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vue-class-component'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> HelloWorld </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'@/components/HelloWorld.vue'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #8B949E\">// @ is an alias to /src</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> Counter </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'@/components/Counter.vue'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  @</span><span style=\"color: #D2A8FF\">Options</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    name: </span><span style=\"color: #A5D6FF\">'Home'</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    components: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      HelloWorld,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      Counter</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #FFA657\"> Home </span><span style=\"color: #FF7B72\">extends</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">Vue</span><span style=\"color: #FFA657\"> {}</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>All you need to do now is run the project.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">npm run serve</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Now just go to <a href=\"http://localhost:8080/\">http://localhost:8080/</a>. You can find the example source code <a href=\"https://github.com/yacosta738/vue-typescript-decorators\">here</a>.</p>";

				const frontmatter$e = {"minutesRead":8,"layout":"../../components/templates/BlogPostTemplate.astro","title":"Vue 3 with Typescript and Decorators","description":"I always use Typescript and some decorator libraries on my VueJS projects. It has allowed me to use a class syntax for my components and store files which, I feel, is easier to read than the normal VueJS javascript syntax. I'll be going through a step by step process on how to achieve this. We will be building a counter component that will allow you to increment/decrement a counter.","date":"2021-05-30T19:54:13.642Z","cover":"/uploads/vue3-typescript.png","author":"Yuniel Acosta","lang":"en","tags":["VueJS","TypeScript","Decorators","VueX","Components"],"categories":["Programming"],"draft":false};
				const file$e = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/vue-3-with-typescript-and-decorators.md";
				const url$e = "/blog/vue-3-with-typescript-and-decorators";
				function rawContent$e() {
					return "\n![vue3+typescript](/uploads/vue3-typescript.png 'Vue 3 with Typescript')\n\nI always use Typescript and some decorator libraries on my [VueJS](https://vuejs.org/) projects. It has allowed me to use a class syntax for my components and store files which, I feel, is easier to read than the normal VueJS javascript syntax. I'll be going through a step by step process on how to achieve this. We will be building a counter component that will allow you to increment/decrement a counter.\n\nFirst we want to start off by creating a new VueJS project using the [Vue CLI](https://cli.vuejs.org/). If you haven't already done so, you can easily install the CLI with the following command:\n\n```shell\nnpm install -g @vue/cli\n```\n\nNext, we are going to create a new VueJS project with the `vue create` command.\n\n```shell\nvue create vue-typescript-decorators\n```\n\nWith the latest version of the CLI, you can create a Vue 2 or 3 project. Once you run the `vue create` command, you will be prompted with the following options. We will pick `Manually select features` so that we can create a Typescript project with Vue 3.\n\n```shell\nVue CLI v4.5.9\n? Please pick a preset:\n  standard ([Vue 2] node-sass, babel, typescript, router, vuex, eslint, unit-jest, e2e-cypress)\n  Default ([Vue 2] babel, eslint)\n  Default (Vue 3 Preview) ([Vue 3] babel, eslint)\n❯ Manually select features\n```\n\nYou will be prompted with which features you want to add to the project. For now, we will just add Typescript, Router and Vuex.\n\n```shell\nVue CLI v4.5.9\n? Please pick a preset: Manually select features\n? Check the features needed for your project:\n ◉ Choose Vue version\n ◉ Babel\n ◉ TypeScript\n ◯ Progressive Web App (PWA) Support\n ◉ Router\n❯◉ Vuex\n ◯ CSS Pre-processors\n ◉ Linter / Formatter\n ◯ Unit Testing\n ◯ E2E Testing\n```\n\nYou will be prompted with which version of VueJS you want to use. In this example, we are going to use version 3 but this example should work just fine with version 2 or 3 (expect for how you register Vuex in 2 vs 3).\n\n```shell\n? Choose a version of Vue.js that you want to start the project with\n  2.x\n❯ 3.x (Preview)\n```\n\nBefore we start coding, we need to install the libraries that add decorator support to our project. Here is a list of libraries we will be adding:\n\n- [vue-class-component](https://github.com/vuejs/vue-class-component) used to define components which is installed by default when Typescript Vue 3 project created\n- [vue-property-decorator](https://github.com/kaorun343/vue-property-decorator) used to define props, watches, etc.\n- [vuex-class](https://github.com/ktsn/vuex-class) used to import state, getters, mutations and actions in components\n- [vuex-class-modules](https://github.com/gertqin/vuex-class-modules) used to define state, getters, mutations and actions\n\n```shell\n npm install vue-property-decorator vuex-class vuex-class-modules -P\n```\n\nIf we look at the `Home.vue` view, the generated view already uses `vue-class-component` which uses the `Options` decorator to define a Vue component. Inside the `@Options` decorator, I added the `name` attribute and called this view `Home`. I noticed that if you do not do this, it is much harder to figure out what is what in the Vue tools when inspecting the different components. Also notice how you define a class called `Home` as the default export and extend from `Vue` from the `vue-class-component` library.\n\n```typescript\n// src/views/Home.vue\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport HelloWorld from \"@/components/HelloWorld.vue\"; // @ is an alias to /src\n\n@Options({\n  name: \"Home\",\n  components: {\n    HelloWorld\n  }\n})\nexport default class Home extends Vue {}\n</script>\n```\n\nNext we are going to setup the Vuex store. I will create a vuex module so you can see what that looks like using the `vuex-class-modules` libary. This counter example doesn't require a module since it is so simple but most projects increase in complexity pretty quickly where splitting out your stores into modules becomes important.\n\nWe will go ahead and create a new store called `counter.ts` under `src/store`. You will notice that we just need to export a default class that extends `VueModule` from `vuex-class-modules`. Inside the class we will create examples of state, getters, mutations and actions.\n\n- State - Inside the class we will add a private level variable called `_count`. All state will be defined as class level variables.\n- Getters - I created a getter method called `count` to return the value of the class level variable. All vuex getters will be defined as javascript getters in the class. This getter was not necessary for this simple example but I threw it in there so that you can see examples of a getter.\n- Mutations - Two mutations are added, one to add to the counter and one to subtract from the counter. These are just standard methods in the class but need to be decorated with `@Mutation`.\n- Actions - Two actions are added, one to add to the counter and one to subtract from the counter. Each method has been defined with `async` since actions are asynchronous functions. These are just standard methods in the class but need to be decorated with `@Action`.\n\n```typescript\n// src/store/counter.ts\nimport { VuexModule, Module, Mutation, Action } from 'vuex-class-modules'\n\n@Module({ generateMutationSetters: true })\nexport default class Counter extends VuexModule {\n  // state\n  private _count = 0\n\n  // getters\n  get count(): number {\n    return this._count\n  }\n\n  // mutations\n  @Mutation\n  public addToCount() {\n    this._count++\n  }\n\n  @Mutation\n  public subtractFromCount() {\n    if (this._count > 0) {\n      this._count--\n    }\n  }\n\n  // actions\n  @Action\n  public async add(): Promise<void> {\n    this.addToCount()\n  }\n\n  @Action\n  public async subtract(): Promise<void> {\n    this.subtractFromCount()\n  }\n}\n```\n\nWe now need to register `counter.ts` as a module using Vuex 4 (version 4 is used automatically in a Vue 3 project). Using the new Vuex 4 syntax, we create an empty store with `createStore` and then create a new instance of `Counter` and register it with the module name of `counter`. We will do this in `index.ts` to define the counter module and any subsequent modules we create.\n\n```typescript\n// src/store/index.ts\nimport { createStore } from 'vuex'\nimport Counter from './counter'\n\nconst store = createStore({})\n\n// tslint:disable-next-line:no-unused-expression\nnew Counter({ store, name: 'counter' })\n\nexport default store\n```\n\nWe are now going to create the counter component. Create a file called `Counter.vue` under `src/components`. We'll start by exporting a class level component. We will use the `@Options` annotation to define the name of the component as `Counter`. Last, we will create a constant that makes a reference to the `counter` Vuex module using the `vuex-class` library.\n\n```typescript\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport { Prop } from \"vue-property-decorator\";\nimport { namespace } from \"vuex-class\";\n\nconst counterModule = namespace(\"counter\");\n\n@Options({\n  name: \"Counter\"\n})\nexport default class Counter extends Vue {\n  ...\n}\n</script>\n\n```\n\nWe'll add a property to the `Counter` component just as an example of how to use the `@Prop` decorator from the `vue-property-decorator` library. This property serves no real purpose in this example but just gives you an idea on how to use it. There is a way to define the property in the `@Options` decorator but I prefer to use `vue-property-decorator` instead.\n\n```typescript\n@Prop({ type: String })\nprivate msg!: string;\n```\n\nTo reference the count in the Vuex state, we can use the namespaced decorator from `vuex-class` to create a private level variable in the component. We can also do the same thing for the getters in Vuex. In both cases, I specified the name of the property in the Vuex store inside the decorator. This is only necessary if the name of the Vuex property differs from private level variable you are creating.\n\n```typescript\n  @counterModule.State(\"_count\")\n  private counter!: number;\n\n  @counterModule.Getter(\"count\")\n  private getCounter!: () => number;\n\n```\n\nTo reference the actions in the Vuex store, we will use the namespaced decorator again to create private level variables in the component to reference the Vuex actions.\n\n```typescript\n  @counterModule.Action\n  private add!: () => Promise<void>;\n\n  @counterModule.Action\n  private subtract!: () => Promise<void>;\n\n```\n\nLast thing to do in the component is to create the template. This is pretty straight forward. We will create an `h1` that displays the passed property, two buttons for adding and subtracting from the counter and two `divs` to display the counter from the Vuex state and getters.\n\n```html\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <div>\n      <button @click=\"add\">+</button>\n      <button @click=\"subtract\">-</button>\n    </div>\n    <div>State: {{ counter }}</div>\n    <div>Getter: {{ getCounter }}</div>\n  </div>\n</template>\n```\n\nThe final version of `Counter.vue` should look like this.\n\n```html\n// src/components/Counter.vue\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <div>\n      <button @click=\"add\">+</button>\n      <button @click=\"subtract\">-</button>\n    </div>\n    <div>State: {{ counter }}</div>\n    <div>Getter: {{ getCounter }}</div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n  import { Options, Vue } from 'vue-class-component'\n  import { Prop } from 'vue-property-decorator'\n  import { namespace } from 'vuex-class'\n\n  const counterModule = namespace('counter')\n\n  @Options({\n    name: 'Counter'\n  })\n  export default class Counter extends Vue {\n    @Prop({ type: String })\n    private msg!: string\n\n    @counterModule.State('_count')\n    private counter!: number\n\n    @counterModule.Getter('count')\n    private getCounter!: () => number\n\n    @counterModule.Action\n    private add!: () => Promise<void>\n\n    @counterModule.Action\n    private subtract!: () => Promise<void>\n  }\n</script>\n```\n\nLastly, we are going to drop in the `Counter` component onto the home page. We will pass the message of `Counter` to the component.\n\n```html\n// src/views/Home.vue\n<template>\n  <div class=\"home\">\n    <img alt=\"Vue logo\" src=\"../assets/logo.png\" />\n    <Counter msg=\"Counter\" />\n    <HelloWorld msg=\"Welcome to Your Vue.js + TypeScript App\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\n  import { Options, Vue } from 'vue-class-component'\n  import HelloWorld from '@/components/HelloWorld.vue' // @ is an alias to /src\n  import Counter from '@/components/Counter.vue'\n\n  @Options({\n    name: 'Home',\n    components: {\n      HelloWorld,\n      Counter\n    }\n  })\n  export default class Home extends Vue {}\n</script>\n```\n\nAll you need to do now is run the project.\n\n```shell\nnpm run serve\n\n```\n\nNow just go to <http://localhost:8080/>. You can find the example source code [here](https://github.com/yacosta738/vue-typescript-decorators).\n";
				}
				function compiledContent$e() {
					return html$e;
				}
				function getHeadings$e() {
					return [];
				}
				function getHeaders$e() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$e();
				}				async function Content$e() {
					const { layout, ...content } = frontmatter$e;
					content.file = file$e;
					content.url = url$e;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$e });
					return createVNode($$BlogPostTemplate, {
									file: file$e,
									url: url$e,
									content,
									frontmatter: content,
									headings: getHeadings$e(),
									rawContent: rawContent$e,
									compiledContent: compiledContent$e,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$e[Symbol.for('astro.needsHeadRendering')] = false;

const _page4 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$e,
	file: file$e,
	url: url$e,
	rawContent: rawContent$e,
	compiledContent: compiledContent$e,
	getHeadings: getHeadings$e,
	getHeaders: getHeaders$e,
	Content: Content$e,
	default: Content$e
}, Symbol.toStringTag, { value: 'Module' }));

const html$d = "<p><img src=\"/uploads/visual-studio-code.jpg\" alt=\"Top-Ten-Code-Extensions-of-2021\" title=\"top 10 vs code extensions\"></p>\n<p>Visual Studio Code is one of the most widely used code editors in the developer community. One of the reasons for VS Code’s popularity is its many extensions that speed up the development process.</p>\n<p>In this guide, we’ll explore the 10 <a href=\"https://code.visualstudio.com/docs/editor/extension-gallery\">VS Code extensions</a> every web developer should know in 2021. These tools are designed to improve the developer experience and make your job easier in various ways.</p>\n<p>We’ll cover the following VS Code extensions:</p>\n<ol>\n<li>Auto Rename Tag</li>\n<li>Bracket Pair Colorizer</li>\n<li>Snippets</li>\n<li>Better Comments</li>\n<li>Markdown All in One</li>\n<li>Icons</li>\n<li>Prettier</li>\n<li>Import Cost</li>\n<li>Tabnine</li>\n<li>GitLens</li>\n</ol>\n<h2 id=\"1-auto-rename-tag\">1. Auto Rename Tag</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag\">Auto Rename Tag</a> is a super useful VS Code extension for web developers. As the name suggests, <code>Auto Rename Tag</code> renames the second tag as the first one is updated and vice versa:</p>\n<p><img src=\"/uploads/auto-rename-tag.gif\" alt=\"Auto-Rename-Tag-Gif\" title=\"auto rename\"></p>\n<p>You will find this extension helpful not only with HTML, but also with React because of <a href=\"https://reactjs.org/docs/introducing-jsx.html\">JSX</a>.</p>\n<p><img src=\"/uploads/jsx.gif\" alt=\"React-JSX-Auto-Rename-Tag\" title=\"react jsx auto rename tag\"></p>\n<p>In the above example there is only text inside the tags, but in a real application, there can be nested tags and elements, making manual updates difficult and tedious.</p>\n<h2 id=\"2-bracket-pair-colorizer\">2. Bracket Pair Colorizer</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer\">Bracket Pair Colorizer</a> is an extension that matches corresponding brackets with the same color. Having nested components, functions, objects, etc., in a file, can become confusing with multiple parentheses, brackets, etc.</p>\n<p><img src=\"/uploads/bracket-pair-colorizer-example.gif\" alt=\"Bracket-Pair-Colorizer-Example\" title=\"bracket pair colorizzer example\"></p>\n<p><a href=\"https://blog.logrocket.com/top-10-vs-code-extensions-2021/\"></a></p>\n<p>For example, consider the following code snippet:</p>\n<p><img src=\"/uploads/bracket-pair-colorizer-code-snippet.png\" alt=\"Bracket-Pair-Colorizer-Code-Snippet\" title=\"bracket pair colorizer code snippet\"></p>\n<p>At first glance, it’s quite hard to differentiate between different code blocks in the code, but the <code>Bracket Pair Colorizer</code> extension colors the corresponding parenthesis and brackets for easy navigation and accessibility.</p>\n<p><img src=\"/uploads/bracket-pair-colorizer-extension-example.png\" alt=\"Bracket-Pair-Colorizer-Extension-Example\" title=\"bracket pair colorizer extension example\"></p>\n<h2 id=\"3-snippets\">3. Snippets</h2>\n<p><a href=\"https://code.visualstudio.com/docs/editor/userdefinedsnippets\">Snippets</a> are the best way to save time and increase your productivity. This is not a single extension but a collection of extensions with various snippets for different programming languages.</p>\n<p>Below are some popular code snippets extensions:</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=johnpapa.Angular2\">Angular Snippets (version 11)</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=ms-python.python\">Python</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=xabikos.JavaScriptSnippets\">JavaScript (ES6) code snippets</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=abusaidm.html-snippets\">HTML Snippets</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets\">ES7 React/Redux/GraphQL/React-Native snippets</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=hollowtree.vue-snippets\">Vue 3 Snippets</a></li>\n</ul>\n<p>For example, it can be quite tedious to repeat the syntax for functional components in React every time you create a new component. Using the <a href=\"https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets\">ES7 React/Redux/GraphQL/React-Native snippets</a> extension, you can use the shorthand <code>rfc</code> for functional components and hit enter.</p>\n<p><img src=\"/uploads/react-redux-graphql-extension.gif\" alt=\"React-Redux-GraphQL-Extension\" title=\"react redux graphql extension\"></p>\n<h2 id=\"4-better-comments\">4. Better Comments</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments\">Better Comments</a> is designed to help you write more human-friendly comments in your code.</p>\n<p>Clear comments are beneficial not only for someone going through your code but also for you. It’s quite common for developers to get lost in their own code when visiting it after some time. Having descriptive comments can save a lot of time for you and your team.</p>\n<p>With the Better Comments VS Code extension, you can categorize your annotations into alerts, queries, to-dos, highlights, etc.</p>\n<p>You can use either of the following characters after double forward slash (<code>//</code>):</p>\n<ul>\n<li><code>*</code> for highlighted text</li>\n<li><code>!</code> for errors and warnings</li>\n<li><code>?</code> for queries and questions</li>\n<li><code>//</code> for strikethrough</li>\n<li><code>TODO</code> for to-dos</li>\n</ul>\n<p><img src=\"/uploads/better-comments-vs-code-extension-example.png\" alt=\"Better-Comments-VS-Code-Extension-Example\" title=\"better comments vs code extension example\"></p>\n<h2 id=\"5-markdown-all-in-one\">5. Markdown All in One</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one\">Markdown All in One</a> is a single extension that takes care of all your markdown needs, such as auto-preview, shortcuts, autocomplete, etc.</p>\n<p>Since its release in 2004, Markdown has become one of the most popular and preferred markup languages. Technical writers worldwide widely use Markdown for articles, blogs, documentation, etc., because of its lightweight simplicity and cross-platform usage. Its popularity has given rise to other variants of Markdown, such as <a href=\"https://github.github.com/gfm/\">GitHub Flavored Markdown</a>, <a href=\"https://mdxjs.com/\">MDX</a>, etc.</p>\n<p>For example, to bold some text in Markdown, you can select that text and use the shortcut <code>Ctrl + B</code> to increase your productivity.</p>\n<p><img src=\"/uploads/markdown-all-in-one-extension.gif\" alt=\"Markdown-All-In-One-Extension\" title=\"markdown all in one extension\"></p>\n<h2 id=\"6-icons\">6. Icons</h2>\n<p>Having descriptive icons can help you differentiate between files and folders. Icons also make development more fun.</p>\n<p>Here is a comparison between two VS Code tabs. One has icons, the other does not.</p>\n<p><img src=\"/uploads/vs-code-tabs-comparison.png\" alt=\"VS-Code-Tabs-Comparison\" title=\"vs code tabs comparison\"></p>\n<p>There are many icons extension that you can choose from. Popular icon collections include:</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons\">vscode-icons</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme\">Material Icon Theme</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme-icons\">Material Theme Icons</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=LaurentTreguier.vscode-simple-icons\">Simple icons</a></li>\n</ul>\n<h2 id=\"7-prettier\">7. Prettier</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\">Prettier</a> is an opinionated code formatter. With more than 38.5k stars on GitHub, it’s one of the most popular code formatters available. Having consistent formatting and styling across your code can save a lot of time, especially when collaborating with other developers.</p>\n<p>Consider the following code block:</p>\n<p><img src=\"/uploads/prettier-code-formatter-example.png\" alt=\"Prettier-Demo-Code-Example\" title=\"prettier demo code example\"></p>\n<p>You may notice a handful of formatting issues with this code, including:</p>\n<ul>\n<li>A mix of single and double-quotes</li>\n<li>Irregular use of semicolons (<code>;</code>)</li>\n<li>Improper indentation of the console statement on line 6</li>\n</ul>\n<p>Here’s how Prettier would format and fix the above code:</p>\n<p><img src=\"/uploads/prettier-formatted-code-example.gif\" alt=\"prettier format\" title=\"prettier example\"></p>\n<p>This extension supports <a href=\"https://prettier.io/docs/en/plugins.html\">Prettier plugins</a> when you’re using a locally resolved version of Prettier.<br>\nYou can configure this extension further to suit your formatting needs and even trigger it with autosave.</p>\n<h2 id=\"8-import-cost\">8. Import Cost</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost\">Import Cost</a> is an extension that shows you an estimated size of the import package in your code. When working on a project, it’s important not to compromise the user experience by importing heft packages. One way to avoid this is to keep track of the size of additional dependencies in your code.</p>\n<p><img src=\"/uploads/import-cost-extension-example.png\" alt=\"Import-Cost-Extension-Example\" title=\"import cost extension example\"></p>\n<p>When the import is too large, Import Cost warns you by displaying the size in red. You can configure what size should be considered small, medium, or large.</p>\n<h2 id=\"9-tabnine\">9. Tabnine</h2>\n<p><a href=\"https://www.tabnine.com/\">Tabnine</a> was created to help developers <strong>code faster, reduce mistakes, and discover best coding practices</strong> using Machine Learning. Tabnine’s powerful Artificial Intelligence assistant works right where you are, in the comfort of your IDE. Tabnine studies publicly shared code and uses AI deep learning to predict one-click code completions</p>\n<p>Deep TabNine is built upon <a href=\"https://medium.com/syncedreview/openai-guards-its-ml-model-code-data-to-thwart-malicious-usage-d9f7e9c43cd0\">GPT-2,</a> a large transformer-based language model that can generate realistic paragraphs of text. The model, developed by San Francisco-based research company OpenAI, demonstrates compelling performance across a range of language tasks such as machine translation, question answering, reading comprehension and summarization.</p>\n<p>Unlike other code completion plug-ins, Deep TabNine is automatically compiled based on a programmer’s past usage and habits, and includes the probability of the different predictions it provides. If a similar code appears in previous projects, Deep TabNine will also display the address directly in the completion candidate box.</p>\n<p>Tabnine works with all major programming languages including JavaScript, Python, TypeScript, PHP, C/C++, HTML/CSS, Go, Java, Ruby, C#, Rust, SQL, Bash, Kotlin, Julia, Lua, OCaml, Perl, Haskell, and React.</p>\n<p>The TabNine website with install instructions and other information is <a href=\"https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode\">here</a>.</p>\n<p><img src=\"/uploads/deep_tabnine.0.gif\" alt=\"Profile-Switcher-Content-Creation-Default-Example\" title=\"Profile switcher content creation defaul example\"></p>\n<h2 id=\"10-gitlens\">10. GitLens</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\">GitLens</a> is an <a href=\"https://github.com/eamodio/vscode-gitlens\">open-source</a> extension for Visual Studio Code created, developed, and maintained by <a href=\"https://www.amod.io/\">Eric Amodio</a>. It combines the capabilities of Git with VS Code.</p>\n<p>One of the best features of this extension is the ability to visualize code authorship via Git blame annotations and code lens.</p>\n<p>Below is a screenshot from the <a href=\"https://finalspaceapi.com/docs/react\">React example</a> docs of the <a href=\"https://finalspaceapi.com/\">Final Space API</a>.</p>\n<p><img src=\"/uploads/react-example-final-space-api.png\" alt=\"React-Example-Final-Space-Api\" title=\"react example final space api\"></p>\n<p>Here’s an expanded version of the code authorship:</p>\n<p><img src=\"/uploads/code-authorship-expanded-version.png\" alt=\"Code-Authorship-Expanded-Version\" title=\"code authorship expanded version\"></p>\n<p>This is just one of the many <a href=\"https://gitlens.amod.io/#features\">features of GitLens extension</a>. Other notable features include:</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#revision-navigation-\">R</a> <a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#revision-navigation\">revision navigation</a> (backward and forward) through the history of a file</li>\n<li>An unobtrusive <a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#current-line-blame-\">current line blame</a> annotation at the end of the line showing the commit</li>\n<li>A <a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#status-bar-blame-\">status bar blame</a> annotation showing the commit and author who last modified the current line</li>\n</ul>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>In this guide, we reviewed 10 VS Code extensions that can help make you a better programmer and boost your productivity.</p>\n<p>There are many more VS Code extensions that you can explore for all kinds of use cases. Here are a few other extensions worth checking out:</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer\">Live Server</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense\">Path Intellisense</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker\">Code Spell Checker</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=wwm.better-align\">Better Align</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode\">Quokka.js</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow\">indent-rainbow</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=aaronpowell.vscode-profile-switcher\">Profile Switcher</a></li>\n</ul>";

				const frontmatter$d = {"minutesRead":6,"layout":"../../components/templates/BlogPostTemplate.astro","title":"Top 10 VS Code extension for 2021","description":"Visual Studio Code is one of the most widely used code editors in the developer community. One of the reasons for VS Code’s popularity is its many extensions that speed up the development process.  In this guide, we’ll explore the 10 VS Code extensions every web developer should know in 2021. These tools are designed to improve the developer experience and make your job easier in various ways.","date":"2021-05-25T02:23:12.784Z","cover":"/uploads/visual-studio-code.jpg","author":"Yuniel Acosta","lang":"en","tags":["VS Code","IDE","Text Editor","extensions","plugins"],"categories":["Tooling"],"draft":false};
				const file$d = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/top-10-vs-code-extension-for-2021.md";
				const url$d = "/blog/top-10-vs-code-extension-for-2021";
				function rawContent$d() {
					return "\n![Top-Ten-Code-Extensions-of-2021](/uploads/visual-studio-code.jpg 'top 10 vs code extensions')\n\nVisual Studio Code is one of the most widely used code editors in the developer community. One of the reasons for VS Code’s popularity is its many extensions that speed up the development process.\n\nIn this guide, we’ll explore the 10 [VS Code extensions](https://code.visualstudio.com/docs/editor/extension-gallery) every web developer should know in 2021. These tools are designed to improve the developer experience and make your job easier in various ways.\n\nWe’ll cover the following VS Code extensions:\n\n1. Auto Rename Tag\n2. Bracket Pair Colorizer\n3. Snippets\n4. Better Comments\n5. Markdown All in One\n6. Icons\n7. Prettier\n8. Import Cost\n9. Tabnine\n10. GitLens\n\n## 1. Auto Rename Tag\n\n[Auto Rename Tag](https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag) is a super useful VS Code extension for web developers. As the name suggests, `Auto Rename Tag` renames the second tag as the first one is updated and vice versa:\n\n![Auto-Rename-Tag-Gif](/uploads/auto-rename-tag.gif 'auto rename')\n\nYou will find this extension helpful not only with HTML, but also with React because of [JSX](https://reactjs.org/docs/introducing-jsx.html).\n\n![React-JSX-Auto-Rename-Tag](/uploads/jsx.gif 'react jsx auto rename tag')\n\nIn the above example there is only text inside the tags, but in a real application, there can be nested tags and elements, making manual updates difficult and tedious.\n\n## 2. Bracket Pair Colorizer\n\n[Bracket Pair Colorizer](https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer) is an extension that matches corresponding brackets with the same color. Having nested components, functions, objects, etc., in a file, can become confusing with multiple parentheses, brackets, etc.\n\n![Bracket-Pair-Colorizer-Example](/uploads/bracket-pair-colorizer-example.gif 'bracket pair colorizzer example')\n\n[](https://blog.logrocket.com/top-10-vs-code-extensions-2021/)\n\nFor example, consider the following code snippet:\n\n![Bracket-Pair-Colorizer-Code-Snippet](/uploads/bracket-pair-colorizer-code-snippet.png 'bracket pair colorizer code snippet')\n\nAt first glance, it’s quite hard to differentiate between different code blocks in the code, but the `Bracket Pair Colorizer` extension colors the corresponding parenthesis and brackets for easy navigation and accessibility.\n\n![Bracket-Pair-Colorizer-Extension-Example](/uploads/bracket-pair-colorizer-extension-example.png 'bracket pair colorizer extension example')\n\n## 3. Snippets\n\n[Snippets](https://code.visualstudio.com/docs/editor/userdefinedsnippets) are the best way to save time and increase your productivity. This is not a single extension but a collection of extensions with various snippets for different programming languages.\n\nBelow are some popular code snippets extensions:\n\n- [Angular Snippets (version 11)](https://marketplace.visualstudio.com/items?itemName=johnpapa.Angular2)\n- [Python](https://marketplace.visualstudio.com/items?itemName=ms-python.python)\n- [JavaScript (ES6) code snippets](https://marketplace.visualstudio.com/items?itemName=xabikos.JavaScriptSnippets)\n- [HTML Snippets](https://marketplace.visualstudio.com/items?itemName=abusaidm.html-snippets)\n- [ES7 React/Redux/GraphQL/React-Native snippets](https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets)\n- [Vue 3 Snippets](https://marketplace.visualstudio.com/items?itemName=hollowtree.vue-snippets)\n\nFor example, it can be quite tedious to repeat the syntax for functional components in React every time you create a new component. Using the [ES7 React/Redux/GraphQL/React-Native snippets](https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets) extension, you can use the shorthand `rfc` for functional components and hit enter.\n\n![React-Redux-GraphQL-Extension](/uploads/react-redux-graphql-extension.gif 'react redux graphql extension')\n\n## 4. Better Comments\n\n[Better Comments](https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments) is designed to help you write more human-friendly comments in your code.\n\nClear comments are beneficial not only for someone going through your code but also for you. It’s quite common for developers to get lost in their own code when visiting it after some time. Having descriptive comments can save a lot of time for you and your team.\n\nWith the Better Comments VS Code extension, you can categorize your annotations into alerts, queries, to-dos, highlights, etc.\n\nYou can use either of the following characters after double forward slash (`//`):\n\n- `*` for highlighted text\n- `!` for errors and warnings\n- `?` for queries and questions\n- `//` for strikethrough\n- `TODO` for to-dos\n\n![Better-Comments-VS-Code-Extension-Example](/uploads/better-comments-vs-code-extension-example.png 'better comments vs code extension example')\n\n## 5. Markdown All in One\n\n[Markdown All in One](https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one) is a single extension that takes care of all your markdown needs, such as auto-preview, shortcuts, autocomplete, etc.\n\nSince its release in 2004, Markdown has become one of the most popular and preferred markup languages. Technical writers worldwide widely use Markdown for articles, blogs, documentation, etc., because of its lightweight simplicity and cross-platform usage. Its popularity has given rise to other variants of Markdown, such as [GitHub Flavored Markdown](https://github.github.com/gfm/), [MDX](https://mdxjs.com/), etc.\n\nFor example, to bold some text in Markdown, you can select that text and use the shortcut `Ctrl + B` to increase your productivity.\n\n![Markdown-All-In-One-Extension](/uploads/markdown-all-in-one-extension.gif 'markdown all in one extension')\n\n## 6. Icons\n\nHaving descriptive icons can help you differentiate between files and folders. Icons also make development more fun.\n\nHere is a comparison between two VS Code tabs. One has icons, the other does not.\n\n![VS-Code-Tabs-Comparison](/uploads/vs-code-tabs-comparison.png 'vs code tabs comparison')\n\nThere are many icons extension that you can choose from. Popular icon collections include:\n\n- [vscode-icons](https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons)\n- [Material Icon Theme](https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme)\n- [Material Theme Icons](https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme-icons)\n- [Simple icons](https://marketplace.visualstudio.com/items?itemName=LaurentTreguier.vscode-simple-icons)\n\n## 7. Prettier\n\n[Prettier](https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode) is an opinionated code formatter. With more than 38.5k stars on GitHub, it’s one of the most popular code formatters available. Having consistent formatting and styling across your code can save a lot of time, especially when collaborating with other developers.\n\nConsider the following code block:\n\n![Prettier-Demo-Code-Example](/uploads/prettier-code-formatter-example.png 'prettier demo code example')\n\nYou may notice a handful of formatting issues with this code, including:\n\n- A mix of single and double-quotes\n- Irregular use of semicolons (`;`)\n- Improper indentation of the console statement on line 6\n\nHere’s how Prettier would format and fix the above code:\n\n![prettier format](/uploads/prettier-formatted-code-example.gif 'prettier example')\n\nThis extension supports [Prettier plugins](https://prettier.io/docs/en/plugins.html) when you’re using a locally resolved version of Prettier.\\\nYou can configure this extension further to suit your formatting needs and even trigger it with autosave.\n\n## 8. Import Cost\n\n[Import Cost](https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost) is an extension that shows you an estimated size of the import package in your code. When working on a project, it’s important not to compromise the user experience by importing heft packages. One way to avoid this is to keep track of the size of additional dependencies in your code.\n\n![Import-Cost-Extension-Example](/uploads/import-cost-extension-example.png 'import cost extension example')\n\nWhen the import is too large, Import Cost warns you by displaying the size in red. You can configure what size should be considered small, medium, or large.\n\n## 9. Tabnine\n\n[Tabnine](https://www.tabnine.com/) was created to help developers **code faster, reduce mistakes, and discover best coding practices** using Machine Learning. Tabnine's powerful Artificial Intelligence assistant works right where you are, in the comfort of your IDE. Tabnine studies publicly shared code and uses AI deep learning to predict one-click code completions\n\nDeep TabNine is built upon [GPT-2,](https://medium.com/syncedreview/openai-guards-its-ml-model-code-data-to-thwart-malicious-usage-d9f7e9c43cd0) a large transformer-based language model that can generate realistic paragraphs of text. The model, developed by San Francisco-based research company OpenAI, demonstrates compelling performance across a range of language tasks such as machine translation, question answering, reading comprehension and summarization.\n\nUnlike other code completion plug-ins, Deep TabNine is automatically compiled based on a programmer’s past usage and habits, and includes the probability of the different predictions it provides. If a similar code appears in previous projects, Deep TabNine will also display the address directly in the completion candidate box.\n\nTabnine works with all major programming languages including JavaScript, Python, TypeScript, PHP, C/C++, HTML/CSS, Go, Java, Ruby, C#, Rust, SQL, Bash, Kotlin, Julia, Lua, OCaml, Perl, Haskell, and React.\n\nThe TabNine website with install instructions and other information is [here](https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode).\n\n![Profile-Switcher-Content-Creation-Default-Example](/uploads/deep_tabnine.0.gif 'Profile switcher content creation defaul example')\n\n## 10. GitLens\n\n[GitLens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens) is an [open-source](https://github.com/eamodio/vscode-gitlens) extension for Visual Studio Code created, developed, and maintained by [Eric Amodio](https://www.amod.io/). It combines the capabilities of Git with VS Code.\n\nOne of the best features of this extension is the ability to visualize code authorship via Git blame annotations and code lens.\n\nBelow is a screenshot from the [React example](https://finalspaceapi.com/docs/react) docs of the [Final Space API](https://finalspaceapi.com/).\n\n![React-Example-Final-Space-Api](/uploads/react-example-final-space-api.png 'react example final space api')\n\nHere’s an expanded version of the code authorship:\n\n![Code-Authorship-Expanded-Version](/uploads/code-authorship-expanded-version.png 'code authorship expanded version')\n\nThis is just one of the many [features of GitLens extension](https://gitlens.amod.io/#features). Other notable features include:\n\n- [R](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#revision-navigation-) [revision navigation](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#revision-navigation) (backward and forward) through the history of a file\n- An unobtrusive [current line blame](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#current-line-blame-) annotation at the end of the line showing the commit\n- A [status bar blame](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#status-bar-blame-) annotation showing the commit and author who last modified the current line\n\n## Conclusion\n\nIn this guide, we reviewed 10 VS Code extensions that can help make you a better programmer and boost your productivity.\n\nThere are many more VS Code extensions that you can explore for all kinds of use cases. Here are a few other extensions worth checking out:\n\n- [Live Server](https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer)\n- [Path Intellisense](https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense)\n- [Code Spell Checker](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker)\n- [Better Align](https://marketplace.visualstudio.com/items?itemName=wwm.better-align)\n- [Quokka.js](https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode)\n- [indent-rainbow](https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow)\n- [Profile Switcher](https://marketplace.visualstudio.com/items?itemName=aaronpowell.vscode-profile-switcher)\n";
				}
				function compiledContent$d() {
					return html$d;
				}
				function getHeadings$d() {
					return [{"depth":2,"slug":"1-auto-rename-tag","text":"1. Auto Rename Tag"},{"depth":2,"slug":"2-bracket-pair-colorizer","text":"2. Bracket Pair Colorizer"},{"depth":2,"slug":"3-snippets","text":"3. Snippets"},{"depth":2,"slug":"4-better-comments","text":"4. Better Comments"},{"depth":2,"slug":"5-markdown-all-in-one","text":"5. Markdown All in One"},{"depth":2,"slug":"6-icons","text":"6. Icons"},{"depth":2,"slug":"7-prettier","text":"7. Prettier"},{"depth":2,"slug":"8-import-cost","text":"8. Import Cost"},{"depth":2,"slug":"9-tabnine","text":"9. Tabnine"},{"depth":2,"slug":"10-gitlens","text":"10. GitLens"},{"depth":2,"slug":"conclusion","text":"Conclusion"}];
				}
				function getHeaders$d() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$d();
				}				async function Content$d() {
					const { layout, ...content } = frontmatter$d;
					content.file = file$d;
					content.url = url$d;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$d });
					return createVNode($$BlogPostTemplate, {
									file: file$d,
									url: url$d,
									content,
									frontmatter: content,
									headings: getHeadings$d(),
									rawContent: rawContent$d,
									compiledContent: compiledContent$d,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$d[Symbol.for('astro.needsHeadRendering')] = false;

const _page5 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$d,
	file: file$d,
	url: url$d,
	rawContent: rawContent$d,
	compiledContent: compiledContent$d,
	getHeadings: getHeadings$d,
	getHeaders: getHeaders$d,
	Content: Content$d,
	default: Content$d
}, Symbol.toStringTag, { value: 'Module' }));

const html$c = "<p><img src=\"/uploads/configure-proxy-global-on-linux/portada-proxy.jpg\" alt=\"background\"></p>\n<p>In GNU/Linux operating systems when we are behind a proxy server, it can become a bit cumbersome to use programs that do not have their own proxy configuration or commands like <strong>apt-get</strong>, or we simply want to configure it globally. Many of the GNU/Linux distributions use different package managers which are configured in different ways, in addition there are many programs that need their specifications to configure the Internet output through a proxy server. All this process becomes very cumbersome to do in environments where you use a proxy with authentication and it changes from time to time or you use a laptop where you can constantly connect to networks where proxy is not used. Imagine changing all the settings every time you change networks.</p>\n<p><img src=\"/uploads/configure-proxy-global-on-linux/proxy-schema.png\" alt=\"Proxy schema\" title=\"Configure proxy global on linux\"></p>\n<p>Here are some examples of how to configure proxy in some GNU/Linux distros</p>\n<p><img src=\"/uploads/configure-proxy-global-on-linux/proxy-global.jpg\" alt=\"Proxy global\"></p>\n<h2 id=\"terminal-proxy-settings\">Terminal Proxy Settings</h2>\n<p>If we want to use a proxy temporarily in the terminal, we execute the following commands:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FF7B72\">export</span><span style=\"color: #C9D1D9\"> http_proxy=http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FF7B72\">export</span><span style=\"color: #C9D1D9\"> https_proxy=$http_proxy</span></span></code></pre>\n<h2 id=\"setting-environment-variables-for-debianubuntu-family-distributions\">Setting environment variables for Debian|Ubuntu family distributions:</h2>\n<p>Edit file <code>/etc/environment</code> with your favorite text editor.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    sudo vim /etc/environment</span></span></code></pre>\n<p>We add the following lines to the file, you must duplicate them in upper and lower case because (unfortunately) some programs only search for one or the other:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">    http_proxy http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    https_proxy http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    ftp_proxy http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    no_proxy localhost,127.0.0.1,localaddress,.localdomain.com</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    #Duplicated in uppercase</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    HTTP_PROXY http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    HTTPS_PROXY http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    FTP_PROXY http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    NO_PROXY localhost,127.0.0.1,localaddress,.localdomain.com</span></span></code></pre>\n<h2 id=\"setting-environment-variables-for-distributions-of-the-redhatfedoracentos-family\">Setting environment variables for distributions of the RedHat|Fedora|Centos family:</h2>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    sudo vim /etc/profile.d/proxy.sh</span></span></code></pre>\n<p>We modify the necessary parameters</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">    export http_proxy=\"http://username:password@proxyserver:puerto/\"</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    export https_proxy=\"http://username:password@proxyserver:puerto/\"</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    export ftp_proxy=\"http://username:password@proxyserver:puerto/\"</span></span></code></pre>\n<h2 id=\"proxy-settings-for-apt-get-apt-aptitude\">Proxy settings for apt-get, apt, aptitude:</h2>\n<p>We create or edit file <code>/etc/apt/apt.conf</code></p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    sudo vim /etc/apt/apt.conf</span></span></code></pre>\n<p>We add the following lines:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">    Acquire::http::Proxy \"http://username:password@proxyserver:puerto\";</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    Acquire::https::Proxy \"http://username:password@proxyserver:puerto\";</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    Acquire::ftp::Proxy \"http://username:password@proxyserver:puerto\";</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    #En caso de tener un repo local para el que no necesitemos proxy</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    Acquire::http::Proxy {</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    repositorio.localdomain.com DIRECT;</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    repositorio2.localdomain.com DIRECT;</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    };</span></span></code></pre>\n<h2 id=\"proxy-settings-for-yum\">Proxy settings for yum:</h2>\n<p>Edit file <code>/etc/yum.conf</code></p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">    # proxy server address and port</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    proxy=http://proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    # user and password</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    proxy_username=usuario</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    proxy_password=contraseña</span></span></code></pre>\n<h2 id=\"proxy-settings-for-pacman\">Proxy settings for pacman:</h2>\n<p>We edit the file <code>/etc/pacman.conf</code> and we must uncomment <code>XferCommand</code> as follows:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">    XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u</span></span></code></pre>\n<p><img src=\"/uploads/configure-proxy-global-on-linux/pacman.conf.png\" alt=\"pacman.conf.png\"></p>\n<p>We save the changes and proceed to edit the configuration file for <code>wget</code>, a tool used to download packages.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    sudo vim /etc/wgetrc</span></span></code></pre>\n<p>We edit the configuration file <code>/etc/wgetrc</code>, look for the following lines and uncomment or add them to the end of the file.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    https_proxy = http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    http_proxy = http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    ftp_proxy = http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    use_proxy = on</span></span></code></pre>\n<h2 id=\"proxy-configuration-for-nodejs-npm\">Proxy configuration for nodejs (npm)</h2>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    npm config </span><span style=\"color: #79C0FF\">set</span><span style=\"color: #C9D1D9\"> proxy http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    npm config </span><span style=\"color: #79C0FF\">set</span><span style=\"color: #C9D1D9\"> https-proxy http://username:password@proxyserver:puerto</span></span></code></pre>\n<h2 id=\"proxy-configuration-for-git\">Proxy configuration for Git</h2>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    git config --global http.proxy http//proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    git config --global https.proxy https//proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #8B949E\"># In case we have a direct connection and we need to remove the proxy settings from git</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    git config --global --unset http.proxy</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    git config --global --unset https.proxy</span></span></code></pre>\n<p>As you can see, it is very complex to constantly maintain the configuration of a proxy on your pc, but luckily there are other options that allow you to configure a proxy globally to the entire operating system. In systems such as Windows or MacOS there are tools such as Proxifier, ProxyCap among others that facilitate access to the internet through a proxy, on the other hand GNU/Linux operating systems have alternatives to these programs like the ones listed below.</p>\n<h1 id=\"redsock\">Redsock</h1>\n<p><a href=\"https://github.com/darkk/redsocks\">Redsock</a> is a tool that allows you to redirect any TCP connection to SOCKS or HTTPS proxy using your firewall, so the redirection can be system-wide or network-wide . This tool is very useful because it allows us with a single configuration file to be able to use the connection through the proxy throughout the operating system.</p>\n<h2 id=\"packages-for-the-different-linux-distributions\">Packages for the different linux distributions</h2>\n<hr>\n<ul>\n<li>Archlinux/Manjaro: <a href=\"https://aur.archlinux.org/packages/redsocks-git\">redsocks-git</a></li>\n<li>Debian: <a href=\"http://packages.debian.org/search?searchon=names&#x26;keywords=redsocks\">redsocks</a></li>\n<li>Gentoo (zugaina overlay): <a href=\"http://gpo.zugaina.org/net-proxy/redsocks\">redsocks</a></li>\n<li>Gentoo: <a href=\"https://packages.gentoo.org/packages/net-proxy/redsocks\">redsocks</a></li>\n<li>Ubuntu: <a href=\"http://packages.ubuntu.com/search?searchon=names&#x26;keywords=redsocks\">redsocks</a></li>\n</ul>\n<h2 id=\"manual-compilation-of-redsock\">Manual compilation of redsock</h2>\n<p>To compile redsock we need to clone its repository on GitHub <a href=\"https://github.com/darkk/redsocks\">https://github.com/darkk/redsocks</a> and follow the instructions in the README.md. ** <a href=\"http://libevent.org/\">libevent-2.0.x</a>** must be installed on our system, as well as the <code>gcc</code> and<code>clang</code> compilers. Compilation is as easy as running <code>make</code> in the project’s root directory.</p>\n<h2 id=\"run-redsock\">Run redsock</h2>\n<p>Running redsock depends a lot on the distribution you are using and how the package installed redsock. The program has the following command line options:</p>\n<ul>\n<li><strong>-c</strong> specifies the path to the configuration file (<code>./redsocks.conf</code> is used by default)</li>\n<li><strong>-t</strong> this option checks the syntax of the configuration file.</li>\n<li><strong>-p</strong> set a file to write the <code>getpid()</code> where the following signals are specified: <code>SIGUSR1</code> dumps the list of connected clients to the registry,<code>SIGTERM</code> and <code>SIGINT</code> terminate the daemon, all active connections are closed.</li>\n</ul>\n<p>You can see an example of the configuration file in <a href=\"https://github.com/darkk/redsocks/blob/master/redsocks.conf.example\">redsocks.conf.example</a>.</p>\n<h3 id=\"iptables-example\">Iptables example</h3>\n<p>You have to build iptables with connection tracking and <code>REDIRECT</code> target.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">  # Create new chain</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -N REDSOCKS</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Ignore LANs and some other reserved addresses.</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # See http://en.wikipedia.org/wiki/Reserved_IP_addresses#Reserved_IPv4_addresses</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # and http://tools.ietf.org/html/rfc5735 for full list of reserved networks.</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 0.0.0.0/8 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 10.0.0.0/8 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 100.64.0.0/10 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 127.0.0.0/8 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 169.254.0.0/16 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 172.16.0.0/12 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 192.168.0.0/16 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 198.18.0.0/15 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 224.0.0.0/4 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 240.0.0.0/4 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Anything else should be redirected to port 12345</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -p tcp -j REDIRECT --to-ports 12345</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Any tcp connection made by `luser' should be redirected.</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A OUTPUT -p tcp -m owner --uid-owner luser -j REDSOCKS</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # You can also control that in more precise way using `gid-owner` from</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # iptables.</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# groupadd socksified</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# usermod --append --groups socksified luser</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A OUTPUT -p tcp -m owner --gid-owner socksified -j REDSOCKS</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Now you can launch your specific application with GID `socksified` and it</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # will be... socksified. See following commands (numbers may vary).</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Note: you may have to relogin to apply `usermod` changes.</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  luser$ id</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  uid=1000(luser) gid=1000(luser) groups=1000(luser),1001(socksified)</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  luser$ sg socksified -c id</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  uid=1000(luser) gid=1001(socksified) groups=1000(luser),1001(socksified)</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  luser$ sg socksified -c \"firefox\"</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # If you want to configure socksifying router, you should look at</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # doc/iptables-packet-flow.png, doc/iptables-packet-flow-ng.png and</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # https://en.wikipedia.org/wiki/File:Netfilter-packet-flow.svg</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Note, you should have proper `local_ip' value to get external packets with</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # redsocks, default 127.0.0.1 will not go. See iptables(8) manpage regarding</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # REDIRECT target for details.</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Depending on your network configuration iptables conf. may be as easy as:</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A PREROUTING --in-interface eth_int -p tcp -j REDSOCKS</span></span></code></pre>\n<p>Redsock is one of my favorite tools for configuring all my internet traffic through a proxy using the TCP protocol. Below I show you another more recent alternative that is very interesting and easy to configure.</p>\n<h1 id=\"proxifier-for-linux\">Proxifier-For-Linux</h1>\n<p>Proxifier-For-Linux is a tool that acts as an intermediary between the proxy server and client programs that need internet access. Proxifier works through proxy servers on behalf of the other programs. Proxifier acts as a global point to configure proxy rules, which will apply to all programs on the system. As I mentioned above it is a new project so currently it only has support for http proxies.</p>\n<p>As explained in the official <a href=\"https://github.com/m0hithreddy/Proxifier-For-Linux\">Proxifier-for-linux</a> repository, our operating system must have the following dependencies</p>\n<h2 id=\"dependencies\">Dependencies</h2>\n<p>Below is the list of dependencies required to compile and run Proxifier, as well as the installation depending on the operating system you use.</p>\n<h3 id=\"install-dependencies\">Install dependencies</h3>\n<p>To check if you already have the dependencies installed you can use the command <code>which &#x3C;package name></code>. Example <code>which autoconf</code> and if it returns the path, that dependency is already installed</p>\n<ul>\n<li><a href=\"https://github.com/autotools-mirror/autoconf\">autoconf</a> [sudo apt install autoconf]</li>\n<li><a href=\"https://github.com/autotools-mirror/automake\">automake</a> [sudo apt install automake]</li>\n<li><a href=\"https://github.com/autotools-mirror/libtool\">libtool</a> [sudo apt install libtool]</li>\n<li><a href=\"https://github.com/mvertes/txt2man\">txt2man</a> [sudo apt install txt2man]</li>\n</ul>\n<h2 id=\"download-proxifier\">Download Proxifier</h2>\n<p>Get the latest stable version of Proxifier by cloning the GitHub repository.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">git clone https://github.com/m0hithreddy/Proxifier-For-Linux.git </span><span style=\"color: #FF7B72\">&#x26;&#x26;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">cd</span><span style=\"color: #C9D1D9\"> Proxifier-For-Linux</span></span></code></pre>\n<h2 id=\"build-and-install\">Build and Install</h2>\n<p>After installing all the dependencies, get the Proxifier source code and inside the directory where the code is, run the following commands:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">autoreconf -vfi</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">./configure</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">make all</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">sudo make uninstall</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">sudo make install</span></span></code></pre>\n<h2 id=\"how-to-use-proxifier\">How to use Proxifier</h2>\n<p>The Proxifier service can be enabled by running the command:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">sudo systemctl daemon-reload </span><span style=\"color: #8B949E\"># Reload the service units</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">sudo systemctl start proxifier</span></span></code></pre>\n<p>For more information about Proxifier you can consult the help by executing the command <code>man proxifier</code>. The configuration file can be found in the path <code>/usr/local/etc/proxifier.conf</code> where you can specify your proxy settings.</p>\n<p>The next tool I want to show you is Proxychains</p>\n<h1 id=\"proxychains\">Proxychains</h1>\n<p><a href=\"https://github.com/haad/proxychains\">Proxychains-ng</a> is a proxy server that supports the HTTPs, SOCKS4 and SOCKS5 internet protocols and works on Unix-based platforms. It allows any TCP connection made by a program to follow a series of proxies (of the aforementioned protocols) to its destination. The list of proxies as well as the proxy selection strategy are defined beforehand.</p>\n<h2 id=\"install-proxychains\">Install proxychains</h2>\n<p>Proxychains is available with <a href=\"https://github.com/haad/proxychains/blob/master/www.pkgsrc.org\">pkgsrc</a> for everyone who uses it on Linux, NetBSD, FreeBSD, OpenBSD, DragonFlyBSD or Mac OS X You just need to install <a href=\"http://pkgsrc-wip.sourceforge.net/\">pkgsrc-wip</a> and run <code>make install</code> in the<code>wip/proxychains</code> directory</p>\n<h3 id=\"install-proxychains-from-source-code\">Install proxychains from source code</h3>\n<p>Clone the GitHub source code and run the following commands:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\"> git clone https://github.com/haad/proxychains.git </span><span style=\"color: #FF7B72\">&#x26;&#x26;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">cd</span><span style=\"color: #C9D1D9\"> proxychains</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> </span><span style=\"color: #8B949E\"># se necesita un compilador de C, preferiblemente gcc</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ./configure</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> make</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> sudo make install</span></span></code></pre>\n<h3 id=\"packages-for-the-different-linux-distributions-1\">Packages for the different linux distributions</h3>\n<hr>\n<ul>\n<li>Archlinux/Manjaro: <a href=\"https://www.archlinux.org/packages/community/x86_64/proxychains-ng/\">proxychains-ng/</a></li>\n<li>Debian: <a href=\"https://packages.debian.org/search?keywords=proxychains\">proxychains</a></li>\n<li>Gentoo: <a href=\"https://packages.gentoo.org/packages/net-proxy/proxychains\">proxychains</a></li>\n<li>Fedora: <a href=\"https://fedora.pkgs.org/32/fedora-x86_64/proxychains-ng-4.13-5.fc32.x86_64.rpm.html\">proxychains-ng</a></li>\n<li>Ubuntu: <a href=\"http://packages.ubuntu.com/search?searchon=names&#x26;keywords=proxychains\">proxychains</a></li>\n</ul>\n<h2 id=\"setting\">Setting</h2>\n<p>Proxychains looks for the settings in the following order:</p>\n<ul>\n<li>SOCKS5 proxy port in environment variable <strong>${PROXYCHAINS_SOCKS5}</strong> (if set, no further settings will be searched)</li>\n<li>File listed in the environment variable <strong>${PROXYCHAINS_CONF_FILE}</strong> or provided as an -f argument to the proxychains script or binary.</li>\n<li>./proxychains.conf</li>\n<li>$(HOME)/.proxychains/proxychains.conf</li>\n<li>/etc/proxychains.conf</li>\n</ul>\n<p>See more of the configuration in the file <code>/etc/proxychains.conf</code></p>\n<h3 id=\"example-of-how-to-configure-multiple-proxies\">Example of how to configure multiple proxies</h3>\n<p>At the end of the <code>/etc/proxychains.conf</code> file is the list where we can add our proxies. Proxy selection strategies vary between <code>dynamic_chain, strict_chain, round_robin_chain, random_chain</code> and only one can be uncommented.</p>\n<ul>\n<li>dynamic_chain: Dynamic - Each connection will be made through chained proxies, all proxies chained in the order listed, at least one proxy must be online to play chained (dead proxies are skipped) otherwise EINTR is returned to the application</li>\n<li>strict_chain: Strict: each connection will be made through chained proxies, all proxies chained in the order they appear in the list, all proxies must be online to play chain; otherwise, EINTR is returned to the application</li>\n<li>round_robin_chain: Round Robin: each connection will be made through chained proxies of length <code>chain_len</code>, all proxies chained in the order they appear in the list, at least one proxy must be online to play chain (dead proxies are skipped ). the start of the current proxy chain is the proxy after the last proxy in the previously invoked proxy chain. If the end of the proxy chain is reached while searching for proxies, start over from the beginning. Otherwise, EINTR is returned to the application. These semantics are not guaranteed in a multithreaded environment.</li>\n<li>random_chain: Random - Each connection will be made using a random proxy (or proxy chain, see <code>chain_len</code>) from the list.</li>\n</ul>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\"> [ProxyList]</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> # add proxy here ...</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> # meanwile</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> # defaults set to \"tor\"</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> socks4  127.0.0.1 9050</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> #psiphon proxy</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> http 127.0.0.1 52525</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> socks5 127.0.0.1 42552</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> #Otro Proxy</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> http 192.168.1.11 8080 user password</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> #Mobile proxy</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> http 192.168.44.244 3128 user password</span></span></code></pre>\n<p>Examples of use</p>\n<p>Run <code>proxychains &#x3C;programa a ejecutar a través de un proxy></code></p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">proxychains telnet targethost.com</span></span></code></pre>\n<p>In this example it will run <strong>telnet</strong> through proxy(or chained proxies) specified by <strong>proxychains.conf</strong></p>\n<p>Proxychains gives us a great advantage by being able to chain many proxies at the same time, which is used a lot in cybersecurity to hide the identity of the requests made. One of the disadvantages of proxychains is that it runs in the console, which is uncomfortable when we use programs with a graphical interface.</p>\n<p>The next one on the list is one of my favorites because it is a VPN that allows you to configure a global proxy for the entire operating system as well as mount a firewall on the pc.</p>\n<h1 id=\"windscribe\">Windscribe</h1>\n<p><a href=\"https://windscribe.com/?friend=abhyp2zr\">Windscribe</a> is a set of tools that allow you to block ad trackers and web beacons, restore access to blocked content, and help you protect your privacy online. There are two components:</p>\n<p>the VPN desktop application (Windows, MacOS and Linux) and the browser extension (Chrome, Edge, Firefox, Safari, …)</p>\n<p>The desktop application is a VPN (Virtual Private Network) client. Create an encrypted tunnel from your computer to the <a href=\"https://windscribe.com/?affid=abhyp2zr\">winscribe</a> servers, and all your activity is sent through the tunnel. This has two advantages:</p>\n<ol>\n<li>The IP address of your Internet Service Provider (ISP) is masked, so any website you visit or any application you use (Skype, email providers, BitTorrent, etc.) will see our IP address shared by thousands of persons.</li>\n<li>Your Internet Service Provider cannot see what you are doing online. This is much more important than you think.</li>\n</ol>\n<p>The first thing to do is create an account at <a href=\"https://windscribe.com/?friend=abhyp2zr\">Windscribe</a> by registering <a href=\"https://windscribe.com/?friend=abhyp2zr\">here</a>. Windscribe gives us 2GB of free monthly consumption, but if we confirm our email this increases 5GB, you can also increase up to 15GB per month if you create a post on twitter by clicking the <strong><em>Tweet4Data</em></strong> button in your account settings.</p>\n<p><img src=\"/uploads/configure-proxy-global-on-linux/more-data.png\" alt=\"More data\"></p>\n<h2 id=\"install-windscribe\">Install Windscribe</h2>\n<p>After registering, the desktop client or the extension for your favorite browser is downloaded in the <a href=\"https://windscribe.com/?friend=abhyp2zr\">Downloads</a> session. Follow the instructions in the download link depending on the operating system you use.</p>\n<h2 id=\"configuring-the-windscribe-client-for-linux\">Configuring the Windscribe Client for Linux</h2>\n<p>The first thing we have to do is start the windscribe service for this we execute the command:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    sudo systemctl start windscribe</span></span></code></pre>\n<p>Once the windscribe service is running, we must configure the proxy by executing the command <code>windscribe proxy --host &#x3C;proxy address> --port &#x3C;port> --user &#x3C;user> --password &#x3C;password></code>:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">windscribe proxy --host 19.18.4.54 --port 3128 --user acosta --password </span><span style=\"color: #A5D6FF\">\"super password\"</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">windscribe proxy on</span></span></code></pre>\n<p>With the previous commands we configure and activate windscribe to use our proxy. Now when to connect all the applications go to the internet through Windscribe we execute the command:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">windscribe connect best </span><span style=\"color: #8B949E\"># Nos conecta al servidor de windscribe con mejor rendimiento</span></span></code></pre>\n<p>To consult the help of windscribe we can execute the command <code>windscribe --help</code></p>\n<p><img src=\"/uploads/configure-proxy-global-on-linux/windscribe-help.png\" alt=\"Windscribe Help\"></p>\n<p>These are some options that exist to configure Internet accesses through a proxy in GNU-Linux operating systems. Of all the variants shown in this article my favorite without a doubt is windscribe for all the facilities it offers. I hope it helps you in case you want to have a proxy configured globally in linux.</p>";

				const frontmatter$c = {"minutesRead":12,"layout":"../../components/templates/BlogPostTemplate.astro","title":"Configure global proxy on linux","description":"In this article I share some tips to configure the internet through a global proxy in GNU/Linux operating systems.","date":"2020-12-06T00:00:00.000Z","cover":"/uploads/configure-proxy-global-on-linux/portada-proxy.jpg","author":"Yuniel Acosta","lang":"en","tags":["Proxy","Linux","Windscribe","Proxifier","VPN","Redsock","Proxychains"],"categories":["Tooling"],"draft":false};
				const file$c = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/configure-proxy-global-on-linux.md";
				const url$c = "/blog/configure-proxy-global-on-linux";
				function rawContent$c() {
					return "\n![background](/uploads/configure-proxy-global-on-linux/portada-proxy.jpg)\n\nIn GNU/Linux operating systems when we are behind a proxy server, it can become a bit cumbersome to use programs that do not have their own proxy configuration or commands like **apt-get**, or we simply want to configure it globally. Many of the GNU/Linux distributions use different package managers which are configured in different ways, in addition there are many programs that need their specifications to configure the Internet output through a proxy server. All this process becomes very cumbersome to do in environments where you use a proxy with authentication and it changes from time to time or you use a laptop where you can constantly connect to networks where proxy is not used. Imagine changing all the settings every time you change networks.\n\n![Proxy schema](/uploads/configure-proxy-global-on-linux/proxy-schema.png 'Configure proxy global on linux')\n\nHere are some examples of how to configure proxy in some GNU/Linux distros\n\n![Proxy global](/uploads/configure-proxy-global-on-linux/proxy-global.jpg)\n\n## Terminal Proxy Settings\n\nIf we want to use a proxy temporarily in the terminal, we execute the following commands:\n\n```shell\n    export http_proxy=http://username:password@proxyserver:puerto\n    export https_proxy=$http_proxy\n```\n\n## Setting environment variables for Debian|Ubuntu family distributions:\n\nEdit file `/etc/environment` with your favorite text editor.\n\n```shell\n    sudo vim /etc/environment\n```\n\nWe add the following lines to the file, you must duplicate them in upper and lower case because (unfortunately) some programs only search for one or the other:\n\n```text\n    http_proxy http://username:password@proxyserver:puerto\n    https_proxy http://username:password@proxyserver:puerto\n    ftp_proxy http://username:password@proxyserver:puerto\n    no_proxy localhost,127.0.0.1,localaddress,.localdomain.com\n    #Duplicated in uppercase\n    HTTP_PROXY http://username:password@proxyserver:puerto\n    HTTPS_PROXY http://username:password@proxyserver:puerto\n    FTP_PROXY http://username:password@proxyserver:puerto\n    NO_PROXY localhost,127.0.0.1,localaddress,.localdomain.com\n```\n\n## Setting environment variables for distributions of the RedHat|Fedora|Centos family:\n\n```shell\n    sudo vim /etc/profile.d/proxy.sh\n```\n\nWe modify the necessary parameters\n\n```text\n    export http_proxy=\"http://username:password@proxyserver:puerto/\"\n    export https_proxy=\"http://username:password@proxyserver:puerto/\"\n    export ftp_proxy=\"http://username:password@proxyserver:puerto/\"\n```\n\n## Proxy settings for apt-get, apt, aptitude:\n\nWe create or edit file `/etc/apt/apt.conf`\n\n```shell\n    sudo vim /etc/apt/apt.conf\n```\n\nWe add the following lines:\n\n```text\n    Acquire::http::Proxy \"http://username:password@proxyserver:puerto\";\n    Acquire::https::Proxy \"http://username:password@proxyserver:puerto\";\n    Acquire::ftp::Proxy \"http://username:password@proxyserver:puerto\";\n    #En caso de tener un repo local para el que no necesitemos proxy\n    Acquire::http::Proxy {\n    repositorio.localdomain.com DIRECT;\n    repositorio2.localdomain.com DIRECT;\n    };\n```\n\n## Proxy settings for yum:\n\nEdit file `/etc/yum.conf`\n\n```text\n    # proxy server address and port\n    proxy=http://proxyserver:puerto\n    # user and password\n    proxy_username=usuario\n    proxy_password=contraseña\n```\n\n## Proxy settings for pacman:\n\nWe edit the file `/etc/pacman.conf` and we must uncomment `XferCommand` as follows:\n\n```text\n    XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u\n```\n\n![pacman.conf.png](/uploads/configure-proxy-global-on-linux/pacman.conf.png)\n\nWe save the changes and proceed to edit the configuration file for `wget`, a tool used to download packages.\n\n```shell\n    sudo vim /etc/wgetrc\n```\n\nWe edit the configuration file `/etc/wgetrc`, look for the following lines and uncomment or add them to the end of the file.\n\n```shell\n    https_proxy = http://username:password@proxyserver:puerto\n    http_proxy = http://username:password@proxyserver:puerto\n    ftp_proxy = http://username:password@proxyserver:puerto\n    use_proxy = on\n```\n\n## Proxy configuration for nodejs (npm)\n\n```shell\n    npm config set proxy http://username:password@proxyserver:puerto\n    npm config set https-proxy http://username:password@proxyserver:puerto\n```\n\n## Proxy configuration for Git\n\n```shell\n    git config --global http.proxy http//proxyserver:puerto\n    git config --global https.proxy https//proxyserver:puerto\n    # In case we have a direct connection and we need to remove the proxy settings from git\n    git config --global --unset http.proxy\n    git config --global --unset https.proxy\n```\n\nAs you can see, it is very complex to constantly maintain the configuration of a proxy on your pc, but luckily there are other options that allow you to configure a proxy globally to the entire operating system. In systems such as Windows or MacOS there are tools such as Proxifier, ProxyCap among others that facilitate access to the internet through a proxy, on the other hand GNU/Linux operating systems have alternatives to these programs like the ones listed below.\n\n# Redsock\n\n[Redsock](https://github.com/darkk/redsocks) is a tool that allows you to redirect any TCP connection to SOCKS or HTTPS proxy using your firewall, so the redirection can be system-wide or network-wide . This tool is very useful because it allows us with a single configuration file to be able to use the connection through the proxy throughout the operating system.\n\n## Packages for the different linux distributions\n\n---\n\n- Archlinux/Manjaro: [redsocks-git](https://aur.archlinux.org/packages/redsocks-git)\n- Debian: [redsocks](http://packages.debian.org/search?searchon=names&keywords=redsocks)\n- Gentoo (zugaina overlay): [redsocks](http://gpo.zugaina.org/net-proxy/redsocks)\n- Gentoo: [redsocks](https://packages.gentoo.org/packages/net-proxy/redsocks)\n- Ubuntu: [redsocks](http://packages.ubuntu.com/search?searchon=names&keywords=redsocks)\n\n## Manual compilation of redsock\n\nTo compile redsock we need to clone its repository on GitHub <https://github.com/darkk/redsocks> and follow the instructions in the README.md. ** [libevent-2.0.x](http://libevent.org/)** must be installed on our system, as well as the `gcc` and`clang` compilers. Compilation is as easy as running `make` in the project's root directory.\n\n## Run redsock\n\nRunning redsock depends a lot on the distribution you are using and how the package installed redsock. The program has the following command line options:\n\n- **\\-c** specifies the path to the configuration file (`./redsocks.conf` is used by default)\n- **\\-t** this option checks the syntax of the configuration file.\n- **\\-p** set a file to write the `getpid()` where the following signals are specified: `SIGUSR1` dumps the list of connected clients to the registry,`SIGTERM` and `SIGINT` terminate the daemon, all active connections are closed.\n\nYou can see an example of the configuration file in [redsocks.conf.example](https://github.com/darkk/redsocks/blob/master/redsocks.conf.example).\n\n### Iptables example\n\nYou have to build iptables with connection tracking and `REDIRECT` target.\n\n```text\n  # Create new chain\n  root# iptables -t nat -N REDSOCKS\n\n  # Ignore LANs and some other reserved addresses.\n  # See http://en.wikipedia.org/wiki/Reserved_IP_addresses#Reserved_IPv4_addresses\n  # and http://tools.ietf.org/html/rfc5735 for full list of reserved networks.\n  root# iptables -t nat -A REDSOCKS -d 0.0.0.0/8 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 10.0.0.0/8 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 100.64.0.0/10 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 127.0.0.0/8 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 169.254.0.0/16 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 172.16.0.0/12 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 192.168.0.0/16 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 198.18.0.0/15 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 224.0.0.0/4 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 240.0.0.0/4 -j RETURN\n\n  # Anything else should be redirected to port 12345\n  root# iptables -t nat -A REDSOCKS -p tcp -j REDIRECT --to-ports 12345\n\n  # Any tcp connection made by `luser' should be redirected.\n  root# iptables -t nat -A OUTPUT -p tcp -m owner --uid-owner luser -j REDSOCKS\n\n  # You can also control that in more precise way using `gid-owner` from\n  # iptables.\n  root# groupadd socksified\n  root# usermod --append --groups socksified luser\n  root# iptables -t nat -A OUTPUT -p tcp -m owner --gid-owner socksified -j REDSOCKS\n\n  # Now you can launch your specific application with GID `socksified` and it\n  # will be... socksified. See following commands (numbers may vary).\n  # Note: you may have to relogin to apply `usermod` changes.\n  luser$ id\n  uid=1000(luser) gid=1000(luser) groups=1000(luser),1001(socksified)\n  luser$ sg socksified -c id\n  uid=1000(luser) gid=1001(socksified) groups=1000(luser),1001(socksified)\n  luser$ sg socksified -c \"firefox\"\n\n  # If you want to configure socksifying router, you should look at\n  # doc/iptables-packet-flow.png, doc/iptables-packet-flow-ng.png and\n  # https://en.wikipedia.org/wiki/File:Netfilter-packet-flow.svg\n  # Note, you should have proper `local_ip' value to get external packets with\n  # redsocks, default 127.0.0.1 will not go. See iptables(8) manpage regarding\n  # REDIRECT target for details.\n  # Depending on your network configuration iptables conf. may be as easy as:\n  root# iptables -t nat -A PREROUTING --in-interface eth_int -p tcp -j REDSOCKS\n```\n\nRedsock is one of my favorite tools for configuring all my internet traffic through a proxy using the TCP protocol. Below I show you another more recent alternative that is very interesting and easy to configure.\n\n# Proxifier-For-Linux\n\nProxifier-For-Linux is a tool that acts as an intermediary between the proxy server and client programs that need internet access. Proxifier works through proxy servers on behalf of the other programs. Proxifier acts as a global point to configure proxy rules, which will apply to all programs on the system. As I mentioned above it is a new project so currently it only has support for http proxies.\n\nAs explained in the official [Proxifier-for-linux](https://github.com/m0hithreddy/Proxifier-For-Linux) repository, our operating system must have the following dependencies\n\n## Dependencies\n\nBelow is the list of dependencies required to compile and run Proxifier, as well as the installation depending on the operating system you use.\n\n### Install dependencies\n\nTo check if you already have the dependencies installed you can use the command `which <package name>`. Example `which autoconf` and if it returns the path, that dependency is already installed\n\n- [autoconf](https://github.com/autotools-mirror/autoconf) \\[sudo apt install autoconf]\n- [automake](https://github.com/autotools-mirror/automake) \\[sudo apt install automake]\n- [libtool](https://github.com/autotools-mirror/libtool) \\[sudo apt install libtool]\n- [txt2man](https://github.com/mvertes/txt2man) \\[sudo apt install txt2man]\n\n## Download Proxifier\n\nGet the latest stable version of Proxifier by cloning the GitHub repository.\n\n```shell\ngit clone https://github.com/m0hithreddy/Proxifier-For-Linux.git && cd Proxifier-For-Linux\n```\n\n## Build and Install\n\nAfter installing all the dependencies, get the Proxifier source code and inside the directory where the code is, run the following commands:\n\n```shell\nautoreconf -vfi\n./configure\nmake all\nsudo make uninstall\nsudo make install\n```\n\n## How to use Proxifier\n\nThe Proxifier service can be enabled by running the command:\n\n```shell\nsudo systemctl daemon-reload # Reload the service units\nsudo systemctl start proxifier\n```\n\nFor more information about Proxifier you can consult the help by executing the command `man proxifier`. The configuration file can be found in the path `/usr/local/etc/proxifier.conf` where you can specify your proxy settings.\n\nThe next tool I want to show you is Proxychains\n\n# Proxychains\n\n[Proxychains-ng](https://github.com/haad/proxychains) is a proxy server that supports the HTTPs, SOCKS4 and SOCKS5 internet protocols and works on Unix-based platforms. It allows any TCP connection made by a program to follow a series of proxies (of the aforementioned protocols) to its destination. The list of proxies as well as the proxy selection strategy are defined beforehand.\n\n## Install proxychains\n\nProxychains is available with [pkgsrc](https://github.com/haad/proxychains/blob/master/www.pkgsrc.org) for everyone who uses it on Linux, NetBSD, FreeBSD, OpenBSD, DragonFlyBSD or Mac OS X You just need to install [pkgsrc-wip](http://pkgsrc-wip.sourceforge.net/) and run `make install` in the`wip/proxychains` directory\n\n### Install proxychains from source code\n\nClone the GitHub source code and run the following commands:\n\n```shell\n git clone https://github.com/haad/proxychains.git && cd proxychains\n # se necesita un compilador de C, preferiblemente gcc\n ./configure\n make\n sudo make install\n```\n\n### Packages for the different linux distributions\n\n---\n\n- Archlinux/Manjaro: [proxychains-ng/](https://www.archlinux.org/packages/community/x86_64/proxychains-ng/)\n- Debian: [proxychains](https://packages.debian.org/search?keywords=proxychains)\n- Gentoo: [proxychains](https://packages.gentoo.org/packages/net-proxy/proxychains)\n- Fedora: [proxychains-ng](https://fedora.pkgs.org/32/fedora-x86_64/proxychains-ng-4.13-5.fc32.x86_64.rpm.html)\n- Ubuntu: [proxychains](http://packages.ubuntu.com/search?searchon=names&keywords=proxychains)\n\n## Setting\n\nProxychains looks for the settings in the following order:\n\n- SOCKS5 proxy port in environment variable **${PROXYCHAINS_SOCKS5}** (if set, no further settings will be searched)\n- File listed in the environment variable **${PROXYCHAINS_CONF_FILE}** or provided as an -f argument to the proxychains script or binary.\n- ./proxychains.conf\n- $(HOME)/.proxychains/proxychains.conf\n- /etc/proxychains.conf\n\nSee more of the configuration in the file `/etc/proxychains.conf`\n\n### Example of how to configure multiple proxies\n\nAt the end of the `/etc/proxychains.conf` file is the list where we can add our proxies. Proxy selection strategies vary between `dynamic_chain, strict_chain, round_robin_chain, random_chain` and only one can be uncommented.\n\n- dynamic_chain: Dynamic - Each connection will be made through chained proxies, all proxies chained in the order listed, at least one proxy must be online to play chained (dead proxies are skipped) otherwise EINTR is returned to the application\n- strict_chain: Strict: each connection will be made through chained proxies, all proxies chained in the order they appear in the list, all proxies must be online to play chain; otherwise, EINTR is returned to the application\n- round_robin_chain: Round Robin: each connection will be made through chained proxies of length `chain_len`, all proxies chained in the order they appear in the list, at least one proxy must be online to play chain (dead proxies are skipped ). the start of the current proxy chain is the proxy after the last proxy in the previously invoked proxy chain. If the end of the proxy chain is reached while searching for proxies, start over from the beginning. Otherwise, EINTR is returned to the application. These semantics are not guaranteed in a multithreaded environment.\n- random_chain: Random - Each connection will be made using a random proxy (or proxy chain, see `chain_len`) from the list.\n\n```text\n [ProxyList]\n # add proxy here ...\n # meanwile\n # defaults set to \"tor\"\n socks4  127.0.0.1 9050\n #psiphon proxy\n http 127.0.0.1 52525\n socks5 127.0.0.1 42552\n #Otro Proxy\n http 192.168.1.11 8080 user password\n #Mobile proxy\n http 192.168.44.244 3128 user password\n```\n\nExamples of use\n\nRun `proxychains <programa a ejecutar a través de un proxy>`\n\n```shell\nproxychains telnet targethost.com\n```\n\nIn this example it will run **telnet** through proxy(or chained proxies) specified by **proxychains.conf**\n\nProxychains gives us a great advantage by being able to chain many proxies at the same time, which is used a lot in cybersecurity to hide the identity of the requests made. One of the disadvantages of proxychains is that it runs in the console, which is uncomfortable when we use programs with a graphical interface.\n\nThe next one on the list is one of my favorites because it is a VPN that allows you to configure a global proxy for the entire operating system as well as mount a firewall on the pc.\n\n# Windscribe\n\n[Windscribe](https://windscribe.com/?friend=abhyp2zr) is a set of tools that allow you to block ad trackers and web beacons, restore access to blocked content, and help you protect your privacy online. There are two components:\n\nthe VPN desktop application (Windows, MacOS and Linux) and the browser extension (Chrome, Edge, Firefox, Safari, ...)\n\nThe desktop application is a VPN (Virtual Private Network) client. Create an encrypted tunnel from your computer to the [winscribe](https://windscribe.com/?affid=abhyp2zr) servers, and all your activity is sent through the tunnel. This has two advantages:\n\n1. The IP address of your Internet Service Provider (ISP) is masked, so any website you visit or any application you use (Skype, email providers, BitTorrent, etc.) will see our IP address shared by thousands of persons.\n2. Your Internet Service Provider cannot see what you are doing online. This is much more important than you think.\n\nThe first thing to do is create an account at [Windscribe](https://windscribe.com/?friend=abhyp2zr) by registering [here](https://windscribe.com/?friend=abhyp2zr). Windscribe gives us 2GB of free monthly consumption, but if we confirm our email this increases 5GB, you can also increase up to 15GB per month if you create a post on twitter by clicking the **_Tweet4Data_** button in your account settings.\n\n![More data](/uploads/configure-proxy-global-on-linux/more-data.png)\n\n## Install Windscribe\n\nAfter registering, the desktop client or the extension for your favorite browser is downloaded in the [Downloads](https://windscribe.com/?friend=abhyp2zr) session. Follow the instructions in the download link depending on the operating system you use.\n\n## Configuring the Windscribe Client for Linux\n\nThe first thing we have to do is start the windscribe service for this we execute the command:\n\n```shell\n    sudo systemctl start windscribe\n```\n\nOnce the windscribe service is running, we must configure the proxy by executing the command `windscribe proxy --host <proxy address> --port <port> --user <user> --password <password>`:\n\n```shell\nwindscribe proxy --host 19.18.4.54 --port 3128 --user acosta --password \"super password\"\nwindscribe proxy on\n```\n\nWith the previous commands we configure and activate windscribe to use our proxy. Now when to connect all the applications go to the internet through Windscribe we execute the command:\n\n```shell\nwindscribe connect best # Nos conecta al servidor de windscribe con mejor rendimiento\n```\n\nTo consult the help of windscribe we can execute the command `windscribe --help`\n\n![Windscribe Help](/uploads/configure-proxy-global-on-linux/windscribe-help.png)\n\nThese are some options that exist to configure Internet accesses through a proxy in GNU-Linux operating systems. Of all the variants shown in this article my favorite without a doubt is windscribe for all the facilities it offers. I hope it helps you in case you want to have a proxy configured globally in linux.\n";
				}
				function compiledContent$c() {
					return html$c;
				}
				function getHeadings$c() {
					return [{"depth":2,"slug":"terminal-proxy-settings","text":"Terminal Proxy Settings"},{"depth":2,"slug":"setting-environment-variables-for-debianubuntu-family-distributions","text":"Setting environment variables for Debian|Ubuntu family distributions:"},{"depth":2,"slug":"setting-environment-variables-for-distributions-of-the-redhatfedoracentos-family","text":"Setting environment variables for distributions of the RedHat|Fedora|Centos family:"},{"depth":2,"slug":"proxy-settings-for-apt-get-apt-aptitude","text":"Proxy settings for apt-get, apt, aptitude:"},{"depth":2,"slug":"proxy-settings-for-yum","text":"Proxy settings for yum:"},{"depth":2,"slug":"proxy-settings-for-pacman","text":"Proxy settings for pacman:"},{"depth":2,"slug":"proxy-configuration-for-nodejs-npm","text":"Proxy configuration for nodejs (npm)"},{"depth":2,"slug":"proxy-configuration-for-git","text":"Proxy configuration for Git"},{"depth":1,"slug":"redsock","text":"Redsock"},{"depth":2,"slug":"packages-for-the-different-linux-distributions","text":"Packages for the different linux distributions"},{"depth":2,"slug":"manual-compilation-of-redsock","text":"Manual compilation of redsock"},{"depth":2,"slug":"run-redsock","text":"Run redsock"},{"depth":3,"slug":"iptables-example","text":"Iptables example"},{"depth":1,"slug":"proxifier-for-linux","text":"Proxifier-For-Linux"},{"depth":2,"slug":"dependencies","text":"Dependencies"},{"depth":3,"slug":"install-dependencies","text":"Install dependencies"},{"depth":2,"slug":"download-proxifier","text":"Download Proxifier"},{"depth":2,"slug":"build-and-install","text":"Build and Install"},{"depth":2,"slug":"how-to-use-proxifier","text":"How to use Proxifier"},{"depth":1,"slug":"proxychains","text":"Proxychains"},{"depth":2,"slug":"install-proxychains","text":"Install proxychains"},{"depth":3,"slug":"install-proxychains-from-source-code","text":"Install proxychains from source code"},{"depth":3,"slug":"packages-for-the-different-linux-distributions-1","text":"Packages for the different linux distributions"},{"depth":2,"slug":"setting","text":"Setting"},{"depth":3,"slug":"example-of-how-to-configure-multiple-proxies","text":"Example of how to configure multiple proxies"},{"depth":1,"slug":"windscribe","text":"Windscribe"},{"depth":2,"slug":"install-windscribe","text":"Install Windscribe"},{"depth":2,"slug":"configuring-the-windscribe-client-for-linux","text":"Configuring the Windscribe Client for Linux"}];
				}
				function getHeaders$c() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$c();
				}				async function Content$c() {
					const { layout, ...content } = frontmatter$c;
					content.file = file$c;
					content.url = url$c;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$c });
					return createVNode($$BlogPostTemplate, {
									file: file$c,
									url: url$c,
									content,
									frontmatter: content,
									headings: getHeadings$c(),
									rawContent: rawContent$c,
									compiledContent: compiledContent$c,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$c[Symbol.for('astro.needsHeadRendering')] = false;

const _page6 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$c,
	file: file$c,
	url: url$c,
	rawContent: rawContent$c,
	compiledContent: compiledContent$c,
	getHeadings: getHeadings$c,
	getHeaders: getHeaders$c,
	Content: Content$c,
	default: Content$c
}, Symbol.toStringTag, { value: 'Module' }));

const html$b = "<p><img src=\"/uploads/portada.jpg\" alt=\"background\"></p>\n<p>Astronomy and programming are two of my passions that this time I have decided to join together. With this goal in mind, we will create a simple website to count down how many days until the new year, simulating the movement of the planet earth. The demo can be seen at the following link <a href=\"https://yacosta738.github.io/countdown-to-new-year/\">https://yacosta738.github.io/countdown-to-new-year/</a></p>\n<p><img src=\"/uploads/example.png\" alt=\"Example\"></p>\n<p>The first thing is to create a file ** <code>style.css</code>** where the style and orbit of each planet is defined:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #7EE787\">html</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">box-sizing</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">border-box</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7EE787\">html</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">*</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #7EE787\">html</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">*</span><span style=\"color: #79C0FF\">:before</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #7EE787\">html</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">*</span><span style=\"color: #79C0FF\">:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">box-sizing</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">inherit</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7EE787\">body</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">flex</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">justify-content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">center</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">align-items</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">center</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">vw</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">vh</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">overflow</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">hidden</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-size</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">62.5</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background-color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#121212</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-family</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">Arial</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">Helvetica</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">sans-serif</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">padding</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.solar-system</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">relative</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">max-width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">700</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">padding-top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">right</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">@media</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">min-width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">700</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">.solar-system</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">padding-top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">700</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">/*** ORBITS ***/</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">dotted</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">rgba</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">84</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">84</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">84</span><span style=\"color: #C9D1D9\"> / </span><span style=\"color: #79C0FF\">15</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-radius</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">translate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-sun</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">dotted</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#ff6600</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ffcc00</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-sun:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">''</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ff660017</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">99</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">99</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">block</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0.5</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0.5</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-radius</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">box-shadow</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#ff66006b</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#ff66006b</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">inset</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#ffcc00f2</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit.orbit-sun:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">'SUN'</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ffa200</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-3.5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-mercury</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">translate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-venus</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">150</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">150</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">translate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-earth</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">200</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">200</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-earth:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">''</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">solid</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">red</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">block</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">relative</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#54cbeb</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#54cbeb</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">transparent</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">transparent</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rotate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">52.75</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-0.5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">-webkit-animation</span><span style=\"color: #C9D1D9\">: blinker </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">linear</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">infinite</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">animation</span><span style=\"color: #C9D1D9\">: blinker </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">linear</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">infinite</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-mars</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">280</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">280</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">translate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-asteroids</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">380</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">380</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">translate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">) </span><span style=\"color: #79C0FF\">rotate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">/*** PLANETS ***/</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-radius</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">translateY</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transition</span><span style=\"color: #C9D1D9\">: opacity </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ease</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-mercury</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-6</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transition-duration</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#bcc1c9</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-venus</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-8</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">14</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">14</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transition-duration</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ec5f24</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-earth</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-13</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">24</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">24</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transition-duration</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">3</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">z-index</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-mars</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-9</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">18</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">18</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transition-duration</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">4</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#d83e3c</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-asteroids</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-38</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">308</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1500</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transition</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">all</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ease</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-mercury:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">'MERCURY'</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#bcc1c9</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">15</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">line-height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-venus:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">'VENUS'</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ec5f24</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">21</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">14</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">line-height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">14</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-earth:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">'EARTH'</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#54cbeb</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">29</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">24</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">line-height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">24</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-mars:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">'MARS'</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#d83e3c</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">23</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">18</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">line-height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">18</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-asteroids:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">'ASTEROID BELT'</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#666666</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">8</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">36.75</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-mars:after</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-venus:after</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-mercury:after</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-earth:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">''</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">linear-gradient</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">105</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">rgba</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">rgba</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0.6</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">transparent</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">transparent</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  );</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">block</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-radius</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">box-shadow</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">3</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#ffffff26</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0.8</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-earth:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">box-shadow</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">3</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#54cbeb5c</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">/*** SELECTED DAYS ***/</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.new-year-line</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.winter-solstice-line</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">12</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-bottom</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">dotted</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">white</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-13.35</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">z-index</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">white</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-13</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">14</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">line-height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.new-year-line:after</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.winter-solstice-line:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">''</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">28</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">28</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">block</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">float</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">right</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ffffff00</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">right</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-28</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-1</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">dotted</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#fff</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-radius</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.winter-solstice-line</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">120</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-12.05</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#cronoNewYear</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#cronoWinterSolstice</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#fff</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">bottom</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-17</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-size</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1.1</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#cronoNewYear</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#cronoWinterSolstice</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-size</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0.75</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#666</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">/*** WARNING ***/</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#warning</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">fixed</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">bottom</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rgb</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> / </span><span style=\"color: #79C0FF\">0.75</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">45</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-size</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1.35</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ffa200</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">z-index</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">3</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">text-transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">uppercase</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">padding</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">text-align</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">center</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">flex</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">justify-content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">center</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">align-items</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">center</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#warning:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">' ! '</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">z-index</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-size</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1.9</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1.15</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ffa200</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-weight</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">bold</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#warning:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">''</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ffa200</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">z-index</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#warning</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">p</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">block</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">!important</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">float</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">!important</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">padding-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2.5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#warning</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">p</span><span style=\"color: #79C0FF\">:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">''</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">z-index</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1.75</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">solid</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">transparent</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-bottom</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2.85</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">solid</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#040404</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0.775</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-0.75</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#reload</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rgb</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">255</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">162</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-radius</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">padding</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0.5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0.75</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1.5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">cursor</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">pointer</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">outline</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">none</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#reload:hover</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#54cbeb</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">/* ANIMATIONS */</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">@-webkit-keyframes</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">blinker</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">0%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">52.85</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">40%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">51</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">50%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">51</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">60%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">51</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">100%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">48.25</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">@keyframes</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">blinker</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">0%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">52.85</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">40%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">51</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">50%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">51</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">60%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">51</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">100%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">48.25</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">@-webkit-keyframes</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">spin</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">from</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rotate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">to</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rotate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-360</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">@keyframes</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">spin</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">from</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rotate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">to</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rotate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-360</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span></code></pre>\n<p>Then we create the file <strong><code>script.js</code></strong> where all the logic is defined to calculate the number of days left for the new year:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #8B949E\">//prevent loading error</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">document.</span><span style=\"color: #D2A8FF\">getElementById</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'warning'</span><span style=\"color: #C9D1D9\">).</span><span style=\"color: #D2A8FF\">remove</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">//short getElementById</span></span>\n<span class=\"line\"><span style=\"color: #D2A8FF\">elem</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">function</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #FFA657\">id</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">return</span><span style=\"color: #C9D1D9\"> document.</span><span style=\"color: #D2A8FF\">getElementById</span><span style=\"color: #C9D1D9\">(id)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">//count until date</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">newYearDate</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Date</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">`Jan 1, ${</span><span style=\"color: #FF7B72\">new</span><span style=\"color: #A5D6FF\"> </span><span style=\"color: #79C0FF\">Date</span><span style=\"color: #A5D6FF\">().</span><span style=\"color: #D2A8FF\">getFullYear</span><span style=\"color: #A5D6FF\">() </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #A5D6FF\"> </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #A5D6FF\">} 00:00:00`</span><span style=\"color: #C9D1D9\">).</span><span style=\"color: #D2A8FF\">getTime</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">//title angles</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">todayDate</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Date</span><span style=\"color: #C9D1D9\">().</span><span style=\"color: #D2A8FF\">getTime</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">todaySecondsLeft</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> (newYearDate </span><span style=\"color: #FF7B72\">-</span><span style=\"color: #C9D1D9\"> todayDate) </span><span style=\"color: #FF7B72\">/</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1000</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">todayDays</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">parseInt</span><span style=\"color: #C9D1D9\">(todaySecondsLeft </span><span style=\"color: #FF7B72\">/</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">86400</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">randMer</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">random</span><span style=\"color: #C9D1D9\">() </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">4</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">-</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">)) </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">randVen</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">random</span><span style=\"color: #C9D1D9\">() </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">10</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">-</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">4</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">)) </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">4</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">randMar</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">random</span><span style=\"color: #C9D1D9\">() </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">16</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">-</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">8</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">)) </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">8</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">style</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> document.</span><span style=\"color: #D2A8FF\">createElement</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'style'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">style.innerHTML </span><span style=\"color: #FF7B72\">=</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'.orbit-mercury {transform: translate(-50%, -50%) rotate('</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randMer </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .orbit-venus {transform: translate(-50%, -50%) rotate('</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randVen </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .orbit-mars {transform: translate(-50%, -50%) rotate('</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randMar </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .planet-mercury {transform:rotate(-'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randMer </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .planet-venus {transform:rotate(-'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randVen </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .planet-mars {transform:rotate(-'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randMar </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .planet-earth {transform:rotate('</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  todayDays </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .planet-venus {transform:rotate(-'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randVen </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} '</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">document.head.</span><span style=\"color: #D2A8FF\">appendChild</span><span style=\"color: #C9D1D9\">(style)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">//countdown vars</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">let</span><span style=\"color: #C9D1D9\"> days, hours, minutes, seconds</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">//countdown</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">countDown</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">setInterval</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #FF7B72\">function</span><span style=\"color: #C9D1D9\"> () {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">rightNow</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Date</span><span style=\"color: #C9D1D9\">().</span><span style=\"color: #D2A8FF\">getTime</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">timeTo</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> newYearDate </span><span style=\"color: #FF7B72\">-</span><span style=\"color: #C9D1D9\"> rightNow</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  days </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">(timeTo </span><span style=\"color: #FF7B72\">/</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">24</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  hours </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">((timeTo </span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">24</span><span style=\"color: #C9D1D9\">)) </span><span style=\"color: #FF7B72\">/</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  minutes </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">((timeTo </span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\">)) </span><span style=\"color: #FF7B72\">/</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  seconds </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">((timeTo </span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\">)) </span><span style=\"color: #FF7B72\">/</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (hours </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #C9D1D9\">) hours </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'0'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> hours</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (minutes </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #C9D1D9\">) minutes </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'0'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> minutes</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (seconds </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #C9D1D9\">) seconds </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'0'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> seconds</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">elem</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'cronoNewYear'</span><span style=\"color: #C9D1D9\">).innerHTML </span><span style=\"color: #FF7B72\">=</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    days </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">' &#x3C;span>DAYS&#x3C;/span> &#x26;nbsp;'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    hours </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">':'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    minutes </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">':'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    seconds </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">' &#x3C;span>LEFT&#x3C;/span>'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">let</span><span style=\"color: #C9D1D9\"> newDays</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (days </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">elem</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'cronoNewYear'</span><span style=\"color: #C9D1D9\">).style.display </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'none'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    newDays </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> days.</span><span style=\"color: #D2A8FF\">toString</span><span style=\"color: #C9D1D9\">().</span><span style=\"color: #D2A8FF\">substr</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  } </span><span style=\"color: #FF7B72\">else</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    newDays </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'-'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> days</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">elem</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'position-earth'</span><span style=\"color: #C9D1D9\">).style.transform </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'translate(-50%, -50%) rotate('</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> newDays </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'deg'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">let</span><span style=\"color: #C9D1D9\"> solsDays</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">cDays</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> days </span><span style=\"color: #FF7B72\">-</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">11</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (cDays </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">elem</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'cronoWinterSolstice'</span><span style=\"color: #C9D1D9\">).style.display </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'none'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  } </span><span style=\"color: #FF7B72\">else</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    solsDays </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> cDays</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">elem</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'cronoWinterSolstice'</span><span style=\"color: #C9D1D9\">).innerHTML </span><span style=\"color: #FF7B72\">=</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    solsDays </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">' &#x3C;span>DAYS&#x3C;/span> &#x26;nbsp;'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    hours </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">':'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    minutes </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">':'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    seconds </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">' &#x3C;span>LEFT&#x3C;/span>'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">opacityList</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> document.</span><span style=\"color: #D2A8FF\">querySelectorAll</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'.planet'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">for</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #FF7B72\">let</span><span style=\"color: #C9D1D9\"> i </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">; i </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> opacityList.</span><span style=\"color: #79C0FF\">length</span><span style=\"color: #C9D1D9\">; i</span><span style=\"color: #FF7B72\">++</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    opacityList[i].style.opacity </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'1'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (timeTo </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">clearInterval</span><span style=\"color: #C9D1D9\">(countDown)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}, </span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\">)</span></span></code></pre>\n<p>Finally, a file <strong><code>index.html</code></strong> is created that will contain all the html code for our website. The html document begins with the definition of the document type followed by the language of the page, in the header section we find the title, some metadata as well as the import of the page styles. In the body of the document we make use of the classes created previously to be able to visualize the planets and their orbits. At the end we import the previously created javascript file:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;!</span><span style=\"color: #7EE787\">DOCTYPE</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">html</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">html</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">lang</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"en\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">head</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">meta</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">charset</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"UTF-8\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">title</span><span style=\"color: #C9D1D9\">>Countdown to New Year&#x3C;/</span><span style=\"color: #7EE787\">title</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">link</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      </span><span style=\"color: #79C0FF\">rel</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"stylesheet\"</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      </span><span style=\"color: #79C0FF\">href</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css\"</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">link</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">rel</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"stylesheet\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">href</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"./style.css\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;/</span><span style=\"color: #7EE787\">head</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">body</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #8B949E\">&#x3C;!-- partial:index.partial.html --></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"solar-system\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"orbit orbit-sun\"</span><span style=\"color: #C9D1D9\">>&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"orbit orbit-mercury\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"position-mercury\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"planet planet-mercury\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"opacity-mercury\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          &#x3C;</span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"assets/image/mercury.png\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">alt</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"mercury\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"orbit orbit-venus\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"position-venus\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"planet planet-venus\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"opacity-venus\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          &#x3C;</span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"assets/image/venus.png\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">alt</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"venus\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"orbit orbit-earth\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"position-earth\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"planet planet-earth\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"opacity-earth\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          &#x3C;</span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"assets/image/earth.png\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">alt</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"earth\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"orbit orbit-mars\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"position-mars\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"planet planet-mars\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"opacity-mars\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          &#x3C;</span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"assets/image/mars.png\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">alt</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"mars\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"orbit orbit-asteroids\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"position-asteroids\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"planet planet-asteroids\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"opacity-asteroids\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          &#x3C;</span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"assets/image/asteroids-belt.png\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">alt</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"asteroids\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"new-year-line\"</span><span style=\"color: #C9D1D9\">>NEW YEAR &#x3C;</span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"cronoNewYear\"</span><span style=\"color: #C9D1D9\">>&#x3C;/</span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\">>&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"winter-solstice-line\"</span><span style=\"color: #C9D1D9\">>WINTER SOLSTICE &#x3C;</span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"cronoWinterSolstice\"</span><span style=\"color: #C9D1D9\">>&#x3C;/</span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\">>&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"warning\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">p</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        it seems that the earth has gone out of its orbit...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"reload\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">onclick</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"</span><span style=\"color: #C9D1D9\">location.</span><span style=\"color: #D2A8FF\">reload</span><span style=\"color: #C9D1D9\">()\"</span><span style=\"color: #C9D1D9\">>RE-ORBIT&#x3C;/</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;/</span><span style=\"color: #7EE787\">p</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #8B949E\">&#x3C;!-- partial --></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"./script.js\"</span><span style=\"color: #C9D1D9\">>&#x3C;/</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;/</span><span style=\"color: #7EE787\">body</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">html</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>All the code can be downloaded from GitHub at the following link <a href=\"https://github.com/yacosta738/countdown-to-new-year\">https://github.com/yacosta738/countdown-to-new-year</a></p>";

				const frontmatter$b = {"minutesRead":8,"layout":"../../components/templates/BlogPostTemplate.astro","title":"Countdown to new year","description":"Astronomy and programming are two of my passions that this time I have decided to join together. With this objective in mind, we will create a simple website to count down how many days until the new year, simulating the movement of the planet earth.","date":"2020-12-27T00:00:00.000Z","cover":"/uploads/portada.jpg","author":"Yuniel Acosta","lang":"en","tags":["JavaScript","TypeScript","HTML","CSS"],"categories":["Programming"],"draft":false};
				const file$b = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/countdown-to-new-year-astronomy.md";
				const url$b = "/blog/countdown-to-new-year-astronomy";
				function rawContent$b() {
					return "\n![background](/uploads/portada.jpg)\n\nAstronomy and programming are two of my passions that this time I have decided to join together. With this goal in mind, we will create a simple website to count down how many days until the new year, simulating the movement of the planet earth. The demo can be seen at the following link <https://yacosta738.github.io/countdown-to-new-year/>\n\n![Example](/uploads/example.png)\n\nThe first thing is to create a file ** `style.css`** where the style and orbit of each planet is defined:\n\n```css\nhtml {\n  box-sizing: border-box;\n}\n\nhtml *,\nhtml *:before,\nhtml *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  font-size: 62.5%;\n  background-color: #121212;\n  font-family: Arial, Helvetica, sans-serif;\n  margin: 0;\n  padding: 0;\n}\n\n.solar-system {\n  position: relative;\n  width: 100%;\n  max-width: 700px;\n  padding-top: 100%;\n  right: -50%;\n}\n\n@media (min-width: 700px) {\n  .solar-system {\n    padding-top: 700px;\n  }\n}\n\n/*** ORBITS ***/\n\n.orbit {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  border: 2px dotted rgba(84 84 84 / 15%);\n  border-radius: 100%;\n  transform: translate(-50%, -50%);\n}\n\n.orbit-sun {\n  width: calc(50%);\n  height: calc(50%);\n  border: 1px dotted #ff6600;\n  background: #ffcc00;\n}\n\n.orbit-sun:before {\n  content: '';\n  background: #ff660017;\n  width: 99%;\n  height: 99%;\n  display: block;\n  margin-left: 0.5%;\n  margin-top: 0.5%;\n  border-radius: 100%;\n  box-shadow: 0 0 10em 5em #ff66006b, 0 0 100px 50px #ff66006b inset, 0 0 10px 5px #ffcc00f2;\n}\n\n.orbit.orbit-sun:after {\n  content: 'SUN';\n  color: #ffa200;\n  top: 50%;\n  position: absolute;\n  left: -3.5em;\n}\n\n.orbit-mercury {\n  width: calc(100%);\n  height: calc(100%);\n  transform: translate(-50%, -50%);\n}\n\n.orbit-venus {\n  width: calc(150%);\n  height: calc(150%);\n  transform: translate(-50%, -50%);\n}\n\n.orbit-earth {\n  width: calc(200%);\n  height: calc(200%);\n}\n\n.orbit-earth:after {\n  content: '';\n  border: 2px solid red;\n  width: 1em;\n  height: 1em;\n  display: block;\n  position: relative;\n  border-color: #54cbeb #54cbeb transparent transparent;\n  transform: rotate(-50deg);\n  border-width: 2px 2px 0 0;\n  top: 52.75%;\n  left: -0.5em;\n  -webkit-animation: blinker 2s linear infinite;\n  animation: blinker 2s linear infinite;\n}\n\n.orbit-mars {\n  width: calc(280%);\n  height: calc(280%);\n  transform: translate(-50%, -50%);\n}\n\n.orbit-asteroids {\n  width: calc(380%);\n  height: calc(380%);\n  transform: translate(-50%, -50%) rotate(0deg);\n}\n\n/*** PLANETS ***/\n\n.planet {\n  position: absolute;\n  top: 50%;\n  border-radius: 100%;\n  opacity: 0;\n  transform: translateY(-50%);\n  transition: opacity 0s ease 0s;\n}\n\n.planet-mercury {\n  left: -6px;\n  width: 10px;\n  height: 10px;\n  transition-duration: 1s;\n  background: #bcc1c9;\n}\n\n.planet-venus {\n  left: -8px;\n  width: 14px;\n  height: 14px;\n  transition-duration: 2s;\n  background: #ec5f24;\n}\n\n.planet-earth {\n  left: -13px;\n  width: 24px;\n  height: 24px;\n  transition-duration: 3s;\n  z-index: 1;\n}\n\n.planet-mars {\n  left: -9px;\n  width: 18px;\n  height: 18px;\n  transition-duration: 4s;\n  background: #d83e3c;\n}\n\n.planet-asteroids {\n  left: -38px;\n  width: 308px;\n  height: 1500px;\n  transition: all 5s ease 0s;\n}\n\n.planet-mercury:before {\n  content: 'MERCURY';\n  color: #bcc1c9;\n  margin-left: 15px;\n  top: 0px;\n  position: absolute;\n  height: 10px;\n  line-height: 10px;\n}\n\n.planet-venus:before {\n  content: 'VENUS';\n  color: #ec5f24;\n  margin-left: 21px;\n  top: 1px;\n  position: absolute;\n  height: 14px;\n  line-height: 14px;\n}\n\n.planet-earth:before {\n  content: 'EARTH';\n  color: #54cbeb;\n  margin-left: 29px;\n  top: 1px;\n  position: absolute;\n  height: 24px;\n  line-height: 24px;\n}\n\n.planet-mars:before {\n  content: 'MARS';\n  color: #d83e3c;\n  margin-left: 23px;\n  top: 1px;\n  position: absolute;\n  height: 18px;\n  line-height: 18px;\n}\n\n.planet-asteroids:before {\n  content: 'ASTEROID BELT';\n  color: #666666;\n  margin-left: 8em;\n  top: 36.75%;\n  position: absolute;\n}\n\n.planet-mars:after,\n.planet-venus:after,\n.planet-mercury:after,\n.planet-earth:after {\n  content: '';\n  background: linear-gradient(\n    105deg,\n    rgba(0, 0, 0, 1),\n    rgba(0, 0, 0, 0.6),\n    transparent,\n    transparent\n  );\n  display: block;\n  width: 100%;\n  height: 100%;\n  border-radius: 100%;\n  box-shadow: 0 0 3px 2px #ffffff26;\n  opacity: 0.8;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.planet-earth:after {\n  box-shadow: 0 0 5px 3px #54cbeb5c;\n}\n\n.planet img {\n  width: 100%;\n}\n\n/*** SELECTED DAYS ***/\n\n.new-year-line,\n.winter-solstice-line {\n  width: 12em;\n  border-bottom: 2px dotted white;\n  position: absolute;\n  left: -13.35em;\n  top: 50%;\n  z-index: -1;\n  color: white;\n  margin-top: -13px;\n  margin-left: -50%;\n  height: 14px;\n  line-height: 1em;\n}\n\n.new-year-line:after,\n.winter-solstice-line:after {\n  content: '';\n  width: 28px;\n  height: 28px;\n  display: block;\n  float: right;\n  position: absolute;\n  background: #ffffff00;\n  right: -28px;\n  top: -1px;\n  border: 2px dotted #fff;\n  border-radius: 100%;\n}\n\n.winter-solstice-line {\n  margin-top: 120px;\n  left: -12.05em;\n}\n\n#cronoNewYear,\n#cronoWinterSolstice {\n  left: 0;\n  position: absolute;\n  color: #fff;\n  width: 100%;\n  bottom: -17px;\n  font-size: 1.1em;\n}\n\n#cronoNewYear span,\n#cronoWinterSolstice span {\n  font-size: 0.75em;\n  color: #666;\n}\n\n/*** WARNING ***/\n\n#warning {\n  position: fixed;\n  left: 2em;\n  bottom: 2em;\n  background: rgb(0 0 0 / 0.75);\n  height: 5em;\n  width: 45em;\n  font-size: 1.35em;\n  color: #ffa200;\n  z-index: 3;\n  text-transform: uppercase;\n  padding: 0;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#warning:before {\n  content: ' ! ';\n  z-index: 2;\n  font-size: 1.9em;\n  margin-left: 1.15em;\n  color: #ffa200;\n  font-weight: bold;\n  margin-top: 5px;\n}\n\n#warning:after {\n  content: '';\n  background: #ffa200;\n  position: absolute;\n  left: 0;\n  width: 5em;\n  height: 5em;\n  z-index: 0;\n}\n\n#warning p {\n  display: block !important;\n  float: left;\n  width: 100%;\n  margin: 0 !important;\n  padding-left: 2.5em;\n}\n\n#warning p:before {\n  content: '';\n  position: absolute;\n  z-index: 1;\n  border: 1.75em solid transparent;\n  border-bottom: 2.85em solid #040404;\n  left: 0.775em;\n  top: -0.75em;\n}\n\n#reload {\n  background: rgb(255 162 0);\n  border: 0;\n  border-radius: 1px;\n  padding: 0.5em 0.75em;\n  margin-left: 1.5em;\n  cursor: pointer;\n  outline: none;\n}\n\n#reload:hover {\n  background: #54cbeb;\n}\n\n/* ANIMATIONS */\n\n@-webkit-keyframes blinker {\n  0% {\n    opacity: 0;\n    top: 52.85%;\n  }\n  40% {\n    opacity: 1;\n    top: 51%;\n  }\n  50% {\n    opacity: 0;\n    top: 51%;\n  }\n  60% {\n    opacity: 1;\n    top: 51%;\n  }\n  100% {\n    opacity: 0;\n    top: 48.25%;\n  }\n}\n\n@keyframes blinker {\n  0% {\n    opacity: 0;\n    top: 52.85%;\n  }\n  40% {\n    opacity: 1;\n    top: 51%;\n  }\n  50% {\n    opacity: 0;\n    top: 51%;\n  }\n  60% {\n    opacity: 1;\n    top: 51%;\n  }\n  100% {\n    opacity: 0;\n    top: 48.25%;\n  }\n}\n\n@-webkit-keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(-360deg);\n  }\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(-360deg);\n  }\n}\n```\n\nThen we create the file **`script.js`** where all the logic is defined to calculate the number of days left for the new year:\n\n```js\n//prevent loading error\ndocument.getElementById('warning').remove()\n\n//short getElementById\nelem = function (id) {\n  return document.getElementById(id)\n}\n\n//count until date\nconst newYearDate = new Date(`Jan 1, ${new Date().getFullYear() + 1} 00:00:00`).getTime()\n\n//title angles\nconst todayDate = new Date().getTime()\nconst todaySecondsLeft = (newYearDate - todayDate) / 1000\nconst todayDays = parseInt(todaySecondsLeft / 86400)\nconst randMer = Math.floor(Math.random() * (4 - 1 + 1)) + 1\nconst randVen = Math.floor(Math.random() * (10 - 4 + 1)) + 4\nconst randMar = Math.floor(Math.random() * (16 - 8 + 1)) + 8\nconst style = document.createElement('style')\nstyle.innerHTML =\n  '.orbit-mercury {transform: translate(-50%, -50%) rotate(' +\n  randMer +\n  'deg)} .orbit-venus {transform: translate(-50%, -50%) rotate(' +\n  randVen +\n  'deg)} .orbit-mars {transform: translate(-50%, -50%) rotate(' +\n  randMar +\n  'deg)} .planet-mercury {transform:rotate(-' +\n  randMer +\n  'deg)} .planet-venus {transform:rotate(-' +\n  randVen +\n  'deg)} .planet-mars {transform:rotate(-' +\n  randMar +\n  'deg)} .planet-earth {transform:rotate(' +\n  todayDays +\n  'deg)} .planet-venus {transform:rotate(-' +\n  randVen +\n  'deg)} '\ndocument.head.appendChild(style)\n\n//countdown vars\nlet days, hours, minutes, seconds\n\n//countdown\nconst countDown = setInterval(function () {\n  const rightNow = new Date().getTime()\n  const timeTo = newYearDate - rightNow\n\n  days = Math.floor(timeTo / (1000 * 60 * 60 * 24))\n  hours = Math.floor((timeTo % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  minutes = Math.floor((timeTo % (1000 * 60 * 60)) / (1000 * 60))\n  seconds = Math.floor((timeTo % (1000 * 60)) / 1000)\n\n  if (hours < 10) hours = '0' + hours\n  if (minutes < 10) minutes = '0' + minutes\n  if (seconds < 10) seconds = '0' + seconds\n\n  elem('cronoNewYear').innerHTML =\n    days +\n    ' <span>DAYS</span> &nbsp;' +\n    hours +\n    ':' +\n    minutes +\n    ':' +\n    seconds +\n    ' <span>LEFT</span>'\n  let newDays\n  if (days < 0) {\n    elem('cronoNewYear').style.display = 'none'\n    newDays = days.toString().substr(1)\n  } else {\n    newDays = '-' + days\n  }\n  elem('position-earth').style.transform = 'translate(-50%, -50%) rotate(' + newDays + 'deg'\n\n  let solsDays\n  const cDays = days - 11\n  if (cDays < 0) {\n    elem('cronoWinterSolstice').style.display = 'none'\n  } else {\n    solsDays = cDays\n  }\n  elem('cronoWinterSolstice').innerHTML =\n    solsDays +\n    ' <span>DAYS</span> &nbsp;' +\n    hours +\n    ':' +\n    minutes +\n    ':' +\n    seconds +\n    ' <span>LEFT</span>'\n\n  const opacityList = document.querySelectorAll('.planet')\n  for (let i = 0; i < opacityList.length; i++) {\n    opacityList[i].style.opacity = '1'\n  }\n\n  if (timeTo < 0) {\n    clearInterval(countDown)\n  }\n}, 1000)\n```\n\nFinally, a file **`index.html`** is created that will contain all the html code for our website. The html document begins with the definition of the document type followed by the language of the page, in the header section we find the title, some metadata as well as the import of the page styles. In the body of the document we make use of the classes created previously to be able to visualize the planets and their orbits. At the end we import the previously created javascript file:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Countdown to New Year</title>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css\"\n    />\n    <link rel=\"stylesheet\" href=\"./style.css\" />\n  </head>\n  <body>\n    <!-- partial:index.partial.html -->\n    <div class=\"solar-system\">\n      <div class=\"orbit orbit-sun\"></div>\n      <div class=\"orbit orbit-mercury\" id=\"position-mercury\">\n        <div class=\"planet planet-mercury\" id=\"opacity-mercury\">\n          <img src=\"assets/image/mercury.png\" alt=\"mercury\" />\n        </div>\n      </div>\n      <div class=\"orbit orbit-venus\" id=\"position-venus\">\n        <div class=\"planet planet-venus\" id=\"opacity-venus\">\n          <img src=\"assets/image/venus.png\" alt=\"venus\" />\n        </div>\n      </div>\n      <div class=\"orbit orbit-earth\" id=\"position-earth\">\n        <div class=\"planet planet-earth\" id=\"opacity-earth\">\n          <img src=\"assets/image/earth.png\" alt=\"earth\" />\n        </div>\n      </div>\n      <div class=\"orbit orbit-mars\" id=\"position-mars\">\n        <div class=\"planet planet-mars\" id=\"opacity-mars\">\n          <img src=\"assets/image/mars.png\" alt=\"mars\" />\n        </div>\n      </div>\n      <div class=\"orbit orbit-asteroids\" id=\"position-asteroids\">\n        <div class=\"planet planet-asteroids\" id=\"opacity-asteroids\">\n          <img src=\"assets/image/asteroids-belt.png\" alt=\"asteroids\" />\n        </div>\n      </div>\n      <div class=\"new-year-line\">NEW YEAR <span id=\"cronoNewYear\"></span></div>\n      <div class=\"winter-solstice-line\">WINTER SOLSTICE <span id=\"cronoWinterSolstice\"></span></div>\n    </div>\n    <div id=\"warning\">\n      <p>\n        it seems that the earth has gone out of its orbit...\n        <button id=\"reload\" onclick=\"location.reload()\">RE-ORBIT</button>\n      </p>\n    </div>\n    <!-- partial -->\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n```\n\nAll the code can be downloaded from GitHub at the following link <https://github.com/yacosta738/countdown-to-new-year>\n";
				}
				function compiledContent$b() {
					return html$b;
				}
				function getHeadings$b() {
					return [];
				}
				function getHeaders$b() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$b();
				}				async function Content$b() {
					const { layout, ...content } = frontmatter$b;
					content.file = file$b;
					content.url = url$b;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$b });
					return createVNode($$BlogPostTemplate, {
									file: file$b,
									url: url$b,
									content,
									frontmatter: content,
									headings: getHeadings$b(),
									rawContent: rawContent$b,
									compiledContent: compiledContent$b,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$b[Symbol.for('astro.needsHeadRendering')] = false;

const _page7 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$b,
	file: file$b,
	url: url$b,
	rawContent: rawContent$b,
	compiledContent: compiledContent$b,
	getHeadings: getHeadings$b,
	getHeaders: getHeaders$b,
	Content: Content$b,
	default: Content$b
}, Symbol.toStringTag, { value: 'Module' }));

const html$a = "<h2 id=\"what-is-github-profile-page\">What is GitHub Profile Page?</h2>\n<p>A github profile page like any other social media profile page displays the user your public repositories and your contributions to all the repositories by day, month and year wise. A person can also see who you are following on github and how many people are following you. Apart from this it also shows the repositories you have starred.</p>\n<p>However till now it was not possible to customize this page since there was no customization available. But now it is possible to customize your github profile page by modifying a <strong>README.md</strong> in a username repository.</p>\n<p>So lets get started:</p>\n<h3 id=\"step-1-create-a-repository\">Step 1: Create a repository</h3>\n<p>Login into <a href=\"https://www.github.com\">github</a> and create a new repository with the same name as your github user name. Make sure to keep this repository public and initialize it with <strong>README.md</strong> file as shown in below screenshot.</p>\n<p><img src=\"/uploads/yacosta738.png\" alt=\"yacosta738\" title=\"Create a repository\"></p>\n<h3 id=\"step-2-edit-readmemd-file\">Step 2: Edit README.md file</h3>\n<p>Once the repository is created, open the <strong>README.md</strong> file and start editing it. You can add anything in this file, for example your twitter profile link, your linkedin profile link etc. You can also add your biography or description about your interest, hobbies, technologies you like etc as you can see in below screen shot.</p>\n<p><img src=\"/uploads/edit-readme.png\" alt=\"readme.md\" title=\"Edit README.md file\"></p>\n<h3 id=\"step-3-commit-readmemd-file\">Step 3: Commit README.md file</h3>\n<p>When you have completed making the change and you are ready, preview your changes and make sure to commit your changes.</p>\n<p><img src=\"/uploads/commited.png\" alt=\"commit readme\" title=\"Commit README.md file\"></p>\n<h3 id=\"step-4-verify-your-changes-on-your-github-profile\">Step 4: Verify your changes on your Github Profile</h3>\n<p>Last step is to go to your github profile page and verify that the changes appear there.</p>\n<p><img src=\"/uploads/acosta-github-profile.png\" alt=\"acosta github profile\" title=\"Verify your changes on your Github Profile Page\"></p>\n<p>You can use this tool to generate your profile <strong>Readme.md</strong> without coding <a href=\"https://rahuldkjain.github.io/gh-profile-readme-generator/\">gh-profile-readme-generator</a></p>\n<p>Hopefully, you have learned something new today and like this post</p>\n<p>Happy Coding 🤠.</p>";

				const frontmatter$a = {"minutesRead":2,"layout":"../../components/templates/BlogPostTemplate.astro","title":"Customizing Github Profile Page","description":"You can customize your profile so that other people can get a better sense of who you are and the work you do. ","date":"2021-05-11T02:05:59.285Z","cover":"/uploads/acosta-github-profile.png","author":"Yuniel Acosta","lang":"en","tags":["Github","User Profile","markdown","gh"],"categories":["Github","Development"],"draft":false};
				const file$a = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/customizing-github-profile-page.md";
				const url$a = "/blog/customizing-github-profile-page";
				function rawContent$a() {
					return "\n## What is GitHub Profile Page?\n\nA github profile page like any other social media profile page displays the user your public repositories and your contributions to all the repositories by day, month and year wise. A person can also see who you are following on github and how many people are following you. Apart from this it also shows the repositories you have starred.\n\nHowever till now it was not possible to customize this page since there was no customization available. But now it is possible to customize your github profile page by modifying a **README.md** in a username repository.\n\nSo lets get started:\n\n### Step 1: Create a repository\n\nLogin into [github](https://www.github.com) and create a new repository with the same name as your github user name. Make sure to keep this repository public and initialize it with **README.md** file as shown in below screenshot.\n\n![yacosta738](/uploads/yacosta738.png 'Create a repository')\n\n### Step 2: Edit README.md file\n\nOnce the repository is created, open the **README.md** file and start editing it. You can add anything in this file, for example your twitter profile link, your linkedin profile link etc. You can also add your biography or description about your interest, hobbies, technologies you like etc as you can see in below screen shot.\n\n![readme.md](/uploads/edit-readme.png 'Edit README.md file')\n\n### Step 3: Commit README.md file\n\nWhen you have completed making the change and you are ready, preview your changes and make sure to commit your changes.\n\n![commit readme](/uploads/commited.png 'Commit README.md file')\n\n### Step 4: Verify your changes on your Github Profile\n\nLast step is to go to your github profile page and verify that the changes appear there.\n\n![acosta github profile](/uploads/acosta-github-profile.png 'Verify your changes on your Github Profile Page')\n\nYou can use this tool to generate your profile **Readme.md** without coding [gh-profile-readme-generator](https://rahuldkjain.github.io/gh-profile-readme-generator/)\n\nHopefully, you have learned something new today and like this post\n\nHappy Coding 🤠.\n";
				}
				function compiledContent$a() {
					return html$a;
				}
				function getHeadings$a() {
					return [{"depth":2,"slug":"what-is-github-profile-page","text":"What is GitHub Profile Page?"},{"depth":3,"slug":"step-1-create-a-repository","text":"Step 1: Create a repository"},{"depth":3,"slug":"step-2-edit-readmemd-file","text":"Step 2: Edit README.md file"},{"depth":3,"slug":"step-3-commit-readmemd-file","text":"Step 3: Commit README.md file"},{"depth":3,"slug":"step-4-verify-your-changes-on-your-github-profile","text":"Step 4: Verify your changes on your Github Profile"}];
				}
				function getHeaders$a() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$a();
				}				async function Content$a() {
					const { layout, ...content } = frontmatter$a;
					content.file = file$a;
					content.url = url$a;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$a });
					return createVNode($$BlogPostTemplate, {
									file: file$a,
									url: url$a,
									content,
									frontmatter: content,
									headings: getHeadings$a(),
									rawContent: rawContent$a,
									compiledContent: compiledContent$a,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$a[Symbol.for('astro.needsHeadRendering')] = false;

const _page8 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$a,
	file: file$a,
	url: url$a,
	rawContent: rawContent$a,
	compiledContent: compiledContent$a,
	getHeadings: getHeadings$a,
	getHeaders: getHeaders$a,
	Content: Content$a,
	default: Content$a
}, Symbol.toStringTag, { value: 'Module' }));

const html$9 = "<p><img src=\"/uploads/portada-add-images-selector-flutter.png\" alt=\"background\"></p>\n<p>The image picker is a common component that is often needed to change user profile photos among many other options where an image needs to be uploaded. In order to provide our application with the option to upload selected images from our device, either in the camera or the gallery, we will use the <a href=\"https://pub.dev/packages/image_picker\">plugin</a> made by developers of Flutter.</p>\n<h2 id=\"step-1-add-dependency-to-pubspecyaml-file\"><strong>Step 1</strong>: Add dependency to <strong><em>pubspec.yaml</em></strong> file.</h2>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">image_picker: ^0.6.7+14</span></span></code></pre>\n<h2 id=\"step-2-configure-native-platforms\"><strong>Step 2</strong>: Configure native platforms</h2>\n<p>Next, we need to configure the native settings. For the Android platform, nothing needs to be configured. For iOS, open the <code>Info.plist</code> file found in the<code> ios/Runner</code> folder and add the following keys.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">&#x3C;key>NSPhotoLibraryUsageDescription&#x3C;/key></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">&#x3C;string>Allow access to photo library&#x3C;/string></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">&#x3C;key>NSCameraUsageDescription&#x3C;/key></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">&#x3C;string>Allow access to camera to capture photos&#x3C;/string></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">&#x3C;key>NSMicrophoneUsageDescription&#x3C;/key></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">&#x3C;string>Allow access to microphone&#x3C;/string></span></span></code></pre>\n<h2 id=\"step-3-image-selector-function\"><strong>Step 3</strong>: Image selector function</h2>\n<p>In the <code>State</code> class of<code> StatefulWidget</code> on our screen, declare a variable of type <code>File</code> to contain the image chosen by the user.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">File _image;</span></span></code></pre>\n<p>Now write two functions to select images via camera and photo gallery respectively. The optional parameter <code>imageQuality</code> accepts any value between 0 and 100, this parameter can be adjusted according to the size and quality required by the application. After getting the image file, we save it in the variable <code>_image</code> and call<code>setState()</code>so that it can be displayed on the screen.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">_imgFromCamera</span><span style=\"color: #C9D1D9\">() </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">File</span><span style=\"color: #C9D1D9\"> image </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ImagePicker</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">pickImage</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        source</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ImageSource</span><span style=\"color: #C9D1D9\">.camera, imageQuality</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">50</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">setState</span><span style=\"color: #C9D1D9\">(() {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      _image </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> image;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    });</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">_imgFromGallery</span><span style=\"color: #C9D1D9\">() </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">File</span><span style=\"color: #C9D1D9\"> image </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ImagePicker</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">pickImage</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        source</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ImageSource</span><span style=\"color: #C9D1D9\">.gallery, imageQuality</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">50</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">setState</span><span style=\"color: #C9D1D9\">(() {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      _image </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> image;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    });</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span></code></pre>\n<h2 id=\"step-4-create-an-option-selector-to-select-the-camera-or-gallery\"><strong>Step 4</strong>: Create an option selector to select the camera or gallery</h2>\n<p>Next, we observe the function to show a <code>bottom sheet</code> for the user to choose the camera or gallery option.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">void</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">_showPicker</span><span style=\"color: #C9D1D9\">(context) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">showModalBottomSheet</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      context</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> context,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      builder</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">BuildContext</span><span style=\"color: #C9D1D9\"> bc) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        </span><span style=\"color: #FF7B72\">return</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">SafeArea</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Container</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">            child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Wrap</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              children</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #79C0FF\">Widget</span><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\">[</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ListTile</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    leading</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Icon</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">Icons</span><span style=\"color: #C9D1D9\">.photo_library),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    title</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Text</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'Photo Library'</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    onTap</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> () {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                      </span><span style=\"color: #D2A8FF\">_imgFromGallery</span><span style=\"color: #C9D1D9\">();</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                      </span><span style=\"color: #79C0FF\">Navigator</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">of</span><span style=\"color: #C9D1D9\">(context).</span><span style=\"color: #D2A8FF\">pop</span><span style=\"color: #C9D1D9\">();</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    }),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ListTile</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  leading</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Icon</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">Icons</span><span style=\"color: #C9D1D9\">.photo_camera),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  title</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Text</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'Camera'</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  onTap</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> () {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    </span><span style=\"color: #D2A8FF\">_imgFromCamera</span><span style=\"color: #C9D1D9\">();</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    </span><span style=\"color: #79C0FF\">Navigator</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">of</span><span style=\"color: #C9D1D9\">(context).</span><span style=\"color: #D2A8FF\">pop</span><span style=\"color: #C9D1D9\">();</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              ],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">            ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        );</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  );</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span></code></pre>\n<h2 id=\"step-5-create-and-configure-screen-image-view\"><strong>Step 5</strong>: Create and configure screen image view</h2>\n<p>Finally, let’s create a profile image bracket on the screen, which opens the selector when clicked and displays the selected image.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">@override</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">Widget</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">build</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">BuildContext</span><span style=\"color: #C9D1D9\"> context) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">return</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Scaffold</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    appBar</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">AppBar</span><span style=\"color: #C9D1D9\">(),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    body</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Column</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      children</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #79C0FF\">Widget</span><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\">[</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        </span><span style=\"color: #79C0FF\">SizedBox</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          height</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">32</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        </span><span style=\"color: #79C0FF\">Center</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">GestureDetector</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">            onTap</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> () {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              </span><span style=\"color: #D2A8FF\">_showPicker</span><span style=\"color: #C9D1D9\">(context);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">            },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">            child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">CircleAvatar</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              radius</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">55</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              backgroundColor</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Color</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0xffFDCF09</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> _image </span><span style=\"color: #FF7B72\">!=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">null</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  </span><span style=\"color: #FF7B72\">?</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ClipRRect</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                borderRadius</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">BorderRadius</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">circular</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">50</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Image</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">file</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  _image,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  width</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  height</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  fit</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">BoxFit</span><span style=\"color: #C9D1D9\">.fitHeight,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              )</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  </span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Container</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                decoration</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">BoxDecoration</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    color</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Colors</span><span style=\"color: #C9D1D9\">.grey[</span><span style=\"color: #79C0FF\">200</span><span style=\"color: #C9D1D9\">],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    borderRadius</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">BorderRadius</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">circular</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">50</span><span style=\"color: #C9D1D9\">)),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                width</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                height</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Icon</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  </span><span style=\"color: #79C0FF\">Icons</span><span style=\"color: #C9D1D9\">.camera_alt,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  color</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Colors</span><span style=\"color: #C9D1D9\">.grey[</span><span style=\"color: #79C0FF\">800</span><span style=\"color: #C9D1D9\">],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">            ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        )</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      ],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  );</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Done, run the app, and you should see something like this.</p>\n<p><img src=\"/uploads/resultado.gif\" alt=\"Result\"></p>";

				const frontmatter$9 = {"minutesRead":3,"layout":"../../components/templates/BlogPostTemplate.astro","title":"Add an image picker in flutter","date":"2020-12-18T00:00:00.000Z","description":"The image picker is a common component that we often need for user profiles and other things. How to add an image picker to flutter to select images from gallery or camera","author":"Yuniel Acosta","lang":"en","tags":["Flutter","Image Picker","Dart"],"categories":["Programming"],"cover":"/uploads/portada-add-images-selector-flutter.png","draft":false};
				const file$9 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/add-image-selector-flutter.md";
				const url$9 = "/blog/add-image-selector-flutter";
				function rawContent$9() {
					return "\n![background](/uploads/portada-add-images-selector-flutter.png)\n\nThe image picker is a common component that is often needed to change user profile photos among many other options where an image needs to be uploaded. In order to provide our application with the option to upload selected images from our device, either in the camera or the gallery, we will use the [plugin](https://pub.dev/packages/image_picker) made by developers of Flutter.\n\n## **Step 1**: Add dependency to **_pubspec.yaml_** file.\n\n    image_picker: ^0.6.7+14\n\n## **Step 2**: Configure native platforms\n\nNext, we need to configure the native settings. For the Android platform, nothing needs to be configured. For iOS, open the `Info.plist` file found in the` ios/Runner` folder and add the following keys.\n\n```text\n<key>NSPhotoLibraryUsageDescription</key>\n<string>Allow access to photo library</string>\n\n<key>NSCameraUsageDescription</key>\n<string>Allow access to camera to capture photos</string>\n\n<key>NSMicrophoneUsageDescription</key>\n<string>Allow access to microphone</string>\n```\n\n## **Step 3**: Image selector function\n\nIn the `State` class of` StatefulWidget` on our screen, declare a variable of type `File` to contain the image chosen by the user.\n\n    File _image;\n\nNow write two functions to select images via camera and photo gallery respectively. The optional parameter `imageQuality` accepts any value between 0 and 100, this parameter can be adjusted according to the size and quality required by the application. After getting the image file, we save it in the variable `_image` and call`setState()`so that it can be displayed on the screen.\n\n```dart\n    _imgFromCamera() async {\n    File image = await ImagePicker.pickImage(\n        source: ImageSource.camera, imageQuality: 50\n    );\n\n    setState(() {\n      _image = image;\n    });\n  }\n\n  _imgFromGallery() async {\n    File image = await ImagePicker.pickImage(\n        source: ImageSource.gallery, imageQuality: 50\n    );\n\n    setState(() {\n      _image = image;\n    });\n  }\n```\n\n## **Step 4**: Create an option selector to select the camera or gallery\n\nNext, we observe the function to show a `bottom sheet` for the user to choose the camera or gallery option.\n\n```dart\nvoid _showPicker(context) {\n  showModalBottomSheet(\n      context: context,\n      builder: (BuildContext bc) {\n        return SafeArea(\n          child: Container(\n            child: new Wrap(\n              children: <Widget>[\n                new ListTile(\n                    leading: new Icon(Icons.photo_library),\n                    title: new Text('Photo Library'),\n                    onTap: () {\n                      _imgFromGallery();\n                      Navigator.of(context).pop();\n                    }),\n                new ListTile(\n                  leading: new Icon(Icons.photo_camera),\n                  title: new Text('Camera'),\n                  onTap: () {\n                    _imgFromCamera();\n                    Navigator.of(context).pop();\n                  },\n                ),\n              ],\n            ),\n          ),\n        );\n      }\n  );\n}\n```\n\n## **Step 5**: Create and configure screen image view\n\nFinally, let's create a profile image bracket on the screen, which opens the selector when clicked and displays the selected image.\n\n```dart\n@override\nWidget build(BuildContext context) {\n  return Scaffold(\n    appBar: AppBar(),\n    body: Column(\n      children: <Widget>[\n        SizedBox(\n          height: 32,\n        ),\n        Center(\n          child: GestureDetector(\n            onTap: () {\n              _showPicker(context);\n            },\n            child: CircleAvatar(\n              radius: 55,\n              backgroundColor: Color(0xffFDCF09),\n              child: _image != null\n                  ? ClipRRect(\n                borderRadius: BorderRadius.circular(50),\n                child: Image.file(\n                  _image,\n                  width: 100,\n                  height: 100,\n                  fit: BoxFit.fitHeight,\n                ),\n              )\n                  : Container(\n                decoration: BoxDecoration(\n                    color: Colors.grey[200],\n                    borderRadius: BorderRadius.circular(50)),\n                width: 100,\n                height: 100,\n                child: Icon(\n                  Icons.camera_alt,\n                  color: Colors.grey[800],\n                ),\n              ),\n            ),\n          ),\n        )\n      ],\n    ),\n  );\n}\n\n```\n\nDone, run the app, and you should see something like this.\n\n![Result](/uploads/resultado.gif)\n";
				}
				function compiledContent$9() {
					return html$9;
				}
				function getHeadings$9() {
					return [{"depth":2,"slug":"step-1-add-dependency-to-pubspecyaml-file","text":"Step 1: Add dependency to pubspec.yaml file."},{"depth":2,"slug":"step-2-configure-native-platforms","text":"Step 2: Configure native platforms"},{"depth":2,"slug":"step-3-image-selector-function","text":"Step 3: Image selector function"},{"depth":2,"slug":"step-4-create-an-option-selector-to-select-the-camera-or-gallery","text":"Step 4: Create an option selector to select the camera or gallery"},{"depth":2,"slug":"step-5-create-and-configure-screen-image-view","text":"Step 5: Create and configure screen image view"}];
				}
				function getHeaders$9() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$9();
				}				async function Content$9() {
					const { layout, ...content } = frontmatter$9;
					content.file = file$9;
					content.url = url$9;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$9 });
					return createVNode($$BlogPostTemplate, {
									file: file$9,
									url: url$9,
									content,
									frontmatter: content,
									headings: getHeadings$9(),
									rawContent: rawContent$9,
									compiledContent: compiledContent$9,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$9[Symbol.for('astro.needsHeadRendering')] = false;

const _page9 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$9,
	file: file$9,
	url: url$9,
	rawContent: rawContent$9,
	compiledContent: compiledContent$9,
	getHeadings: getHeadings$9,
	getHeaders: getHeaders$9,
	Content: Content$9,
	default: Content$9
}, Symbol.toStringTag, { value: 'Module' }));

const html$8 = "<p><img src=\"/uploads/gridsome-portada.png\" alt=\"background\"></p>\n<p>Gridsome is a Vue.js-powered, modern site generator for building the fastest possible websites for any Headless CMS, APIs or Markdown-files. Gridsome makes it easy and fun for developers to create fast, beautiful websites without needing to become a performance expert.</p>\n<h3 id=\"why-gridsome\">Why Gridsome?</h3>\n<ul>\n<li><strong>Local development with hot-reloading</strong> - See code changes in real-time.</li>\n<li><strong>Data source plugins</strong> - Use it for any popular Headless CMSs, APIs or Markdown-files.</li>\n<li><strong>File-based page routing</strong> - Quickly create and manage routes with files.</li>\n<li><strong>Centralized data management</strong> - Pull data into a local, unified GraphQL data layer.</li>\n<li><strong>Vue.js for frontend</strong> - A lightweight and approachable front-end framework.</li>\n<li><strong>Auto-optimized code</strong> - Get code-splitting and asset optimization out-of-the-box.</li>\n<li><strong>Static files generation</strong> - Deploy securely to any CDN or static web host.</li>\n</ul>\n<p><a href=\"https://gridsome.org/docs/#how-it-works\">Learn more about how Gridsome works</a></p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">Layout</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"container-inner mx-auto my-16\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">h1</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"text-4xl font-bold leading-tight\"</span><span style=\"color: #C9D1D9\">>{{ $page.post.title }}&#x3C;/</span><span style=\"color: #7EE787\">h1</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"text-xl text-gray-600 mb-8\"</span><span style=\"color: #C9D1D9\">>{{ $page.post.date }}&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"markdown-body\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">v-html</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"$page.post.content\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;/</span><span style=\"color: #7EE787\">Layout</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<h3 id=\"prerequisites\">Prerequisites</h3>\n<p>You should have basic knowledge about HTML, CSS, <a href=\"https://vuejs.org\">Vue.js</a> and how to use the <a href=\"https://www.linode.com/docs/tools-reference/tools/using-the-terminal/\">Terminal</a>. Knowing how <a href=\"https://vuejs.org/v2/guide/single-file-components.html\">Vue Single File components</a> &#x26; <a href=\"https://www.graphql.com/\">GraphQL</a> works is a plus, but not required. Gridsome is a great way to learn both.</p>\n<p>Gridsome requires <strong>Node.js</strong> and recommends <strong>Yarn</strong>. <a href=\"https://gridsome.org/docs/#prerequisites\">How to setup</a></p>\n<p><img src=\"/uploads/gridsome-stack.png\" alt=\"background\"></p>\n<h3 id=\"1-install-gridsome-cli-tool\">1. Install Gridsome CLI tool</h3>\n<p>Using yarn:\n<code>yarn global add @gridsome/cli</code></p>\n<p>Using npm:\n<code>npm install --global @gridsome/cli</code></p>\n<h3 id=\"2-create-a-gridsome-project\">2. Create a Gridsome project</h3>\n<ol>\n<li><code>gridsome create my-gridsome-site</code> to create a new project </li>\n<li><code>cd my-gridsome-site</code> to open folder</li>\n<li><code>gridsome develop</code> to start local dev server at <code>http://localhost:8080</code></li>\n<li>Happy coding 🎉🙌</li>\n</ol>\n<h3 id=\"3-next-steps\">3. Next steps</h3>\n<ol>\n<li>Create <code>.vue</code> components in the <code>/pages</code> directory to create page routes.</li>\n<li>Use <code>gridsome build</code> to generate static files in a <code>/dist</code> folder</li>\n</ol>\n<ul>\n<li><a href=\"https://gridsome.org/docs/#how-it-works\">How it works</a></li>\n<li><a href=\"https://gridsome.org/docs/pages/\">How Pages work</a></li>\n<li><a href=\"https://gridsome.org/docs/deployment/\">How to deploy</a></li>\n</ul>";

				const frontmatter$8 = {"minutesRead":2,"title":"Introduction to Gridsome","date":"2019-04-08T00:00:00.000Z","description":"Gridsome is a Vue.js-powered, modern site generator for building the fastest possible websites for any Headless CMS, APIs or Markdown-files. Gridsome makes it easy and fun for developers to create fast, beautiful websites without needing to become a performance expert.","author":"Yuniel Acosta","lang":"en","tags":["frontend","gridsome","VueJS"],"categories":["Development"],"cover":"/uploads/gridsome-portada.png","layout":"../../components/templates/BlogPostTemplate.astro","draft":false};
				const file$8 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/introduction-to-gridsome.md";
				const url$8 = "/blog/introduction-to-gridsome";
				function rawContent$8() {
					return "\n![background](/uploads/gridsome-portada.png)\n\nGridsome is a Vue.js-powered, modern site generator for building the fastest possible websites for any Headless CMS, APIs or Markdown-files. Gridsome makes it easy and fun for developers to create fast, beautiful websites without needing to become a performance expert.\n\n### Why Gridsome?\n\n- **Local development with hot-reloading** - See code changes in real-time.\n- **Data source plugins** - Use it for any popular Headless CMSs, APIs or Markdown-files.\n- **File-based page routing** - Quickly create and manage routes with files.\n- **Centralized data management** - Pull data into a local, unified GraphQL data layer.\n- **Vue.js for frontend** - A lightweight and approachable front-end framework.\n- **Auto-optimized code** - Get code-splitting and asset optimization out-of-the-box.\n- **Static files generation** - Deploy securely to any CDN or static web host.\n\n[Learn more about how Gridsome works](https://gridsome.org/docs/#how-it-works)\n\n```js\n<template>\n  <Layout>\n    <div class=\"container-inner mx-auto my-16\">\n      <h1 class=\"text-4xl font-bold leading-tight\">{{ $page.post.title }}</h1>\n      <div class=\"text-xl text-gray-600 mb-8\">{{ $page.post.date }}</div>\n      <div class=\"markdown-body\" v-html=\"$page.post.content\" />\n    </div>\n  </Layout>\n</template>\n```\n\n### Prerequisites\n\nYou should have basic knowledge about HTML, CSS, [Vue.js](https://vuejs.org) and how to use the [Terminal](https://www.linode.com/docs/tools-reference/tools/using-the-terminal/). Knowing how [Vue Single File components](https://vuejs.org/v2/guide/single-file-components.html) & [GraphQL](https://www.graphql.com/) works is a plus, but not required. Gridsome is a great way to learn both.\n\nGridsome requires **Node.js** and recommends **Yarn**. [How to setup](https://gridsome.org/docs/#prerequisites)\n\n![background](/uploads/gridsome-stack.png)\n\n### 1. Install Gridsome CLI tool\n\nUsing yarn:\n`yarn global add @gridsome/cli`\n\nUsing npm:\n`npm install --global @gridsome/cli`\n\n### 2. Create a Gridsome project\n\n1. `gridsome create my-gridsome-site` to create a new project </li>\n2. `cd my-gridsome-site` to open folder\n3. `gridsome develop` to start local dev server at `http://localhost:8080`\n4. Happy coding 🎉🙌\n\n### 3. Next steps\n\n1. Create `.vue` components in the `/pages` directory to create page routes.\n2. Use `gridsome build` to generate static files in a `/dist` folder\n\n- [How it works](https://gridsome.org/docs/#how-it-works)\n- [How Pages work](https://gridsome.org/docs/pages/)\n- [How to deploy](https://gridsome.org/docs/deployment/)\n";
				}
				function compiledContent$8() {
					return html$8;
				}
				function getHeadings$8() {
					return [{"depth":3,"slug":"why-gridsome","text":"Why Gridsome?"},{"depth":3,"slug":"prerequisites","text":"Prerequisites"},{"depth":3,"slug":"1-install-gridsome-cli-tool","text":"1. Install Gridsome CLI tool"},{"depth":3,"slug":"2-create-a-gridsome-project","text":"2. Create a Gridsome project"},{"depth":3,"slug":"3-next-steps","text":"3. Next steps"}];
				}
				function getHeaders$8() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$8();
				}				async function Content$8() {
					const { layout, ...content } = frontmatter$8;
					content.file = file$8;
					content.url = url$8;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$8 });
					return createVNode($$BlogPostTemplate, {
									file: file$8,
									url: url$8,
									content,
									frontmatter: content,
									headings: getHeadings$8(),
									rawContent: rawContent$8,
									compiledContent: compiledContent$8,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$8[Symbol.for('astro.needsHeadRendering')] = false;

const _page10 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$8,
	file: file$8,
	url: url$8,
	rawContent: rawContent$8,
	compiledContent: compiledContent$8,
	getHeadings: getHeadings$8,
	getHeaders: getHeaders$8,
	Content: Content$8,
	default: Content$8
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$b = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ArticleSummary.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module2$7, specifier: "astro-i18next", assert: {} }, { module: $$module3$1, specifier: "@models:Article", assert: {} }, { module: $$module4$1, specifier: "molecules:PostHeader", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$b = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ArticleSummary.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$ArticleSummary = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$b, $$props, $$slots);
  Astro2.self = $$ArticleSummary;
  const { article, hidePostHeaderInSmallScreen = false } = Astro2.props;
  return renderTemplate`${maybeRenderHead($$result)}<div class="flex flex-col">
    <h2 class="text-3xl md:text-4xl text-center md:text-justify font-bold tracking-wider">
      <a${addAttribute(localizePath$1(article.url), "href")} class="inline-link">${article.title}</a>
    </h2>
    ${!hidePostHeaderInSmallScreen && renderTemplate`${renderComponent($$result, "PostHeader", $$PostHeader, { "article": article })}`}
    <div class="flex flex-col lg:flex-row mb-16">
      ${article.cover && renderTemplate`<img${addAttribute(article.title, "alt")} class="object-cover lg:w-1/3 border border-green-500"${addAttribute(article.cover, "src")}>`}
      <div class="text-justify m-4 md:mx-10 md:my-5">
        ${article.description}
        <a${addAttribute(localizePath$1(article.url), "href")} class="font-bold uppercase inline-link">${t("read")}</a>
      </div>
    </div>
  </div>`;
});

const $$file$b = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/ArticleSummary.astro";
const $$url$b = undefined;

const $$module4 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$b,
	default: $$ArticleSummary,
	file: $$file$b,
	url: $$url$b
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$a = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/category/[...category].astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module3$1, specifier: "@models:Article", assert: {} }, { module: $$module2, specifier: "templates:BlogTemplate", assert: {} }, { module: $$module4, specifier: "molecules:ArticleSummary", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$a = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/category/[...category].astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const Astro$5 = $$Astro$a;
async function getStaticPaths$5() {
  const postsData = await Astro$5.glob(/* #__PURE__ */ Object.assign({"../add-image-selector-flutter.md": () => Promise.resolve().then(() => _page9),"../building-fullstack-web-applications-with-angular-nestjs-and-nx.md": () => Promise.resolve().then(() => _page3),"../configure-proxy-global-on-linux.md": () => Promise.resolve().then(() => _page6),"../countdown-to-new-year-astronomy.md": () => Promise.resolve().then(() => _page7),"../customizing-github-profile-page.md": () => Promise.resolve().then(() => _page8),"../introduction-to-gridsome.md": () => Promise.resolve().then(() => _page10),"../top-10-vs-code-extension-for-2021.md": () => Promise.resolve().then(() => _page5),"../vue-3-with-typescript-and-decorators.md": () => Promise.resolve().then(() => _page4)}), () => "../**/*.md");
  const allPosts = postsData.filter((post) => !post.frontmatter.draft && post.frontmatter.lang === i18next__default.language).map((post) => jsonToArticle(post)).sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf());
  const categories = allPosts.map((post) => post.categories).flat();
  return categories.map((category) => {
    return {
      params: { category: category.toLowerCase() },
      props: { posts: allPosts.filter((post) => post.categories.includes(category)) }
    };
  });
}
const $$$5 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$a, $$props, $$slots);
  Astro2.self = $$$5;
  changeLanguage("en");
  const { category } = Astro2.params;
  const { posts } = Astro2.props;
  return renderTemplate`${renderComponent($$result, "BlogTemplate", $$BlogTemplate, { "title": `${t("blog")} | ${category}`, "description": t("seo.blog-description") }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<div class="container mx-auto">
		${posts.map((post) => renderTemplate`<article class="mb-20 border-b border-gray-400 mx-2 md:mx-24">
					${renderComponent($$result, "ArticleSummary", $$ArticleSummary, { "article": post })}
				</article>`)}
		${posts.length === 0 && renderTemplate`<div class="container-inner mx-auto py-16 pl-10">
					<div class="text-center">
						<h1 class="text-3xl font-bold">${t("no-articles-found")}</h1>
						<p class="text-gray-600">${t("try-again")}</p>
					</div>
				</div>`}
	</div>` })}`;
});

const $$file$a = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/category/[...category].astro";
const $$url$a = "/blog/category/[...category]";

const _page11 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$a,
	getStaticPaths: getStaticPaths$5,
	default: $$$5,
	file: $$file$a,
	url: $$url$a
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$9 = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/tag/[...tag].astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module3$1, specifier: "@models:Article", assert: {} }, { module: $$module2, specifier: "templates:BlogTemplate", assert: {} }, { module: $$module4, specifier: "molecules:ArticleSummary", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$9 = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/tag/[...tag].astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const Astro$4 = $$Astro$9;
async function getStaticPaths$4() {
  const postsData = await Astro$4.glob(/* #__PURE__ */ Object.assign({"../add-image-selector-flutter.md": () => Promise.resolve().then(() => _page9),"../building-fullstack-web-applications-with-angular-nestjs-and-nx.md": () => Promise.resolve().then(() => _page3),"../configure-proxy-global-on-linux.md": () => Promise.resolve().then(() => _page6),"../countdown-to-new-year-astronomy.md": () => Promise.resolve().then(() => _page7),"../customizing-github-profile-page.md": () => Promise.resolve().then(() => _page8),"../introduction-to-gridsome.md": () => Promise.resolve().then(() => _page10),"../top-10-vs-code-extension-for-2021.md": () => Promise.resolve().then(() => _page5),"../vue-3-with-typescript-and-decorators.md": () => Promise.resolve().then(() => _page4)}), () => "../**/*.md");
  const allPosts = postsData.filter((post) => !post.frontmatter.draft && post.frontmatter.lang === i18next__default.language).map((post) => jsonToArticle(post)).sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf());
  const tags = allPosts.map((post) => post.tags).flat();
  return tags.map((tag) => {
    return {
      params: { tag: tag.toLowerCase() },
      props: { posts: allPosts.filter((post) => post.tags.includes(tag)) }
    };
  });
}
const $$$4 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$9, $$props, $$slots);
  Astro2.self = $$$4;
  changeLanguage("en");
  const { tag } = Astro2.params;
  const { posts } = Astro2.props;
  return renderTemplate`${renderComponent($$result, "BlogTemplate", $$BlogTemplate, { "title": `${t("blog")} | ${tag}`, "description": t("seo.blog-description") }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<div class="tainer mx-auto">
		${posts.map((post) => renderTemplate`<article class="mb-20 border-b border-gray-400 mx-2 md:mx-24">
					${renderComponent($$result, "ArticleSummary", $$ArticleSummary, { "article": post })}
				</article>`)}
		${posts.length === 0 && renderTemplate`<div class="container-inner mx-auto py-16 pl-10">
					<div class="text-center">
						<h1 class="text-3xl font-bold">${t("no-articles-found")}</h1>
						<p class="text-gray-600">${t("try-again")}</p>
					</div>
				</div>`}
	</div>` })}`;
});

const $$file$9 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/tag/[...tag].astro";
const $$url$9 = "/blog/tag/[...tag]";

const _page12 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$9,
	getStaticPaths: getStaticPaths$4,
	default: $$$4,
	file: $$file$9,
	url: $$url$9
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$8 = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/Paginator.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$8 = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/Paginator.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Paginator = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$8, $$props, $$slots);
  Astro2.self = $$Paginator;
  const { page } = Astro2.props;
  return renderTemplate`${maybeRenderHead($$result)}<section class="flex items-center justify-between text-xl">
	<a${addAttribute(page.url.prev, "href")} class="mr-8" data-test="paginator-prev"${addAttribute(!page.url.prev ? "cursor-not-allowed select-none disabled:opacity-75" : "", "class")}>
		<span class="squiggle">&larr;</span> Prev
	</a>
	<div class="text-base">
		${page.currentPage}
		${t("of")}
		${page.lastPage}
	</div>
	<a${addAttribute(page.url.next, "href")} data-test="paginator-next"${addAttribute(!page.url.next ? "cursor-not-allowed select-none disabled:opacity-75" : "", "class")}>
		Next<span class="squiggle">&rarr;</span>
	</a>
</section>`;
});

const $$file$8 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/components/molecules/Paginator.astro";
const $$url$8 = undefined;

const $$module5 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$8,
	default: $$Paginator,
	file: $$file$8,
	url: $$url$8
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$7 = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/[...page].astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module2, specifier: "templates:BlogTemplate", assert: {} }, { module: $$module3$1, specifier: "@models:Article", assert: {} }, { module: $$module4, specifier: "molecules:ArticleSummary", assert: {} }, { module: $$module5, specifier: "molecules:Paginator", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$7 = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/[...page].astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const Astro$3 = $$Astro$7;
async function getStaticPaths$3({ paginate }) {
  const allPosts = await Astro$3.glob(/* #__PURE__ */ Object.assign({"./add-image-selector-flutter.md": () => Promise.resolve().then(() => _page9),"./building-fullstack-web-applications-with-angular-nestjs-and-nx.md": () => Promise.resolve().then(() => _page3),"./configure-proxy-global-on-linux.md": () => Promise.resolve().then(() => _page6),"./countdown-to-new-year-astronomy.md": () => Promise.resolve().then(() => _page7),"./customizing-github-profile-page.md": () => Promise.resolve().then(() => _page8),"./introduction-to-gridsome.md": () => Promise.resolve().then(() => _page10),"./top-10-vs-code-extension-for-2021.md": () => Promise.resolve().then(() => _page5),"./vue-3-with-typescript-and-decorators.md": () => Promise.resolve().then(() => _page4)}), () => "./**/*.md");
  const sortedPosts = allPosts.filter((post) => !post.frontmatter.draft && post.frontmatter.lang === i18next__default.language).map((post) => jsonToArticle(post)).sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf());
  return paginate(sortedPosts, {
    pageSize: 5
  });
}
const $$$3 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$7, $$props, $$slots);
  Astro2.self = $$$3;
  changeLanguage("en");
  const { page } = Astro2.props;
  return renderTemplate`${renderComponent($$result, "BlogTemplate", $$BlogTemplate, { "title": t("blog"), "description": t("seo.blog-description") }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<div class="container mx-auto">
		${page.data.map((post) => renderTemplate`<article class="mb-20 border-b border-gray-400 mx-2 md:mx-24">
					${renderComponent($$result, "ArticleSummary", $$ArticleSummary, { "article": post })}
				</article>`)}
		${page.data.length === 0 && renderTemplate`<div class="container-inner mx-auto py-16 pl-10">
					<div class="text-center">
						<h1 class="text-3xl font-bold">${t("no-articles-found")}</h1>
						<p class="text-gray-600">${t("try-again")}</p>
					</div>
				</div>`}
        <!-- pagination -->
        ${renderComponent($$result, "Paginator", $$Paginator, { "page": page })}
	</div>` })}`;
});

const $$file$7 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/blog/[...page].astro";
const $$url$7 = "/blog/[...page]";

const _page13 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$7,
	getStaticPaths: getStaticPaths$3,
	default: $$$3,
	file: $$file$7,
	url: $$url$7
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$6 = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/404.astro", { modules: [{ module: $$module1$5, specifier: "astro-icon", assert: {} }, { module: i18next, specifier: "i18next", assert: {} }, { module: $$module3$3, specifier: "templates:BaseTemplate", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$6 = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/404.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$404$1 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$6, $$props, $$slots);
  Astro2.self = $$404$1;
  changeLanguage("en");
  return renderTemplate`${renderComponent($$result, "BaseTemplate", $$BaseTemplate, { "title": t("error404") }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<div class="container-inner mx-auto py-16">
		<h1 class="text-4xl font-bold mb-16">${t("error404")}</h1>
		<img class="w-1/2" src="/oops.png"${addAttribute(t("error404"), "alt")}>
		<p>${markHTMLString(t("message404"))}</p>
    <a href="/" class="flex justify-center items-center small-button w-24 mt-24 uppercase">
     ${renderComponent($$result, "Icon", $$Icon, { "name": "mdi:arrow-left", "class": "h-6 mr-2" })}  
      ${t("home")}
    </a>
	</div>` })}`;
});

const $$file$6 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/404.astro";
const $$url$6 = "/404";

const _page14 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$6,
	default: $$404$1,
	file: $$file$6,
	url: $$url$6
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$5 = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/index.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module3$3, specifier: "templates:BaseTemplate", assert: {} }, { module: $$module3$2, specifier: "organisms:Hero", assert: {} }, { module: $$module4$5, specifier: "organisms:About", assert: {} }, { module: $$module5$4, specifier: "organisms:jobs/index", assert: {} }, { module: $$module6$1, specifier: "organisms:Projects", assert: {} }, { module: $$module7, specifier: "organisms:LastArticles", assert: {} }, { module: $$module8$1, specifier: "organisms:Contact", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$5 = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/index.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Index = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$5, $$props, $$slots);
  Astro2.self = $$Index;
  changeLanguage("es");
  return renderTemplate`${renderComponent($$result, "BaseTemplate", $$BaseTemplate, {}, { "default": () => renderTemplate`${maybeRenderHead($$result)}<div class="mx-4">
    ${renderComponent($$result, "Hero", $$Hero, {})}
    ${renderComponent($$result, "About", $$About, {})}
    ${renderComponent($$result, "Jobs", $$Index$2, {})}
    ${renderComponent($$result, "Projects", $$Projects$2, {})}
    ${renderComponent($$result, "LastArticles", $$LastArticles, {})}
    ${renderComponent($$result, "Contact", $$Contact, {})}
  </div>` })}`;
});

const $$file$5 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/index.astro";
const $$url$5 = "/es";

const _page15 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$5,
	default: $$Index,
	file: $$file$5,
	url: $$url$5
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$4 = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/projects.astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module2$2, specifier: "organisms:AllProjects", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$4 = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/projects.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$Projects = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$4, $$props, $$slots);
  Astro2.self = $$Projects;
  changeLanguage("es");
  return renderTemplate`${renderComponent($$result, "AllProjects", $$AllProjects, {})}`;
});

const $$file$4 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/projects.astro";
const $$url$4 = "/es/projects";

const _page16 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$4,
	default: $$Projects,
	file: $$file$4,
	url: $$url$4
}, Symbol.toStringTag, { value: 'Module' }));

const html$7 = "<p><img src=\"/uploads/nx.png\" alt=\"nx\" title=\"angular + nestjs + nx\"></p>\n<h2 id=\"por-qué-esta-publicación\">¿Por qué esta publicación?</h2>\n<p>Angular es uno de los frameworks frontend más recomendados en la industria del software. Sin embargo, si desea crear una aplicación web fullStack, solo cubre la mitad de los requisitos. Por un tiempo, lo he estado emparejando con <a href=\"https://nestjs.com/\">NestJS</a> y ha funcionado muy bien en múltiples proyectos.</p>\n<p>Sigo recomendando esta combinación a amigos y compañeros de trabajo, así que finalmente quería escribir la configuración que uso como referencia / punto de partida. Quizás esta publicación te inspire a que también la pruebes. Si es así, hágamelo saber cómo le funcionó.</p>\n<p><a href=\"https://angular.io/\">Angular</a> será nuestro framework frontend para este ejemplo, usaremos <a href=\"https://nestjs.com/\">NestJS</a> para nuestro backend, y todo esto funcionará como un espacio de trabajo completo dentro de <a href=\"https://nx.dev/\">Nx</a>. Introduciremos algunas mejoras en la calidad de vida y agruparemos ambos proyectos en un solo paquete.</p>\n<p><a href=\"https://nestjs.com/\">NestJS</a> es una capa de abstracción que se encuentra encima de <a href=\"https://expressjs.com/es/\">Express</a> o <a href=\"https://www.fastify.io/\">Fastify</a>, ambos frameworks REST impulsados por NodeJS. Está escrito en TypeScript y sigue muchos de los mismos patrones que se encuentran en Angular (anotaciones, DI, etc.). Nx es un conjunto de herramientas desarrolladas por ex-Googlers que ayudan a desarrollar en Monorepos. También ofrecen opciones predeterminadas bastante sensatas y anulaciones de configuración.</p>\n<p>¿Estás listo? ¡Vamos!</p>\n<h1 id=\"scaffolding\">Scaffolding</h1>\n<p>Primero, configuraremos un nuevo espacio de trabajo Nx y crearemos una aplicación Angular y NestJS dentro de él:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">❯ npx create-nx-workspace@latest</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">✔ Workspace name (e.g., org name)     · hn-feed</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">✔ What to create </span><span style=\"color: #FF7B72\">in</span><span style=\"color: #C9D1D9\"> the new workspace · angular-nest</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">✔ Application name                    · client</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">✔ Default stylesheet format           · css</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">✔ Use Nx Cloud</span><span style=\"color: #FF7B72\">?</span><span style=\"color: #C9D1D9\"> (It</span><span style=\"color: #A5D6FF\">'s free and doesn'</span><span style=\"color: #C9D1D9\">t require registration.) · No</span></span></code></pre>\n<p>Cuando termine, esto habrá hecho lo siguiente:</p>\n<ol>\n<li>crea un nuevo directorio con el nombre del espacio de trabajo</li>\n<li>generar un nuevo proyecto Angular ubicado en <code>apps/client</code></li>\n<li>cree un nuevo proyecto de NestJS ubicado en <code>apps/api</code></li>\n<li>generar una biblioteca de typescript de muestra dentro del espacio de trabajo, para ser utilizada tanto por el cliente como por la API (ubicada en <code>libs/api-interfaces</code>)</li>\n</ol>\n<p>Lo que también es interesante es que Nx viene con herramientas mejoradas para ambos proyectos, como:</p>\n<ul>\n<li>usando Jest over Karma como corredor de prueba de unidad</li>\n<li>uso de Cypress sobre Protractor para pruebas E2E specs (solo Angular)</li>\n<li>usando Prettier para formatear el código automáticamente</li>\n<li>Configuración de TSLint decente para todo el espacio de trabajo</li>\n</ul>\n<p>Hay <a href=\"https://nx.dev/angular/getting-started/why-nx#10-minute-nx-overview\">toneladas más de funciones</a> ofrecidas por Nx, pero esas son las que quería señalar en este momento.</p>\n<h1 id=\"ejecutando-los-proyectos\">Ejecutando los proyectos</h1>\n<p>Ahora que tenemos los proyectos básicos configurados, es hora de iniciarlos. Abra 2 ventanas de Terminal y ejecute los siguientes comandos:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #A5D6FF\">`[Terminal 1]: npm run nx -- serve client `</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #A5D6FF\">`[Terminal 2]: npm run nx -- serve api`</span></span></code></pre>\n<p>El primer comando ejecutará el servidor de desarrollo Angular predeterminado, compilará y entregará la interfaz en <a href=\"http://localhost:4200/\"></a><a href=\"http://localhost:4200\">http://localhost:4200</a>. El segundo iniciará el dev-server de NestJS, compilará el TypeScript en JavaScript compatible con NodeJS y mostrará el resultado en <a href=\"http://localhost:3333/api\"></a><a href=\"http://localhost:3333/api\">http://localhost:3333/api</a>. Como una buena ventaja, Nx ha agregado una configuración de proxy para el servidor de desarrollo Angular, que enviará solicitudes de proxy a <a href=\"http://localhost:4200/api\"></a><a href=\"http://localhost:4200/api\">http://localhost:4200/api</a> al servidor de desarrollo de NestJS para nosotros, para que no nos encontremos con ningún problema de CORS durante el desarrollo. La configuración del proxy se puede encontrar en <code>apps/client/proxy.conf.json</code> y se hace referencia a ella dentro del archivo de definición del proyecto<code> angular.json</code>.</p>\n<p>Si abre ahora su navegador en <a href=\"http://localhost:4200/\"></a><a href=\"http://localhost:4200\">http://localhost:4200</a>, debería ver una página similar a esta:</p>\n<p><img src=\"/uploads/localhost.png\" alt=\"localhost:4200\" title=\"App corriendo en localhost\"></p>\n<p>Si inspecciona la red y actualiza, verá una solicitud XHR a <a href=\"http://localhost:4200/api/hello\"></a><a href=\"http://localhost:4200/api/hello\">http://localhost:4200/api/hello</a> mostrando que el proxy ha sido configurado correctamente.</p>\n<h2 id=\"esperar-qué\">¿Esperar, qué?</h2>\n<p>Déjame explicarte lo que está pasando:</p>\n<p>El proyecto NestJS se configuró con un prefijo para usar con todos los controladores. Este prefijo se definió de la siguiente manera en (<code>apps/api/src/main.ts</code>)</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">globalPrefix</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'api'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">app.</span><span style=\"color: #D2A8FF\">setGlobalPrefix</span><span style=\"color: #C9D1D9\">(globalPrefix)</span></span></code></pre>\n<p>Nx también generó un controlador REST de muestra, llamado AppController (<code>apps/api/src/app/app.controller.ts</code>) que actualmente sirve una parte estática de datos, en nuestro caso un objeto de la interfaz <code>Message</code> escrita en Typecript y definida así (<code>libs/api-interfaces/src/lib/api-interfaces.ts</code>):</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">interface</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">Message</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FFA657\">message</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">string</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span></code></pre>\n<p>Debido a que la interfaz <code>Message</code> está definida en la biblioteca compartida, puede ser utilizada tanto por frontend como por backend. ¡Dulce seguridad de tipos en ambos proyectos!</p>\n<p>El método AppController está anotado con</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\"> @</span><span style=\"color: #D2A8FF\">Get</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'hello'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">getData</span><span style=\"color: #C9D1D9\">(): Message {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FF7B72\">return</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">.appService.</span><span style=\"color: #D2A8FF\">getData</span><span style=\"color: #C9D1D9\">();</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span></code></pre>\n<p>que le dice a NestJS que exponga un nuevo GET-endpoint en <a href=\"http://localhost:3333/api/hello\"></a><a href=\"http://localhost:3333/api/hello\">http://localhost:3333/api/hello</a> y devuelva nuestro objeto mensaje, cuando el servidor se está ejecutando.</p>\n<p>En el otro extremo del stack tenemos el proyecto Angular, que se configuró para realizar una solicitud GET de muestra a este endpoint exacto. El código de muestra se puede encontrar en AppComponent de la interfaz en <code>apps/client/src/app/app.component.ts</code></p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">AppComponent</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FFA657\">hello$</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">.http.</span><span style=\"color: #D2A8FF\">get</span><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #FFA657\">Message</span><span style=\"color: #C9D1D9\">>(</span><span style=\"color: #A5D6FF\">'/api/hello'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">constructor</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #FF7B72\">private</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">http</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">HttpClient</span><span style=\"color: #C9D1D9\">) {}</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span></code></pre>\n<p>y se invoca usando la tubería asíncrona directamente en la plantilla:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">>Message: {{ hello$ | async | json }}&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>Ahora, dado que el servidor de desarrollo Angular se está ejecutando en <a href=\"http://localhost:4200/\"></a><a href=\"http://localhost:4200\">http://localhost:4200</a>, la solicitud irá a <a href=\"http://localhost/4200/api/hello\"></a><a href=\"http://localhost/4200/api/hello\">http://localhost/4200/api/hello</a> debido a la ruta relativa en la llamada <code>httpClient</code>. Esto es recogido por la configuración del proxy angular y se reenvía a nuestro servidor NestJS. Impresionante 🎉</p>\n<h1 id=\"ajustar-la-aplicación-para-el-desarrollo\">Ajustar la aplicación para el desarrollo</h1>\n<p>Felicitaciones, ahora tenemos un espacio de trabajo con NestJS y Angular ejecutándose uno al lado del otro, así como un código de muestra sobre cómo llamar al backend desde el frontend. ¡Eso ya está bastante bien!</p>\n<p>Lo que me gusta hacer para mejorar la experiencia de desarrollo es iniciar el servidor de desarrollo de frontend y backend en paralelo, con un solo comando. Para esto instalaremos un asistente de nodejs llamado <a href=\"https://www.npmjs.com/package/concurrently\">concurrently</a>.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">npm install --save-dev concurrently</span></span></code></pre>\n<p>Una vez hecho esto, podemos adaptar el <code>package.json</code> de la siguiente manera:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #A5D6FF\">\"start:fe\"</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">\"ng serve client\"</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #A5D6FF\">\"start:be\"</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">\"ng serve api\"</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #A5D6FF\">\"dev\"</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">\"concurrently -p=</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\">{name}</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\"> -n=</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\">Angular,NestJS</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\"> -c=</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\">green,blue</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\"> </span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\">npm run start:fe</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\"> </span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\">npm run start:be</span><span style=\"color: #79C0FF\">\\\"</span><span style=\"color: #A5D6FF\">\"</span><span style=\"color: #C9D1D9\">,</span></span></code></pre>\n<p>Ahora, al ejecutar <code>npm run dev</code> se iniciarán ambos servidores de desarrollo en paralelo, prefija cada línea de la Terminal con “Angular” o “NestJS” y colorea los prefijos en verde y azul. ¡Impresionante!</p>\n<h1 id=\"sirviendo-frontend-y-backend-desde-un-solo-servidor-para-producción\">Sirviendo frontend y backend desde un solo servidor para producción</h1>\n<p>Bien, ahora tenemos una aplicación de pila completa lista para el desarrollo. Finalicémoslo empaquetando nuestra aplicación como un único paquete npm ejecutable que servirá tanto a nuestro frontend como al backend.</p>\n<p>Para lograr esto, crearemos una compilación de producción de nuestra aplicación Angular y configuraremos nuestro servidor NestJS para que sirva al frontend bajo su ruta raíz, de modo que podamos empaquetar ambos en un paquete autónomo (para implementarlo, por ejemplo, en CloudFoundry o en alguna otra nube proveedor).</p>\n<p>Primero, crearemos una compilación de producción de la interfaz angular:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\">  npm run nx -- build client --prod</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\"> hn-feed@0.0.0 nx /Users/acosta/Projects/hn-feed</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\"> nx </span><span style=\"color: #A5D6FF\">\"build\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"client\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"--prod\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\"> ng run client:build:production</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">Generating ES5 bundles </span><span style=\"color: #FF7B72\">for</span><span style=\"color: #C9D1D9\"> differential loading...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">ES5 bundle generation complete.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">// ... A few seconds later...</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">Date: 2020-06-17T16:14:41.427Z - Hash: 4957569a994e1b83d273 - Time: 34832ms</span></span></code></pre>\n<p>Ahora nuestra salida compilada (minificada, uglificada, rellenada) se puede encontrar en <code>dist/apps/client</code></p>\n<p>Configuremos NestJS para que sirva a esta carpeta cuando accedamos a su ruta raíz.</p>\n<p>Primero, instalaremos el paquete NestJS <code>serve-static</code> para permitir el servicio de activos estáticos</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">npm install --save @nestjs/serve-static</span></span></code></pre>\n<p>Ahora todo lo que tenemos que hacer es importar y configurar el <code>ServeStaticModule</code> proporcionado por este paquete dentro del AppModule (<code>apps/api/src/app/app.module.ts</code>)</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { ServeStaticModule } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'@nestjs/serve-static'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { join } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'path'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">// ...</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">@</span><span style=\"color: #D2A8FF\">Module</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  imports: [</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    ServeStaticModule.</span><span style=\"color: #D2A8FF\">forRoot</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      rootPath: </span><span style=\"color: #D2A8FF\">join</span><span style=\"color: #C9D1D9\">(__dirname, </span><span style=\"color: #A5D6FF\">'..'</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #A5D6FF\">'client'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    })</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  ]</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #8B949E\">// ...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">AppModule</span><span style=\"color: #C9D1D9\"> {}</span></span></code></pre>\n<p>que le indica a NestJS que ingrese a <code>../client</code> desde su propia carpeta dist (<code>dist/apps/api</code>) y sirva el contenido en su ruta raíz.</p>\n<p>Y efectivamente, ejecutar solo el backend a través de <code>npm run start: be</code> y navegar a <a href=\"http://localhost:3333/\"></a><a href=\"http://localhost:3333/\">http://localhost:3333/</a> debería producir el mismo resultado que antes, cuando ejecutamos el servidor de desarrollo Angular:</p>\n<h1 id=\"empaquetando-la-aplicación-para-su-implementación\">Empaquetando la aplicación para su implementación</h1>\n<p>Todo lo que queda ahora es empaquetar todo en un paquete <code>npm</code> y estaremos listos para implementar nuestra aplicación de pila completa. Hagámoslo ahora.</p>\n<p>Necesitamos editar el <code>package.json</code> para incluir solo los archivos dist y, como conveniencia, agregaremos un script de inicio:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">{</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FFA198; font-style: italic\">...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">\"files\"</span><span style=\"color: #C9D1D9\">: [</span><span style=\"color: #A5D6FF\">\"dist/apps/client\"</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #A5D6FF\">\"dist/apps/api\"</span><span style=\"color: #C9D1D9\">],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FFA198; font-style: italic\">...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FFA198; font-style: italic\">scripts</span><span style=\"color: #C9D1D9\">: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">\"serve\"</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">\"node dist/apps/api/main.js\"</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FFA198; font-style: italic\">...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span></code></pre>\n<p>Ahora, si ejecutamos <code>npm pack</code>, se generará un archivo tarball en el directorio del proyecto:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">npm pack</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice 📦  hn-feed@0.0.0</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice === Tarball Contents ===</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">// ...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice === Tarball Details ===</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice name:          hn-feed</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice version:       0.0.0</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice filename:      hn-feed-0.0.0.tgz</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">npm notice total files:   14</span></span></code></pre>\n<p>Ahora podemos cargar este paquete en nuestro proveedor de nube favorito, hacer que ejecute <code>npm install --production</code> después de la carga y proporcionar el script <code>serve</code> como un comando de inicio para el paquete (este paso varía según su proveedor de nube).</p>\n<p>Por supuesto, también puede ejecutar este paquete localmente, simplemente descomprimiendo el archivo tarball, ejecutando <code>npm install --production</code> dentro del directorio, luego ejecutando <code>npm run serve</code>.</p>\n<p>Espero que hayas encontrado útil esta publicación. ¡Avísame si te falta algún paso importante! Obviamente, hay mucho más que podemos hacer ahora que tenemos esta configuración, como la validación del tipo de tiempo de ejecución para nuestro frontend o backend, compartir la lógica entre el frontend y el backend mediante el uso de una biblioteca compartida en el mismo espacio de trabajo, etc. temas, con mucho gusto escribiré una publicación de seguimiento a este :)</p>\n<p>¡Gracias por leer!</p>";

				const frontmatter$7 = {"minutesRead":8,"layout":"../../../components/templates/BlogPostTemplate.astro","title":"Creación de apps web FullStack con Angular, NestJS y Nx","lang":"es","description":"Angular es uno de los frameworks frontend más recomendados en la industria del software. Sin embargo, si desea crear una aplicación web fullStack, solo cubre la mitad de los requisitos. Desde hace un tiempo, lo he emparejado con NestJS y ha funcionado muy bien en varios proyectos.","date":"2021-05-22T23:32:13.655Z","cover":"/uploads/nx.png","author":"Yuniel Acosta","tags":["Angular","NestJS","Nx","TypeScript"],"categories":["Programming"],"draft":false};
				const file$7 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx.md";
				const url$7 = "/es/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx";
				function rawContent$7() {
					return "\n![nx](/uploads/nx.png 'angular + nestjs + nx')\n\n## ¿Por qué esta publicación?\n\nAngular es uno de los frameworks frontend más recomendados en la industria del software. Sin embargo, si desea crear una aplicación web fullStack, solo cubre la mitad de los requisitos. Por un tiempo, lo he estado emparejando con [NestJS](https://nestjs.com/) y ha funcionado muy bien en múltiples proyectos.\n\nSigo recomendando esta combinación a amigos y compañeros de trabajo, así que finalmente quería escribir la configuración que uso como referencia / punto de partida. Quizás esta publicación te inspire a que también la pruebes. Si es así, hágamelo saber cómo le funcionó.\n\n[Angular](https://angular.io/) será nuestro framework frontend para este ejemplo, usaremos [NestJS](https://nestjs.com/) para nuestro backend, y todo esto funcionará como un espacio de trabajo completo dentro de [Nx](https://nx.dev/). Introduciremos algunas mejoras en la calidad de vida y agruparemos ambos proyectos en un solo paquete.\n\n[NestJS](https://nestjs.com/) es una capa de abstracción que se encuentra encima de [Express](https://expressjs.com/es/) o [Fastify](https://www.fastify.io/), ambos frameworks REST impulsados por NodeJS. Está escrito en TypeScript y sigue muchos de los mismos patrones que se encuentran en Angular (anotaciones, DI, etc.). Nx es un conjunto de herramientas desarrolladas por ex-Googlers que ayudan a desarrollar en Monorepos. También ofrecen opciones predeterminadas bastante sensatas y anulaciones de configuración.\n\n¿Estás listo? ¡Vamos!\n\n# Scaffolding\n\nPrimero, configuraremos un nuevo espacio de trabajo Nx y crearemos una aplicación Angular y NestJS dentro de él:\n\n```shell\n❯ npx create-nx-workspace@latest\n✔ Workspace name (e.g., org name)     · hn-feed\n✔ What to create in the new workspace · angular-nest\n✔ Application name                    · client\n✔ Default stylesheet format           · css\n✔ Use Nx Cloud? (It's free and doesn't require registration.) · No\n```\n\nCuando termine, esto habrá hecho lo siguiente:\n\n1. crea un nuevo directorio con el nombre del espacio de trabajo\n2. generar un nuevo proyecto Angular ubicado en `apps/client`\n3. cree un nuevo proyecto de NestJS ubicado en `apps/api`\n4. generar una biblioteca de typescript de muestra dentro del espacio de trabajo, para ser utilizada tanto por el cliente como por la API (ubicada en `libs/api-interfaces`)\n\nLo que también es interesante es que Nx viene con herramientas mejoradas para ambos proyectos, como:\n\n- usando Jest over Karma como corredor de prueba de unidad\n- uso de Cypress sobre Protractor para pruebas E2E specs (solo Angular)\n- usando Prettier para formatear el código automáticamente\n- Configuración de TSLint decente para todo el espacio de trabajo\n\nHay [toneladas más de funciones](https://nx.dev/angular/getting-started/why-nx#10-minute-nx-overview) ofrecidas por Nx, pero esas son las que quería señalar en este momento.\n\n# Ejecutando los proyectos\n\nAhora que tenemos los proyectos básicos configurados, es hora de iniciarlos. Abra 2 ventanas de Terminal y ejecute los siguientes comandos:\n\n```shell\n`[Terminal 1]: npm run nx -- serve client `\n\n`[Terminal 2]: npm run nx -- serve api`\n```\n\nEl primer comando ejecutará el servidor de desarrollo Angular predeterminado, compilará y entregará la interfaz en [](http://localhost:4200/)<http://localhost:4200>. El segundo iniciará el dev-server de NestJS, compilará el TypeScript en JavaScript compatible con NodeJS y mostrará el resultado en [](http://localhost:3333/api)<http://localhost:3333/api>. Como una buena ventaja, Nx ha agregado una configuración de proxy para el servidor de desarrollo Angular, que enviará solicitudes de proxy a [](http://localhost:4200/api)<http://localhost:4200/api> al servidor de desarrollo de NestJS para nosotros, para que no nos encontremos con ningún problema de CORS durante el desarrollo. La configuración del proxy se puede encontrar en `apps/client/proxy.conf.json` y se hace referencia a ella dentro del archivo de definición del proyecto` angular.json`.\n\nSi abre ahora su navegador en [](http://localhost:4200/)<http://localhost:4200>, debería ver una página similar a esta:\n\n![localhost:4200](/uploads/localhost.png 'App corriendo en localhost')\n\nSi inspecciona la red y actualiza, verá una solicitud XHR a [](http://localhost:4200/api/hello)<http://localhost:4200/api/hello> mostrando que el proxy ha sido configurado correctamente.\n\n## ¿Esperar, qué?\n\nDéjame explicarte lo que está pasando:\n\nEl proyecto NestJS se configuró con un prefijo para usar con todos los controladores. Este prefijo se definió de la siguiente manera en (`apps/api/src/main.ts`)\n\n```typescript\nconst globalPrefix = 'api'\napp.setGlobalPrefix(globalPrefix)\n```\n\nNx también generó un controlador REST de muestra, llamado AppController (`apps/api/src/app/app.controller.ts`) que actualmente sirve una parte estática de datos, en nuestro caso un objeto de la interfaz `Message` escrita en Typecript y definida así (`libs/api-interfaces/src/lib/api-interfaces.ts`):\n\n```typescript\nexport interface Message {\n  message: string\n}\n```\n\nDebido a que la interfaz `Message` está definida en la biblioteca compartida, puede ser utilizada tanto por frontend como por backend. ¡Dulce seguridad de tipos en ambos proyectos!\n\nEl método AppController está anotado con\n\n```typescript\n @Get('hello')\n  getData(): Message {\n    return this.appService.getData();\n  }\n```\n\nque le dice a NestJS que exponga un nuevo GET-endpoint en [](http://localhost:3333/api/hello)<http://localhost:3333/api/hello> y devuelva nuestro objeto mensaje, cuando el servidor se está ejecutando.\n\nEn el otro extremo del stack tenemos el proyecto Angular, que se configuró para realizar una solicitud GET de muestra a este endpoint exacto. El código de muestra se puede encontrar en AppComponent de la interfaz en `apps/client/src/app/app.component.ts`\n\n```typescript\nexport class AppComponent {\n  hello$ = this.http.get<Message>('/api/hello')\n  constructor(private http: HttpClient) {}\n}\n```\n\ny se invoca usando la tubería asíncrona directamente en la plantilla:\n\n```html\n<div>Message: {{ hello$ | async | json }}</div>\n```\n\nAhora, dado que el servidor de desarrollo Angular se está ejecutando en [](http://localhost:4200/)<http://localhost:4200>, la solicitud irá a [](http://localhost/4200/api/hello)<http://localhost/4200/api/hello> debido a la ruta relativa en la llamada `httpClient`. Esto es recogido por la configuración del proxy angular y se reenvía a nuestro servidor NestJS. Impresionante 🎉\n\n# Ajustar la aplicación para el desarrollo\n\nFelicitaciones, ahora tenemos un espacio de trabajo con NestJS y Angular ejecutándose uno al lado del otro, así como un código de muestra sobre cómo llamar al backend desde el frontend. ¡Eso ya está bastante bien!\n\nLo que me gusta hacer para mejorar la experiencia de desarrollo es iniciar el servidor de desarrollo de frontend y backend en paralelo, con un solo comando. Para esto instalaremos un asistente de nodejs llamado [concurrently](https://www.npmjs.com/package/concurrently).\n\n```shell\nnpm install --save-dev concurrently\n```\n\nUna vez hecho esto, podemos adaptar el `package.json` de la siguiente manera:\n\n```shell\n\"start:fe\": \"ng serve client\",\n\"start:be\": \"ng serve api\",\n\"dev\": \"concurrently -p=\\\"{name}\\\" -n=\\\"Angular,NestJS\\\" -c=\\\"green,blue\\\" \\\"npm run start:fe\\\" \\\"npm run start:be\\\"\",\n```\n\nAhora, al ejecutar `npm run dev` se iniciarán ambos servidores de desarrollo en paralelo, prefija cada línea de la Terminal con \"Angular\" o \"NestJS\" y colorea los prefijos en verde y azul. ¡Impresionante!\n\n# Sirviendo frontend y backend desde un solo servidor para producción\n\nBien, ahora tenemos una aplicación de pila completa lista para el desarrollo. Finalicémoslo empaquetando nuestra aplicación como un único paquete npm ejecutable que servirá tanto a nuestro frontend como al backend.\n\nPara lograr esto, crearemos una compilación de producción de nuestra aplicación Angular y configuraremos nuestro servidor NestJS para que sirva al frontend bajo su ruta raíz, de modo que podamos empaquetar ambos en un paquete autónomo (para implementarlo, por ejemplo, en CloudFoundry o en alguna otra nube proveedor).\n\nPrimero, crearemos una compilación de producción de la interfaz angular:\n\n```shell\n>  npm run nx -- build client --prod\n\n> hn-feed@0.0.0 nx /Users/acosta/Projects/hn-feed\n> nx \"build\" \"client\" \"--prod\"\n\n\n> ng run client:build:production\nGenerating ES5 bundles for differential loading...\nES5 bundle generation complete.\n\n// ... A few seconds later...\n\nDate: 2020-06-17T16:14:41.427Z - Hash: 4957569a994e1b83d273 - Time: 34832ms\n```\n\nAhora nuestra salida compilada (minificada, uglificada, rellenada) se puede encontrar en `dist/apps/client`\n\nConfiguremos NestJS para que sirva a esta carpeta cuando accedamos a su ruta raíz.\n\nPrimero, instalaremos el paquete NestJS `serve-static` para permitir el servicio de activos estáticos\n\n```shell\nnpm install --save @nestjs/serve-static\n```\n\nAhora todo lo que tenemos que hacer es importar y configurar el `ServeStaticModule` proporcionado por este paquete dentro del AppModule (`apps/api/src/app/app.module.ts`)\n\n```typescript\nimport { ServeStaticModule } from '@nestjs/serve-static'\nimport { join } from 'path'\n\n// ...\n\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'client')\n    })\n  ]\n  // ...\n})\nexport class AppModule {}\n```\n\nque le indica a NestJS que ingrese a `../client` desde su propia carpeta dist (`dist/apps/api`) y sirva el contenido en su ruta raíz.\n\nY efectivamente, ejecutar solo el backend a través de `npm run start: be` y navegar a [](http://localhost:3333/)<http://localhost:3333/> debería producir el mismo resultado que antes, cuando ejecutamos el servidor de desarrollo Angular:\n\n# Empaquetando la aplicación para su implementación\n\nTodo lo que queda ahora es empaquetar todo en un paquete `npm` y estaremos listos para implementar nuestra aplicación de pila completa. Hagámoslo ahora.\n\nNecesitamos editar el `package.json` para incluir solo los archivos dist y, como conveniencia, agregaremos un script de inicio:\n\n```json\n{\n    ...\n    \"files\": [\"dist/apps/client\", \"dist/apps/api\"],\n    ...\n    scripts: {\n    \"serve\": \"node dist/apps/api/main.js\",\n    ...\n    }\n}\n```\n\nAhora, si ejecutamos `npm pack`, se generará un archivo tarball en el directorio del proyecto:\n\n```shell\nnpm pack\nnpm notice\nnpm notice 📦  hn-feed@0.0.0\nnpm notice === Tarball Contents ===\n// ...\nnpm notice === Tarball Details ===\nnpm notice name:          hn-feed\nnpm notice version:       0.0.0\nnpm notice filename:      hn-feed-0.0.0.tgz\nnpm notice total files:   14\n```\n\nAhora podemos cargar este paquete en nuestro proveedor de nube favorito, hacer que ejecute `npm install --production` después de la carga y proporcionar el script `serve` como un comando de inicio para el paquete (este paso varía según su proveedor de nube).\n\nPor supuesto, también puede ejecutar este paquete localmente, simplemente descomprimiendo el archivo tarball, ejecutando `npm install --production` dentro del directorio, luego ejecutando `npm run serve`.\n\nEspero que hayas encontrado útil esta publicación. ¡Avísame si te falta algún paso importante! Obviamente, hay mucho más que podemos hacer ahora que tenemos esta configuración, como la validación del tipo de tiempo de ejecución para nuestro frontend o backend, compartir la lógica entre el frontend y el backend mediante el uso de una biblioteca compartida en el mismo espacio de trabajo, etc. temas, con mucho gusto escribiré una publicación de seguimiento a este :)\n\n¡Gracias por leer!\n";
				}
				function compiledContent$7() {
					return html$7;
				}
				function getHeadings$7() {
					return [{"depth":2,"slug":"por-qué-esta-publicación","text":"¿Por qué esta publicación?"},{"depth":1,"slug":"scaffolding","text":"Scaffolding"},{"depth":1,"slug":"ejecutando-los-proyectos","text":"Ejecutando los proyectos"},{"depth":2,"slug":"esperar-qué","text":"¿Esperar, qué?"},{"depth":1,"slug":"ajustar-la-aplicación-para-el-desarrollo","text":"Ajustar la aplicación para el desarrollo"},{"depth":1,"slug":"sirviendo-frontend-y-backend-desde-un-solo-servidor-para-producción","text":"Sirviendo frontend y backend desde un solo servidor para producción"},{"depth":1,"slug":"empaquetando-la-aplicación-para-su-implementación","text":"Empaquetando la aplicación para su implementación"}];
				}
				function getHeaders$7() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$7();
				}				async function Content$7() {
					const { layout, ...content } = frontmatter$7;
					content.file = file$7;
					content.url = url$7;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$7 });
					return createVNode($$BlogPostTemplate, {
									file: file$7,
									url: url$7,
									content,
									frontmatter: content,
									headings: getHeadings$7(),
									rawContent: rawContent$7,
									compiledContent: compiledContent$7,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$7[Symbol.for('astro.needsHeadRendering')] = false;

const _page17 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$7,
	file: file$7,
	url: url$7,
	rawContent: rawContent$7,
	compiledContent: compiledContent$7,
	getHeadings: getHeadings$7,
	getHeaders: getHeaders$7,
	Content: Content$7,
	default: Content$7
}, Symbol.toStringTag, { value: 'Module' }));

const html$6 = "<p><img src=\"/uploads/vue3-typescript.png\" alt=\"vue3+typescript\" title=\"Vue 3 with Typescript\"></p>\n<p>Siempre uso Typescript y algunas bibliotecas de decoradores en mis proyectos de <a href=\"https://vuejs.org/\">VueJS</a>. Me ha permitido usar una sintaxis de clase para mis componentes y almacenar archivos que, creo, es más fácil de leer que la sintaxis normal de javascript de VueJS. Pasaré por un proceso paso a paso sobre cómo lograr esto. Construiremos un componente de contador que le permitirá incrementar / disminuir un contador.</p>\n<p>Primero, queremos comenzar creando un nuevo proyecto de VueJS usando la <a href=\"https://cli.vuejs.org/\">Vue CLI</a>. Si aún no lo ha hecho, puede instalar fácilmente la CLI con el siguiente comando:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">npm install -g @vue/cli</span></span></code></pre>\n<p>A continuación, vamos a crear un nuevo proyecto de VueJS con el comando <code>vue create</code>.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">vue create vue-typescript-decorators</span></span></code></pre>\n<p>Con la última versión de la CLI, puede crear un proyecto Vue 2 o 3. Una vez que ejecute el comando <code>vue create</code>, se le solicitarán las siguientes opciones. Elegiremos <code>Manually select features</code> para que podamos crear un proyecto de TypeScript con Vue 3.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">Vue CLI v4.5.9</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">?</span><span style=\"color: #C9D1D9\"> Please pick a preset:</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  standard ([Vue 2] node-sass, babel, typescript, router, Vuex, eslint, unit-jest, e2e-cypress)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  Default ([Vue 2] babel, eslint)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  Default (Vue 3 Preview) ([Vue 3] babel, eslint)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">❯ Manually </span><span style=\"color: #FF7B72\">select</span><span style=\"color: #C9D1D9\"> features</span></span></code></pre>\n<p>Se le preguntará qué funciones desea agregar al proyecto. Por ahora, solo agregaremos TypeScript, Router y Vuex.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">Vue CLI v4.5.9</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">?</span><span style=\"color: #C9D1D9\"> Please pick a preset: Manually </span><span style=\"color: #FF7B72\">select</span><span style=\"color: #C9D1D9\"> features</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">?</span><span style=\"color: #C9D1D9\"> Check the features needed </span><span style=\"color: #FF7B72\">for</span><span style=\"color: #C9D1D9\"> your project:</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◉ Choose Vue version</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◉ Babel</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◉ TypeScript</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◯ Progressive Web App (PWA) Support</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◉ Router</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">❯◉ Vuex</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◯ CSS Pre-processors</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◉ Linter / Formatter</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◯ Unit Testing</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ◯ E2E Testing</span></span></code></pre>\n<p>Se le preguntará qué versión de VueJS desea utilizar. En este ejemplo, vamos a usar la versión 3, pero este ejemplo debería funcionar bien con la versión 2 o 3 (espere cómo registra Vuex en 2 vs 3).</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">?</span><span style=\"color: #C9D1D9\"> Choose a version of Vue.js that you want to start the project with</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  2.x</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">❯ 3.x (Preview)</span></span></code></pre>\n<p>Antes de comenzar a codificar, necesitamos instalar las bibliotecas que agregan soporte de decorador a nuestro proyecto. Aquí hay una lista de bibliotecas que agregaremos:</p>\n<ul>\n<li><a href=\"https://github.com/vuejs/vue-class-component\">vue-class-component</a> utilizado para definir componentes que se instalan de forma predeterminada cuando se crea el proyecto Typescript Vue 3</li>\n<li><a href=\"https://github.com/kaorun343/vue-property-decorator\">vue-property-decorator</a> utilizado para definir <strong>props</strong>, <strong>watches</strong>, etc.</li>\n<li><a href=\"https://github.com/ktsn/vuex-class\">vuex-class</a> utilizado para importar <strong>state</strong>, <strong>getters</strong>, <strong>mutations</strong> y <strong>actions</strong> en componentes</li>\n<li><a href=\"https://github.com/gertqin/vuex-class-modules\">vuex-class-modules</a> utilizado para definir <strong>state</strong>, <strong>getters</strong>, <strong>mutations</strong> y <strong>actions</strong></li>\n</ul>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\"> npm install vue-property-decorator vuex-class vuex-class-modules -P</span></span></code></pre>\n<p>Si miramos <code>Home.vue</code> en la carpeta views, la vista generada ya usa<code> vue-class-component</code> que usa el decorador <code>Options</code> para definir un componente Vue. Dentro del decorador <code>@Options</code>, agregué el atributo <code>name</code> y llamé a esta vista <code>Home</code>. Noté que si no hace esto, es mucho más difícil averiguar qué es qué en las herramientas de Vue al inspeccionar los diferentes componentes. También observé cómo define una clase llamada <code>Home</code> como la exportación predeterminada y se extiende desde<code> Vue</code> de la biblioteca <code>vue-class-component</code>.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #8B949E\">// src/views/Home.vue</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\">script lang</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"ts\"</span><span style=\"color: #FF7B72\">></span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { Options, Vue } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"vue-class-component\"</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> HelloWorld </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"@/components/HelloWorld.vue\"</span><span style=\"color: #C9D1D9\">; </span><span style=\"color: #8B949E\">// @ is an alias to /src</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">@</span><span style=\"color: #D2A8FF\">Options</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  name: </span><span style=\"color: #A5D6FF\">\"Home\"</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  components: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    HelloWorld</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #FFA657\"> Home </span><span style=\"color: #FF7B72\">extends</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">Vue</span><span style=\"color: #FFA657\"> {}</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">&#x3C;/</span><span style=\"color: #C9D1D9\">script</span><span style=\"color: #FF7B72\">></span></span></code></pre>\n<p>A continuación, configuraremos la Vuex store. Crearé un módulo Vuex para que puedas ver cómo se ve usando la biblioteca <code>vuex-class-modules</code>. Este contraejemplo no requiere un módulo, ya que es muy simple, pero la mayoría de los proyectos aumentan en complejidad con bastante rapidez, donde dividir los stores en módulos se vuelve importante.</p>\n<p>Seguiremos adelante y crearemos una nueva store llamada <code>counter.ts</code> en <code>src/store</code>. Notarás que solo necesitamos exportar una clase predeterminada que extiende <code>VueModule</code> de<code> vuex-class-modules</code>. Dentro de la clase crearemos ejemplos de <strong>state</strong>, <strong>getters</strong>, <strong>mutations</strong> y <strong>actions</strong>.</p>\n<ul>\n<li>State - Dentro de la clase agregaremos una variable de nivel privado llamada <code>_count</code>. Todo el estado se definirá como variables de nivel de clase.</li>\n<li>Getters: creé un método getter llamado <code>count</code> para devolver el valor de la variable de nivel de clase. Todos los getters de vuex se definirán como getters de JavaScript en la clase. Este getter no era necesario para este ejemplo simple, pero lo incluí para que puedas ver ejemplos de un getter.</li>\n<li>Mutations: se agregan dos mutaciones, una para agregar al contador y otra para restar del contador. Estos son solo métodos estándar en la clase, pero deben decorarse con <code>@Mutation</code>.</li>\n<li>Actions: se agregan dos acciones, una para agregar al contador y otra para restar del contador. Cada método se ha definido con <code>async</code> ya que las acciones son funciones asincrónicas. Estos son solo métodos estándar en la clase, pero deben decorarse con <code>@Action</code>.</li>\n</ul>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #8B949E\">// src/store/counter.ts</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { VuexModule, Module, Mutation, Action } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vuex-class-modules'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">@</span><span style=\"color: #D2A8FF\">Module</span><span style=\"color: #C9D1D9\">({ generateMutationSetters: </span><span style=\"color: #79C0FF\">true</span><span style=\"color: #C9D1D9\"> })</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #FFA657\"> Counter </span><span style=\"color: #FF7B72\">extends</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">VuexModule</span><span style=\"color: #FFA657\"> {</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #8B949E\">// state</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">private</span><span style=\"color: #FFA657\"> _count </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #8B949E\">// getters</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">get</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">count</span><span style=\"color: #FFA657\">()</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">number</span><span style=\"color: #FFA657\"> </span><span style=\"color: #C9D1D9\">{</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FF7B72\">return</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">._count</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #8B949E\">// mutations</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  @</span><span style=\"color: #C9D1D9\">Mutation</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">public</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">addToCount</span><span style=\"color: #FFA657\">() </span><span style=\"color: #C9D1D9\">{</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">._count</span><span style=\"color: #FF7B72\">++</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  @</span><span style=\"color: #C9D1D9\">Mutation</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">public</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">subtractFromCount</span><span style=\"color: #FFA657\">() </span><span style=\"color: #C9D1D9\">{</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">._count </span><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">._count</span><span style=\"color: #FF7B72\">--</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #8B949E\">// actions</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  @</span><span style=\"color: #C9D1D9\">Action</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">public</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">add</span><span style=\"color: #FFA657\">()</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #FFA657\"> Promise&#x3C;</span><span style=\"color: #79C0FF\">void</span><span style=\"color: #FFA657\">> </span><span style=\"color: #C9D1D9\">{</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">addToCount</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  @</span><span style=\"color: #C9D1D9\">Action</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">public</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">subtract</span><span style=\"color: #FFA657\">()</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #FFA657\"> Promise&#x3C;</span><span style=\"color: #79C0FF\">void</span><span style=\"color: #FFA657\">> </span><span style=\"color: #C9D1D9\">{</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">this</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">subtractFromCount</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">}</span></span></code></pre>\n<p>Ahora necesitamos registrar <code>counter.ts</code> como un módulo usando Vuex 4 (la versión 4 se usa automáticamente en un proyecto de Vue 3). Usando la nueva sintaxis de Vuex 4, creamos una store vacía con <code>createStore</code> y luego creamos una nueva instancia de <code>Counter</code> y la registramos con el nombre de módulo de <code>counter</code>. Haremos esto en <code>index.ts</code> para definir el módulo contador y cualquier módulo subsiguiente que creemos.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #8B949E\">// src/store/index.ts</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { createStore } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vuex'</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> Counter </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'./counter'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">store</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">createStore</span><span style=\"color: #C9D1D9\">({})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">// tslint:disable-next-line:no-unused-expression</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">Counter</span><span style=\"color: #C9D1D9\">({ store, name: </span><span style=\"color: #A5D6FF\">'counter'</span><span style=\"color: #C9D1D9\"> })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> </span><span style=\"color: #C9D1D9\">store</span></span></code></pre>\n<p>Ahora vamos a crear el componente contador. Cree un archivo llamado <code>Counter.vue</code> en <code>src/components</code>. Comenzaremos exportando un componente de nivel de clase. Usaremos la anotación <code>@Options</code> para definir el nombre del componente como <code>Counter</code>. Por último, crearemos una constante que haga referencia al módulo Vuex <code>counter</code> usando la biblioteca <code>vuex-class</code>.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\">script lang</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"ts\"</span><span style=\"color: #FF7B72\">></span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { Options, Vue } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"vue-class-component\"</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { Prop } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"vue-property-decorator\"</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { namespace } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">\"vuex-class\"</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">counterModule</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">namespace</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">\"counter\"</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">@</span><span style=\"color: #D2A8FF\">Options</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  name: </span><span style=\"color: #A5D6FF\">\"Counter\"</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">})</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #FFA657\"> Counter </span><span style=\"color: #FF7B72\">extends</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">Vue</span><span style=\"color: #FFA657\"> {</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  </span><span style=\"color: #FF7B72\">...</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">}</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">&#x3C;/</span><span style=\"color: #C9D1D9\">script</span><span style=\"color: #FF7B72\">></span></span>\n<span class=\"line\"></span></code></pre>\n<p>Agregaremos una propiedad al componente <code>Counter</code> solo como un ejemplo de cómo usar el decorador <code>@Prop</code> de la biblioteca <code>vue-property-decorator</code>. Esta propiedad no tiene ningún propósito real en este ejemplo, solo le da una idea de cómo usarla. Hay una forma de definir la propiedad en el decorador <code>@Options</code> pero prefiero usar <code>vue-property-decorator</code> en su lugar.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">@</span><span style=\"color: #D2A8FF\">Prop</span><span style=\"color: #C9D1D9\">({ type: </span><span style=\"color: #79C0FF\">String</span><span style=\"color: #C9D1D9\"> })</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">private msg</span><span style=\"color: #FF7B72\">!</span><span style=\"color: #C9D1D9\">: string;</span></span></code></pre>\n<p>Para hacer referencia al recuento en el estado de Vuex, podemos usar el decorador de espacio de nombres de <code>vuex-class</code> para crear una variable de nivel privado en el componente. También podemos hacer lo mismo con los getters en Vuex. En ambos casos, especifiqué el nombre de la propiedad en la store Vuex dentro del decorador. Esto solo es necesario si el nombre de la propiedad Vuex difiere de la variable de nivel privado que está creando.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">  @counterModule.</span><span style=\"color: #D2A8FF\">State</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">\"_count\"</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  private counter</span><span style=\"color: #FF7B72\">!</span><span style=\"color: #C9D1D9\">: number;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  @counterModule.</span><span style=\"color: #D2A8FF\">Getter</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">\"count\"</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  private getCounter</span><span style=\"color: #FF7B72\">!</span><span style=\"color: #C9D1D9\">: () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> number;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Para hacer referencia a las acciones en la Vuex store, usaremos el decorador namespaced nuevamente para crear variables de nivel privado en el componente para hacer referencia a las acciones de Vuex.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">  @counterModule.Action</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  private add</span><span style=\"color: #FF7B72\">!</span><span style=\"color: #C9D1D9\">: () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Promise</span><span style=\"color: #FF7B72\">&#x3C;void></span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  @counterModule.Action</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  private subtract</span><span style=\"color: #FF7B72\">!</span><span style=\"color: #C9D1D9\">: () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Promise</span><span style=\"color: #FF7B72\">&#x3C;void></span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Lo último que debe hacer en el componente es crear la plantilla (template). Esto es bastante sencillo. Crearemos un <code>h1</code> que muestre la propiedad pasada, dos botones para sumar y restar del contador y dos <code>divs</code> para mostrar el contador del estado de Vuex y los getters.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"hello\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">h1</span><span style=\"color: #C9D1D9\">>{{ msg }}&#x3C;/</span><span style=\"color: #7EE787\">h1</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">@click</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"add\"</span><span style=\"color: #C9D1D9\">>+&#x3C;/</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">@click</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"subtract\"</span><span style=\"color: #C9D1D9\">>-&#x3C;/</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">>State: {{ counter }}&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">>Getter: {{ getCounter }}&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>La versión final de <code>Counter.vue</code> se debe ver así.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">// src/components/Counter.vue</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"hello\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">h1</span><span style=\"color: #C9D1D9\">>{{ msg }}&#x3C;/</span><span style=\"color: #7EE787\">h1</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">@click</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"add\"</span><span style=\"color: #C9D1D9\">>+&#x3C;/</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">@click</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"subtract\"</span><span style=\"color: #C9D1D9\">>-&#x3C;/</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">>State: {{ counter }}&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">>Getter: {{ getCounter }}&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">lang</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"ts\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { Options, Vue } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vue-class-component'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { Prop } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vue-property-decorator'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { namespace } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vuex-class'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">counterModule</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">namespace</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'counter'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  @</span><span style=\"color: #D2A8FF\">Options</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    name: </span><span style=\"color: #A5D6FF\">'Counter'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #FFA657\"> Counter </span><span style=\"color: #FF7B72\">extends</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">Vue</span><span style=\"color: #FFA657\"> {</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    @</span><span style=\"color: #D2A8FF\">Prop</span><span style=\"color: #FFA657\">({ </span><span style=\"color: #C9D1D9\">type: </span><span style=\"color: #79C0FF\">String</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">})</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    </span><span style=\"color: #FF7B72\">private</span><span style=\"color: #FFA657\"> msg</span><span style=\"color: #FF7B72\">!:</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">string</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    @</span><span style=\"color: #C9D1D9\">counterModule</span><span style=\"color: #FFA657\">.</span><span style=\"color: #D2A8FF\">State</span><span style=\"color: #FFA657\">(</span><span style=\"color: #A5D6FF\">'_count'</span><span style=\"color: #FFA657\">)</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    </span><span style=\"color: #FF7B72\">private</span><span style=\"color: #FFA657\"> counter</span><span style=\"color: #FF7B72\">!:</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">number</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    @</span><span style=\"color: #C9D1D9\">counterModule</span><span style=\"color: #FFA657\">.</span><span style=\"color: #D2A8FF\">Getter</span><span style=\"color: #FFA657\">(</span><span style=\"color: #A5D6FF\">'count'</span><span style=\"color: #FFA657\">)</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    </span><span style=\"color: #FF7B72\">private</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">getCounter</span><span style=\"color: #FF7B72\">!:</span><span style=\"color: #FFA657\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">number</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    @</span><span style=\"color: #C9D1D9\">counterModule</span><span style=\"color: #FFA657\">.</span><span style=\"color: #C9D1D9\">Action</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    </span><span style=\"color: #FF7B72\">private</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">add</span><span style=\"color: #FF7B72\">!:</span><span style=\"color: #FFA657\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #FFA657\"> Promise&#x3C;</span><span style=\"color: #79C0FF\">void</span><span style=\"color: #FFA657\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    @</span><span style=\"color: #C9D1D9\">counterModule</span><span style=\"color: #FFA657\">.</span><span style=\"color: #C9D1D9\">Action</span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">    </span><span style=\"color: #FF7B72\">private</span><span style=\"color: #FFA657\"> </span><span style=\"color: #D2A8FF\">subtract</span><span style=\"color: #FF7B72\">!:</span><span style=\"color: #FFA657\"> () </span><span style=\"color: #FF7B72\">=></span><span style=\"color: #FFA657\"> Promise&#x3C;</span><span style=\"color: #79C0FF\">void</span><span style=\"color: #FFA657\">></span></span>\n<span class=\"line\"><span style=\"color: #FFA657\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>Por último, vamos a colocar el componente <code>Counter</code> en la página de inicio. Pasaremos el mensaje de <code>Counter</code> al componente.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">// src/views/Home.vue</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"home\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">alt</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"Vue logo\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"../assets/logo.png\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #FFA198; font-style: italic\">Counter</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">msg</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"Counter\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #FFA198; font-style: italic\">HelloWorld</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">msg</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"Welcome to Your Vue.js + TypeScript App\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">lang</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"ts\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> { Options, Vue } </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'vue-class-component'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> HelloWorld </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'@/components/HelloWorld.vue'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #8B949E\">// @ is an alias to /src</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">import</span><span style=\"color: #C9D1D9\"> Counter </span><span style=\"color: #FF7B72\">from</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'@/components/Counter.vue'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  @</span><span style=\"color: #D2A8FF\">Options</span><span style=\"color: #C9D1D9\">({</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    name: </span><span style=\"color: #A5D6FF\">'Home'</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    components: {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      HelloWorld,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      Counter</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  })</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">export</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">default</span><span style=\"color: #FFA657\"> </span><span style=\"color: #FF7B72\">class</span><span style=\"color: #FFA657\"> Home </span><span style=\"color: #FF7B72\">extends</span><span style=\"color: #FFA657\"> </span><span style=\"color: #79C0FF\">Vue</span><span style=\"color: #FFA657\"> {}</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>Todo lo que necesitas ahora es correr el proyecto.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">npm run serve</span></span></code></pre>\n<p>Ahora simplemente vaya a <a href=\"http://localhost:8080/\">http://localhost:8080/</a>. Puede encontrar el código fuente de ejemplo <a href=\"https://github.com/yacosta738/vue-typescript-decorators\">aquí</a>.</p>";

				const frontmatter$6 = {"minutesRead":8,"layout":"../../../components/templates/BlogPostTemplate.astro","title":"Vue 3 con Typescript y Decoradores","description":"Siempre uso Typescript y algunas bibliotecas de decoradores en mis proyectos de VueJS. Me ha permitido usar una sintaxis de clase para mis componentes y almacenar archivos que, creo, es más fácil de leer que la sintaxis normal de javascript de VueJS. Pasaré por un proceso paso a paso sobre cómo lograr esto. Construiremos un componente de contador que le permitirá incrementar / disminuir un contador.","date":"2021-05-30T19:54:13.642Z","cover":"/uploads/vue3-typescript.png","author":"Yuniel Acosta","lang":"es","tags":["VueJS","TypeScript","Decorators","VueX","Components"],"categories":["Programming"],"draft":false};
				const file$6 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/vue-3-with-typescript-and-decorators.md";
				const url$6 = "/es/blog/vue-3-with-typescript-and-decorators";
				function rawContent$6() {
					return "\n![vue3+typescript](/uploads/vue3-typescript.png 'Vue 3 with Typescript')\n\nSiempre uso Typescript y algunas bibliotecas de decoradores en mis proyectos de [VueJS](https://vuejs.org/). Me ha permitido usar una sintaxis de clase para mis componentes y almacenar archivos que, creo, es más fácil de leer que la sintaxis normal de javascript de VueJS. Pasaré por un proceso paso a paso sobre cómo lograr esto. Construiremos un componente de contador que le permitirá incrementar / disminuir un contador.\n\nPrimero, queremos comenzar creando un nuevo proyecto de VueJS usando la [Vue CLI](https://cli.vuejs.org/). Si aún no lo ha hecho, puede instalar fácilmente la CLI con el siguiente comando:\n\n```shell\nnpm install -g @vue/cli\n```\n\nA continuación, vamos a crear un nuevo proyecto de VueJS con el comando `vue create`.\n\n```shell\nvue create vue-typescript-decorators\n```\n\nCon la última versión de la CLI, puede crear un proyecto Vue 2 o 3. Una vez que ejecute el comando `vue create`, se le solicitarán las siguientes opciones. Elegiremos `Manually select features` para que podamos crear un proyecto de TypeScript con Vue 3.\n\n```shell\nVue CLI v4.5.9\n? Please pick a preset:\n  standard ([Vue 2] node-sass, babel, typescript, router, Vuex, eslint, unit-jest, e2e-cypress)\n  Default ([Vue 2] babel, eslint)\n  Default (Vue 3 Preview) ([Vue 3] babel, eslint)\n❯ Manually select features\n```\n\nSe le preguntará qué funciones desea agregar al proyecto. Por ahora, solo agregaremos TypeScript, Router y Vuex.\n\n```shell\nVue CLI v4.5.9\n? Please pick a preset: Manually select features\n? Check the features needed for your project:\n ◉ Choose Vue version\n ◉ Babel\n ◉ TypeScript\n ◯ Progressive Web App (PWA) Support\n ◉ Router\n❯◉ Vuex\n ◯ CSS Pre-processors\n ◉ Linter / Formatter\n ◯ Unit Testing\n ◯ E2E Testing\n```\n\nSe le preguntará qué versión de VueJS desea utilizar. En este ejemplo, vamos a usar la versión 3, pero este ejemplo debería funcionar bien con la versión 2 o 3 (espere cómo registra Vuex en 2 vs 3).\n\n```shell\n? Choose a version of Vue.js that you want to start the project with\n  2.x\n❯ 3.x (Preview)\n```\n\nAntes de comenzar a codificar, necesitamos instalar las bibliotecas que agregan soporte de decorador a nuestro proyecto. Aquí hay una lista de bibliotecas que agregaremos:\n\n- [vue-class-component](https://github.com/vuejs/vue-class-component) utilizado para definir componentes que se instalan de forma predeterminada cuando se crea el proyecto Typescript Vue 3\n- [vue-property-decorator](https://github.com/kaorun343/vue-property-decorator) utilizado para definir **props**, **watches**, etc.\n- [vuex-class](https://github.com/ktsn/vuex-class) utilizado para importar **state**, **getters**, **mutations** y **actions** en componentes\n- [vuex-class-modules](https://github.com/gertqin/vuex-class-modules) utilizado para definir **state**, **getters**, **mutations** y **actions**\n\n```shell\n npm install vue-property-decorator vuex-class vuex-class-modules -P\n```\n\nSi miramos `Home.vue` en la carpeta views, la vista generada ya usa` vue-class-component` que usa el decorador `Options` para definir un componente Vue. Dentro del decorador `@Options`, agregué el atributo `name` y llamé a esta vista `Home`. Noté que si no hace esto, es mucho más difícil averiguar qué es qué en las herramientas de Vue al inspeccionar los diferentes componentes. También observé cómo define una clase llamada `Home` como la exportación predeterminada y se extiende desde` Vue` de la biblioteca `vue-class-component`.\n\n```typescript\n// src/views/Home.vue\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport HelloWorld from \"@/components/HelloWorld.vue\"; // @ is an alias to /src\n\n@Options({\n  name: \"Home\",\n  components: {\n    HelloWorld\n  }\n})\nexport default class Home extends Vue {}\n</script>\n```\n\nA continuación, configuraremos la Vuex store. Crearé un módulo Vuex para que puedas ver cómo se ve usando la biblioteca `vuex-class-modules`. Este contraejemplo no requiere un módulo, ya que es muy simple, pero la mayoría de los proyectos aumentan en complejidad con bastante rapidez, donde dividir los stores en módulos se vuelve importante.\n\nSeguiremos adelante y crearemos una nueva store llamada `counter.ts` en `src/store`. Notarás que solo necesitamos exportar una clase predeterminada que extiende `VueModule` de` vuex-class-modules`. Dentro de la clase crearemos ejemplos de **state**, **getters**, **mutations** y **actions**.\n\n- State - Dentro de la clase agregaremos una variable de nivel privado llamada `_count`. Todo el estado se definirá como variables de nivel de clase.\n- Getters: creé un método getter llamado `count` para devolver el valor de la variable de nivel de clase. Todos los getters de vuex se definirán como getters de JavaScript en la clase. Este getter no era necesario para este ejemplo simple, pero lo incluí para que puedas ver ejemplos de un getter.\n- Mutations: se agregan dos mutaciones, una para agregar al contador y otra para restar del contador. Estos son solo métodos estándar en la clase, pero deben decorarse con `@Mutation`.\n- Actions: se agregan dos acciones, una para agregar al contador y otra para restar del contador. Cada método se ha definido con `async` ya que las acciones son funciones asincrónicas. Estos son solo métodos estándar en la clase, pero deben decorarse con `@Action`.\n\n```typescript\n// src/store/counter.ts\nimport { VuexModule, Module, Mutation, Action } from 'vuex-class-modules'\n\n@Module({ generateMutationSetters: true })\nexport default class Counter extends VuexModule {\n  // state\n  private _count = 0\n\n  // getters\n  get count(): number {\n    return this._count\n  }\n\n  // mutations\n  @Mutation\n  public addToCount() {\n    this._count++\n  }\n\n  @Mutation\n  public subtractFromCount() {\n    if (this._count > 0) {\n      this._count--\n    }\n  }\n\n  // actions\n  @Action\n  public async add(): Promise<void> {\n    this.addToCount()\n  }\n\n  @Action\n  public async subtract(): Promise<void> {\n    this.subtractFromCount()\n  }\n}\n```\n\nAhora necesitamos registrar `counter.ts` como un módulo usando Vuex 4 (la versión 4 se usa automáticamente en un proyecto de Vue 3). Usando la nueva sintaxis de Vuex 4, creamos una store vacía con `createStore` y luego creamos una nueva instancia de `Counter` y la registramos con el nombre de módulo de `counter`. Haremos esto en `index.ts` para definir el módulo contador y cualquier módulo subsiguiente que creemos.\n\n```typescript\n// src/store/index.ts\nimport { createStore } from 'vuex'\nimport Counter from './counter'\n\nconst store = createStore({})\n\n// tslint:disable-next-line:no-unused-expression\nnew Counter({ store, name: 'counter' })\n\nexport default store\n```\n\nAhora vamos a crear el componente contador. Cree un archivo llamado `Counter.vue` en `src/components`. Comenzaremos exportando un componente de nivel de clase. Usaremos la anotación `@Options` para definir el nombre del componente como `Counter`. Por último, crearemos una constante que haga referencia al módulo Vuex `counter` usando la biblioteca `vuex-class`.\n\n```typescript\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport { Prop } from \"vue-property-decorator\";\nimport { namespace } from \"vuex-class\";\n\nconst counterModule = namespace(\"counter\");\n\n@Options({\n  name: \"Counter\"\n})\nexport default class Counter extends Vue {\n  ...\n}\n</script>\n\n```\n\nAgregaremos una propiedad al componente `Counter` solo como un ejemplo de cómo usar el decorador `@Prop` de la biblioteca `vue-property-decorator`. Esta propiedad no tiene ningún propósito real en este ejemplo, solo le da una idea de cómo usarla. Hay una forma de definir la propiedad en el decorador `@Options` pero prefiero usar `vue-property-decorator` en su lugar.\n\n```typescript\n@Prop({ type: String })\nprivate msg!: string;\n```\n\nPara hacer referencia al recuento en el estado de Vuex, podemos usar el decorador de espacio de nombres de `vuex-class` para crear una variable de nivel privado en el componente. También podemos hacer lo mismo con los getters en Vuex. En ambos casos, especifiqué el nombre de la propiedad en la store Vuex dentro del decorador. Esto solo es necesario si el nombre de la propiedad Vuex difiere de la variable de nivel privado que está creando.\n\n```typescript\n  @counterModule.State(\"_count\")\n  private counter!: number;\n\n  @counterModule.Getter(\"count\")\n  private getCounter!: () => number;\n\n```\n\nPara hacer referencia a las acciones en la Vuex store, usaremos el decorador namespaced nuevamente para crear variables de nivel privado en el componente para hacer referencia a las acciones de Vuex.\n\n```typescript\n  @counterModule.Action\n  private add!: () => Promise<void>;\n\n  @counterModule.Action\n  private subtract!: () => Promise<void>;\n\n```\n\nLo último que debe hacer en el componente es crear la plantilla (template). Esto es bastante sencillo. Crearemos un `h1` que muestre la propiedad pasada, dos botones para sumar y restar del contador y dos `divs` para mostrar el contador del estado de Vuex y los getters.\n\n```html\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <div>\n      <button @click=\"add\">+</button>\n      <button @click=\"subtract\">-</button>\n    </div>\n    <div>State: {{ counter }}</div>\n    <div>Getter: {{ getCounter }}</div>\n  </div>\n</template>\n```\n\nLa versión final de `Counter.vue` se debe ver así.\n\n```html\n// src/components/Counter.vue\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <div>\n      <button @click=\"add\">+</button>\n      <button @click=\"subtract\">-</button>\n    </div>\n    <div>State: {{ counter }}</div>\n    <div>Getter: {{ getCounter }}</div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n  import { Options, Vue } from 'vue-class-component'\n  import { Prop } from 'vue-property-decorator'\n  import { namespace } from 'vuex-class'\n\n  const counterModule = namespace('counter')\n\n  @Options({\n    name: 'Counter'\n  })\n  export default class Counter extends Vue {\n    @Prop({ type: String })\n    private msg!: string\n\n    @counterModule.State('_count')\n    private counter!: number\n\n    @counterModule.Getter('count')\n    private getCounter!: () => number\n\n    @counterModule.Action\n    private add!: () => Promise<void>\n\n    @counterModule.Action\n    private subtract!: () => Promise<void>\n  }\n</script>\n```\n\nPor último, vamos a colocar el componente `Counter` en la página de inicio. Pasaremos el mensaje de `Counter` al componente.\n\n```html\n// src/views/Home.vue\n<template>\n  <div class=\"home\">\n    <img alt=\"Vue logo\" src=\"../assets/logo.png\" />\n    <Counter msg=\"Counter\" />\n    <HelloWorld msg=\"Welcome to Your Vue.js + TypeScript App\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\n  import { Options, Vue } from 'vue-class-component'\n  import HelloWorld from '@/components/HelloWorld.vue' // @ is an alias to /src\n  import Counter from '@/components/Counter.vue'\n\n  @Options({\n    name: 'Home',\n    components: {\n      HelloWorld,\n      Counter\n    }\n  })\n  export default class Home extends Vue {}\n</script>\n```\n\nTodo lo que necesitas ahora es correr el proyecto.\n\n```shell\nnpm run serve\n```\n\nAhora simplemente vaya a <http://localhost:8080/>. Puede encontrar el código fuente de ejemplo [aquí](https://github.com/yacosta738/vue-typescript-decorators).\n";
				}
				function compiledContent$6() {
					return html$6;
				}
				function getHeadings$6() {
					return [];
				}
				function getHeaders$6() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$6();
				}				async function Content$6() {
					const { layout, ...content } = frontmatter$6;
					content.file = file$6;
					content.url = url$6;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$6 });
					return createVNode($$BlogPostTemplate, {
									file: file$6,
									url: url$6,
									content,
									frontmatter: content,
									headings: getHeadings$6(),
									rawContent: rawContent$6,
									compiledContent: compiledContent$6,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$6[Symbol.for('astro.needsHeadRendering')] = false;

const _page18 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$6,
	file: file$6,
	url: url$6,
	rawContent: rawContent$6,
	compiledContent: compiledContent$6,
	getHeadings: getHeadings$6,
	getHeaders: getHeaders$6,
	Content: Content$6,
	default: Content$6
}, Symbol.toStringTag, { value: 'Module' }));

const html$5 = "<p><img src=\"/uploads/visual-studio-code.jpg\" alt=\"Top-Ten-Code-Extensions-of-2021\" title=\"top 10 vs code extensions\"></p>\n<p>Visual Studio Code es uno de los editores de códigos más utilizados en la comunidad de desarrolladores. Una de las razones de la popularidad de VS Code es sus muchas extensiones que aceleran el proceso de desarrollo.</p>\n<p>En esta guía, exploraremos las 10 <a href=\"https://code.visualstudio.com/docs/editor/extension-gallery\">extensiones de VS Code</a> que cada desarrollador web debe saber en 2021. Estas herramientas están diseñadas para mejorar la experiencia de desarrollo y haga que el trabajo del desarrollador sea más fácil de varias maneras.</p>\n<p>Cubriremos las siguientes extensiones de VS Code:</p>\n<ol>\n<li>Auto Rename Tag</li>\n<li>Bracket Pair Colorizer</li>\n<li>Snippets</li>\n<li>Better Comments</li>\n<li>Markdown All in One</li>\n<li>Icons</li>\n<li>Prettier</li>\n<li>Import Cost</li>\n<li>Tabnine</li>\n<li>GitLens</li>\n</ol>\n<h2 id=\"1-auto-rename-tag\">1. Auto Rename Tag</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag\">Auto Rename Tag</a> es una extensión de VS Code super útil para desarrolladores web. Como sugieren el nombre, <code>Auto Rename Tag</code> cambia el nombre de la segunda etiqueta a la vez que la primera se actualiza y viceversa:</p>\n<p><img src=\"/uploads/auto-rename-tag.gif\" alt=\"Auto-Rename-Tag-Gif\" title=\"auto rename\"></p>\n<p>Encontrarás esta extensión útil no solo conHTML, sino también con React porque <a href=\"https://reactjs.org/docs/introducing-jsx.html\">JSX</a>.</p>\n<p><img src=\"/uploads/jsx.gif\" alt=\"React-JSX-Auto-Rename-Tag\" title=\"react jsx auto rename tag\"></p>\n<p>En el ejemplo anterior, solo hay texto dentro de las etiquetas, pero en una aplicación real, puede haber etiquetas y elementos anidados, lo que hace que las actualizaciones manuales sean difíciles y tediosas.</p>\n<h2 id=\"2-bracket-pair-colorizer\">2. Bracket Pair Colorizer</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer\">Bracket Pair Colorizer</a> es una extensión que colorea con el mismo color los corchetes correspondientes. Tener componentes anidados, funciones, objetos, etc., etc., en un archivo, pueden confundirse con múltiples paréntesis, corchetes, etc.</p>\n<p><img src=\"/uploads/bracket-pair-colorizer-example.gif\" alt=\"Bracket-Pair-Colorizer-Example\" title=\"Ejemplo bracket pair colorizzer\"></p>\n<p><a href=\"https://blog.logrocket.com/top-10-vs-code-extensions-2021/\"></a></p>\n<p>Por ejemplo, considere el siguiente fragmento de código:</p>\n<p><img src=\"/uploads/bracket-pair-colorizer-code-snippet.png\" alt=\"Bracket-Pair-Colorizer-Code-Snippet\" title=\"Fragmento de código bracket pair colorizer\"></p>\n<p>A primera vista, es bastante difícil diferenciar entre diferentes bloques de código en el código, pero la extensión de <code>Bracket Pair Colorizer</code> colorea los paréntesis y corchetes correspondientes para facilitar la navegación y accesibilidad.</p>\n<p><img src=\"/uploads/bracket-pair-colorizer-extension-example.png\" alt=\"Bracket-Pair-Colorizer-Extension-Example\" title=\"Ejemplo de la extensión bracket pair colorizer\"></p>\n<h2 id=\"3-snippets\">3. Snippets</h2>\n<p><a href=\"https://code.visualstudio.com/docs/editor/userdefinedsnippets\">Snippets</a> son la mejor manera de ahorrar tiempo y aumentar su productividad. Esta no es una sola extensión, sino una colección de extensiones con varios fragmentos de códigos para diferentes lenguajes de programación.</p>\n<p>A continuación se presentan algunas extensiones de fragmentos de código popular:</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=johnpapa.Angular2\">Angular Snippets (version 11)</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=ms-python.python\">Python</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=xabikos.JavaScriptSnippets\">JavaScript (ES6) code snippets</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=abusaidm.html-snippets\">HTML Snippets</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets\">ES7 React/Redux/GraphQL/React-Native snippets</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=hollowtree.vue-snippets\">Vue 3 Snippets</a></li>\n</ul>\n<p>Por ejemplo, puede ser bastante tedioso repetir la sintaxis para componentes funcionales en React cada vez que creas un nuevo componente. Usando los fragmentos de código de la extensión <a href=\"https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets\">ES7 React/Redux/GraphQL/React-Native snippets</a>, puede usar el acceso directo <code>rfc</code> para crear componentes funcionales y pulse Enter.</p>\n<p><img src=\"/uploads/react-redux-graphql-extension.gif\" alt=\"React-Redux-GraphQL-Extension\" title=\"Extensión react redux graphql\"></p>\n<h2 id=\"4-better-comments\">4. Better Comments</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments\">Better Comments</a> está diseñado para ayudarnos a escribir comentarios más amigables para las personas en su código.</p>\n<p>Los comentarios claros son beneficiosos no solo para alguien que esté revisando su código, sino también para usted. Es bastante común que los desarrolladores se pierdan en su propio código cuando lo visitan después de un tiempo. Tener comentarios descriptivos puede ahorrarle mucho tiempo a usted y a su equipo.</p>\n<p>Con la extensión <code>Better Comments</code> de VS Code, puede clasificar sus anotaciones en alertas, consultas, tareas pendientes, aspectos destacados, etc.</p>\n<p>Puede utilizar cualquiera de los siguientes caracteres después de una doble barra inclinada (<code>//</code>):</p>\n<ul>\n<li><code>*</code> Para texto resaltado</li>\n<li><code>!</code> Para errores y advertencias</li>\n<li><code>?</code> Para consultas y preguntas</li>\n<li><code>//</code> para tachado</li>\n<li><code>TODO</code> para tareas pendientes</li>\n</ul>\n<p><img src=\"/uploads/better-comments-vs-code-extension-example.png\" alt=\"Better-Comments-VS-Code-Extension-Example\"> “Ejemplo de la extensión better comments de vs code”)</p>\n<h2 id=\"5-markdown-all-in-one\">5. Markdown All in One</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one\">Markdown All in One</a> es una extensión que se encarga de todas sus necesidades del formato markdown, como la vista previa automática, atajos, autocompletar, etc.</p>\n<p>Desde su lanzamiento en 2004, Markdown se ha convertido en uno de los lenguajes de marcado más populares y preferidos. Los escritores técnicos de todo el mundo utilizan ampliamente Markdown para artículos, blogs, documentación, etc., debido a su simplicidad ligera y su uso multiplataforma. Su popularidad ha dado lugar a otras variantes de Markdown, como <a href=\"https://github.github.com/gfm/\">GitHub Flavored Markdown</a>, <a href=\"https://mdxjs.com/\">MDX</a>, etc.</p>\n<p>Por ejemplo, para poner en negrita un texto en Markdown, puede seleccionar ese texto y usar el atajo <code>Ctrl + B</code> para aumentar su productividad.</p>\n<p><img src=\"/uploads/markdown-all-in-one-extension.gif\" alt=\"Markdown-All-In-One-Extension\" title=\"Extensión markdown all in one\"></p>\n<h2 id=\"6-icons\">6. Icons</h2>\n<p>Tener íconos descriptivos puede ayudarlo a diferenciar entre archivos y carpetas. Los iconos también hacen que el desarrollo sea más divertido.</p>\n<p>Aquí hay una comparación entre dos pestañas de VS Code. Uno tiene iconos, el otro no.</p>\n<p><img src=\"/uploads/vs-code-tabs-comparison.png\" alt=\"VS-Code-Tabs-Comparison\" title=\"Comparación entre dos pestañas de vs code\"></p>\n<p>Hay muchas extensiones de iconos entre las que puede elegir. Las colecciones de iconos populares incluyen:</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons\">vscode-icons</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme\">Material Icon Theme</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme-icons\">Material Theme Icons</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=LaurentTreguier.vscode-simple-icons\">Simple icons</a></li>\n</ul>\n<h2 id=\"7-prettier\">7. Prettier</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\">Prettier</a> es un formateador de código basado en buenas prácticas. Con más de 38.5k estrellas en GitHub, es uno de los formateadores de código más populares disponibles. Tener un formato y un estilo coherentes en todo el código puede ahorrar mucho tiempo, especialmente al colaborar con otros desarrolladores.</p>\n<p>Consideren el siguiente bloque de código:</p>\n<p><img src=\"/uploads/prettier-code-formatter-example.png\" alt=\"Prettier-Demo-Code-Example\" title=\"Ejemplo de demo con prettier\"></p>\n<p>Es posible que observe algunos problemas de formato con este código, que incluyen:</p>\n<ul>\n<li>Una combinación de comillas simples y dobles.</li>\n<li>Uso irregular de punto y coma (<code>;</code>)</li>\n<li>Sangría incorrecta de la declaración de la consola en la línea 6</li>\n</ul>\n<p>Así es como Prettier formatearía y corregiría el código anterior:</p>\n<p><img src=\"/uploads/prettier-formatted-code-example.gif\" alt=\"prettier format\" title=\"Ejemplo con prettier\"></p>\n<p>Esta extensión admite <a href=\"https://prettier.io/docs/en/plugins.html\">Prettier plugins</a> cuando estás usando una versión de Prettier resuelta localmente. <br>\nPuede configurar esta extensión para que se adapte a sus necesidades de formato e incluso activarla con el guardado automático.</p>\n<h2 id=\"8-import-cost\">8. Import Cost</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost\">Import Cost</a> es una extensión que muestra un tamaño estimado de los paquetes importados en el código. Cuando se trabaja en un proyecto, es importante no comprometer la experiencia del usuario al importar paquetes pesados. Una forma de evitar esto es realizar un seguimiento del tamaño de las dependencias adicionales en su código.</p>\n<p><img src=\"/uploads/import-cost-extension-example.png\" alt=\"Import-Cost-Extension-Example\" title=\"Ejemplo de la extensión import cost\"></p>\n<p>Cuando la importación es demasiado grande, Import Cost le advierte mostrando el tamaño en rojo. Puede configurar qué tamaño debe considerarse pequeño, mediano o grande.</p>\n<h2 id=\"9-tabnine\">9. Tabnine</h2>\n<p><a href=\"https://www.tabnine.com/\">Tabnine</a> se creó para ayudar a los desarrolladores <strong>a codificar más rápido, reducir errores y descubrir las mejores prácticas de codificación</strong> mediante el aprendizaje automático. El poderoso asistente de Inteligencia Artificial de Tabnine funciona en la comodidad de su IDE. Tabnine estudia el código compartido públicamente y utiliza el aprendizaje profundo de inteligencia artificial para predecir el completamiento del código con un solo clic.</p>\n<p>Deep TabNine se basa en <a href=\"https://medium.com/syncedreview/openai-guards-its-ml-model-code-data-to-thwart-malicious-usage-d9f7e9c43cd0\">GPT-2</a> un gran transformador basado en el modelo de lenguaje que puede generar párrafos de texto realistas. El modelo, desarrollado por la empresa de investigación OpenAI con sede en San Francisco, demuestra un rendimiento convincente en una variedad de tareas lingüísticas, como traducción automática, respuesta a preguntas, comprensión de lectura y resumen.</p>\n<p>A diferencia de otros complementos de completado de código, Deep TabNine se compila automáticamente en función del uso y los hábitos anteriores de un programador, e incluye la probabilidad de las diferentes predicciones que proporciona. Si aparece un código similar en proyectos anteriores, Deep TabNine también mostrará la dirección directamente en el cuadro de candidato de finalización.</p>\n<p>Tabnine funciona con los principales lenguajes de programación, incluidos JavaScript, Python, TypeScript, PHP, C/C++, HTML/CSS, Go, Java, Ruby, C#, Rust, SQL, Bash, Kotlin, Julia, Lua, OCaml, Perl, Haskell, etc.</p>\n<p>El sitio web de TabNine con instrucciones de instalación y otra información se encuentra <a href=\"https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode\">aquí</a>.</p>\n<p><img src=\"/uploads/deep_tabnine.0.gif\" alt=\"Profile-Switcher-Content-Creation-Default-Example\" title=\"Tabnine example\"></p>\n<h2 id=\"10-gitlens\">10. GitLens</h2>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\">GitLens</a> es una extensión de <a href=\"https://github.com/eamodio/vscode-gitlens\">código abierto</a> para Visual Studio Code creado, desarrollado y mantenido por <a href=\"https://www.amod.io/\">Eric Amodio</a>. Combina las capacidades de Git con VS Code.</p>\n<p>Una de las mejores características de esta extensión es la capacidad de visualizar la autoría del código a través de anotaciones de Git blame y code lens.</p>\n<p>A continuación se muestra una captura de pantalla de los documentos del <a href=\"https://finalspaceapi.com/docs/react\">ejemplo de React</a> de la <a href=\"https://finalspaceapi.com/\">API de Final Space</a>.</p>\n<p><img src=\"/uploads/react-example-final-space-api.png\" alt=\"React-Example-Final-Space-Api\" title=\"ejemplo de react  usando final space api\"></p>\n<p>A continuación, se muestra una versión ampliada de la autoría del código:</p>\n<p><img src=\"/uploads/code-authorship-expanded-version.png\" alt=\"Code-Authorship-Expanded-Version\" title=\"code authorship expanded version\"></p>\n<p>Esta es solo una de las muchas <a href=\"https://gitlens.amod.io/#features\">características de la extensión GitLens</a>. Otras características notables incluyen:</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#revision-navigation-\">R</a> <a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#revision-navigation\">navegación de revisión</a> (hacia atrás y hacia adelante) a través del historial de un archivo</li>\n<li>Una anotación discreta <a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#current-line-blame-\">current line blame</a> al final de la línea que muestra el commit.</li>\n<li>Una anotación <a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#status-bar-blame-\">status bar blame</a> que muestra los commits y el autor que modificó por última vez la línea actual</li>\n</ul>\n<h2 id=\"conclusión\">Conclusión</h2>\n<p>En esta guía, revisamos 10 extensiones de VS Code que pueden ayudarlo a ser un mejor programador y aumentar su productividad.</p>\n<p>Hay muchas más extensiones de VS Code que puede explorar para todo tipo de casos de uso. Aquí hay algunas otras extensiones que vale la pena revisar:</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer\">Live Server</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense\">Path Intellisense</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker\">Code Spell Checker</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=wwm.better-align\">Better Align</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode\">Quokka.js</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow\">indent-rainbow</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=aaronpowell.vscode-profile-switcher\">Profile Switcher</a></li>\n</ul>";

				const frontmatter$5 = {"minutesRead":7,"layout":"../../../components/templates/BlogPostTemplate.astro","title":"Las 10 principales extensiones de VS Code en el 2021","description":"Visual Studio Code is one of the most widely used code editors in the developer community. One of the reasons for VS Code’s popularity is its many extensions that speed up the development process.  In this guide, we’ll explore the 10 VS Code extensions every web developer should know in 2021. These tools are designed to improve the developer experience and make your job easier in various ways.","date":"2021-05-25T02:23:12.784Z","cover":"/uploads/visual-studio-code.jpg","author":"Yuniel Acosta","lang":"es","tags":["VS Code","IDE","Text Editor","extensions","plugins"],"categories":["Tooling"],"draft":false};
				const file$5 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/top-10-vs-code-extension-for-2021.md";
				const url$5 = "/es/blog/top-10-vs-code-extension-for-2021";
				function rawContent$5() {
					return "\n![Top-Ten-Code-Extensions-of-2021](/uploads/visual-studio-code.jpg 'top 10 vs code extensions')\n\nVisual Studio Code es uno de los editores de códigos más utilizados en la comunidad de desarrolladores. Una de las razones de la popularidad de VS Code es sus muchas extensiones que aceleran el proceso de desarrollo.\n\nEn esta guía, exploraremos las 10 [extensiones de VS Code](https://code.visualstudio.com/docs/editor/extension-gallery) que cada desarrollador web debe saber en 2021. Estas herramientas están diseñadas para mejorar la experiencia de desarrollo y haga que el trabajo del desarrollador sea más fácil de varias maneras.\n\nCubriremos las siguientes extensiones de VS Code:\n\n1. Auto Rename Tag\n2. Bracket Pair Colorizer\n3. Snippets\n4. Better Comments\n5. Markdown All in One\n6. Icons\n7. Prettier\n8. Import Cost\n9. Tabnine\n10. GitLens\n\n## 1. Auto Rename Tag\n\n[Auto Rename Tag](https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag) es una extensión de VS Code super útil para desarrolladores web. Como sugieren el nombre, `Auto Rename Tag` cambia el nombre de la segunda etiqueta a la vez que la primera se actualiza y viceversa:\n\n![Auto-Rename-Tag-Gif](/uploads/auto-rename-tag.gif 'auto rename')\n\nEncontrarás esta extensión útil no solo conHTML, sino también con React porque [JSX](https://reactjs.org/docs/introducing-jsx.html).\n\n![React-JSX-Auto-Rename-Tag](/uploads/jsx.gif 'react jsx auto rename tag')\n\nEn el ejemplo anterior, solo hay texto dentro de las etiquetas, pero en una aplicación real, puede haber etiquetas y elementos anidados, lo que hace que las actualizaciones manuales sean difíciles y tediosas.\n\n## 2. Bracket Pair Colorizer\n\n[Bracket Pair Colorizer](https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer) es una extensión que colorea con el mismo color los corchetes correspondientes. Tener componentes anidados, funciones, objetos, etc., etc., en un archivo, pueden confundirse con múltiples paréntesis, corchetes, etc.\n\n![Bracket-Pair-Colorizer-Example](/uploads/bracket-pair-colorizer-example.gif 'Ejemplo bracket pair colorizzer')\n\n[](https://blog.logrocket.com/top-10-vs-code-extensions-2021/)\n\nPor ejemplo, considere el siguiente fragmento de código:\n\n![Bracket-Pair-Colorizer-Code-Snippet](/uploads/bracket-pair-colorizer-code-snippet.png 'Fragmento de código bracket pair colorizer')\n\nA primera vista, es bastante difícil diferenciar entre diferentes bloques de código en el código, pero la extensión de `Bracket Pair Colorizer` colorea los paréntesis y corchetes correspondientes para facilitar la navegación y accesibilidad.\n\n![Bracket-Pair-Colorizer-Extension-Example](/uploads/bracket-pair-colorizer-extension-example.png 'Ejemplo de la extensión bracket pair colorizer')\n\n## 3. Snippets\n\n[Snippets](https://code.visualstudio.com/docs/editor/userdefinedsnippets) son la mejor manera de ahorrar tiempo y aumentar su productividad. Esta no es una sola extensión, sino una colección de extensiones con varios fragmentos de códigos para diferentes lenguajes de programación.\n\nA continuación se presentan algunas extensiones de fragmentos de código popular:\n\n- [Angular Snippets (version 11)](https://marketplace.visualstudio.com/items?itemName=johnpapa.Angular2)\n- [Python](https://marketplace.visualstudio.com/items?itemName=ms-python.python)\n- [JavaScript (ES6) code snippets](https://marketplace.visualstudio.com/items?itemName=xabikos.JavaScriptSnippets)\n- [HTML Snippets](https://marketplace.visualstudio.com/items?itemName=abusaidm.html-snippets)\n- [ES7 React/Redux/GraphQL/React-Native snippets](https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets)\n- [Vue 3 Snippets](https://marketplace.visualstudio.com/items?itemName=hollowtree.vue-snippets)\n\nPor ejemplo, puede ser bastante tedioso repetir la sintaxis para componentes funcionales en React cada vez que creas un nuevo componente. Usando los fragmentos de código de la extensión [ES7 React/Redux/GraphQL/React-Native snippets](https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets), puede usar el acceso directo `rfc` para crear componentes funcionales y pulse Enter.\n\n![React-Redux-GraphQL-Extension](/uploads/react-redux-graphql-extension.gif 'Extensión react redux graphql')\n\n## 4. Better Comments\n\n[Better Comments](https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments) está diseñado para ayudarnos a escribir comentarios más amigables para las personas en su código.\n\nLos comentarios claros son beneficiosos no solo para alguien que esté revisando su código, sino también para usted. Es bastante común que los desarrolladores se pierdan en su propio código cuando lo visitan después de un tiempo. Tener comentarios descriptivos puede ahorrarle mucho tiempo a usted y a su equipo.\n\nCon la extensión `Better Comments` de VS Code, puede clasificar sus anotaciones en alertas, consultas, tareas pendientes, aspectos destacados, etc.\n\nPuede utilizar cualquiera de los siguientes caracteres después de una doble barra inclinada (`//`):\n\n- `*` Para texto resaltado\n- `!` Para errores y advertencias\n- `?` Para consultas y preguntas\n- `//` para tachado\n- `TODO` para tareas pendientes\n\n![Better-Comments-VS-Code-Extension-Example](/uploads/better-comments-vs-code-extension-example.png) \"Ejemplo de la extensión better comments de vs code\")\n\n## 5. Markdown All in One\n\n[Markdown All in One](https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one) es una extensión que se encarga de todas sus necesidades del formato markdown, como la vista previa automática, atajos, autocompletar, etc.\n\nDesde su lanzamiento en 2004, Markdown se ha convertido en uno de los lenguajes de marcado más populares y preferidos. Los escritores técnicos de todo el mundo utilizan ampliamente Markdown para artículos, blogs, documentación, etc., debido a su simplicidad ligera y su uso multiplataforma. Su popularidad ha dado lugar a otras variantes de Markdown, como [GitHub Flavored Markdown](https://github.github.com/gfm/), [MDX](https://mdxjs.com/), etc.\n\nPor ejemplo, para poner en negrita un texto en Markdown, puede seleccionar ese texto y usar el atajo `Ctrl + B` para aumentar su productividad.\n\n![Markdown-All-In-One-Extension](/uploads/markdown-all-in-one-extension.gif 'Extensión markdown all in one')\n\n## 6. Icons\n\nTener íconos descriptivos puede ayudarlo a diferenciar entre archivos y carpetas. Los iconos también hacen que el desarrollo sea más divertido.\n\nAquí hay una comparación entre dos pestañas de VS Code. Uno tiene iconos, el otro no.\n\n![VS-Code-Tabs-Comparison](/uploads/vs-code-tabs-comparison.png 'Comparación entre dos pestañas de vs code')\n\nHay muchas extensiones de iconos entre las que puede elegir. Las colecciones de iconos populares incluyen:\n\n- [vscode-icons](https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons)\n- [Material Icon Theme](https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme)\n- [Material Theme Icons](https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme-icons)\n- [Simple icons](https://marketplace.visualstudio.com/items?itemName=LaurentTreguier.vscode-simple-icons)\n\n## 7. Prettier\n\n[Prettier](https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode) es un formateador de código basado en buenas prácticas. Con más de 38.5k estrellas en GitHub, es uno de los formateadores de código más populares disponibles. Tener un formato y un estilo coherentes en todo el código puede ahorrar mucho tiempo, especialmente al colaborar con otros desarrolladores.\n\nConsideren el siguiente bloque de código:\n\n![Prettier-Demo-Code-Example](/uploads/prettier-code-formatter-example.png 'Ejemplo de demo con prettier')\n\nEs posible que observe algunos problemas de formato con este código, que incluyen:\n\n- Una combinación de comillas simples y dobles.\n- Uso irregular de punto y coma (`;`)\n- Sangría incorrecta de la declaración de la consola en la línea 6\n\nAsí es como Prettier formatearía y corregiría el código anterior:\n\n![prettier format](/uploads/prettier-formatted-code-example.gif 'Ejemplo con prettier')\n\nEsta extensión admite [Prettier plugins](https://prettier.io/docs/en/plugins.html) cuando estás usando una versión de Prettier resuelta localmente. \\\nPuede configurar esta extensión para que se adapte a sus necesidades de formato e incluso activarla con el guardado automático.\n\n## 8. Import Cost\n\n[Import Cost](https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost) es una extensión que muestra un tamaño estimado de los paquetes importados en el código. Cuando se trabaja en un proyecto, es importante no comprometer la experiencia del usuario al importar paquetes pesados. Una forma de evitar esto es realizar un seguimiento del tamaño de las dependencias adicionales en su código.\n\n![Import-Cost-Extension-Example](/uploads/import-cost-extension-example.png 'Ejemplo de la extensión import cost')\n\nCuando la importación es demasiado grande, Import Cost le advierte mostrando el tamaño en rojo. Puede configurar qué tamaño debe considerarse pequeño, mediano o grande.\n\n## 9. Tabnine\n\n[Tabnine](https://www.tabnine.com/) se creó para ayudar a los desarrolladores **a codificar más rápido, reducir errores y descubrir las mejores prácticas de codificación** mediante el aprendizaje automático. El poderoso asistente de Inteligencia Artificial de Tabnine funciona en la comodidad de su IDE. Tabnine estudia el código compartido públicamente y utiliza el aprendizaje profundo de inteligencia artificial para predecir el completamiento del código con un solo clic.\n\nDeep TabNine se basa en [GPT-2](https://medium.com/syncedreview/openai-guards-its-ml-model-code-data-to-thwart-malicious-usage-d9f7e9c43cd0) un gran transformador basado en el modelo de lenguaje que puede generar párrafos de texto realistas. El modelo, desarrollado por la empresa de investigación OpenAI con sede en San Francisco, demuestra un rendimiento convincente en una variedad de tareas lingüísticas, como traducción automática, respuesta a preguntas, comprensión de lectura y resumen.\n\nA diferencia de otros complementos de completado de código, Deep TabNine se compila automáticamente en función del uso y los hábitos anteriores de un programador, e incluye la probabilidad de las diferentes predicciones que proporciona. Si aparece un código similar en proyectos anteriores, Deep TabNine también mostrará la dirección directamente en el cuadro de candidato de finalización.\n\nTabnine funciona con los principales lenguajes de programación, incluidos JavaScript, Python, TypeScript, PHP, C/C++, HTML/CSS, Go, Java, Ruby, C#, Rust, SQL, Bash, Kotlin, Julia, Lua, OCaml, Perl, Haskell, etc.\n\nEl sitio web de TabNine con instrucciones de instalación y otra información se encuentra [aquí](https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode).\n\n![Profile-Switcher-Content-Creation-Default-Example](/uploads/deep_tabnine.0.gif 'Tabnine example')\n\n## 10. GitLens\n\n[GitLens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens) es una extensión de [código abierto](https://github.com/eamodio/vscode-gitlens) para Visual Studio Code creado, desarrollado y mantenido por [Eric Amodio](https://www.amod.io/). Combina las capacidades de Git con VS Code.\n\nUna de las mejores características de esta extensión es la capacidad de visualizar la autoría del código a través de anotaciones de Git blame y code lens.\n\nA continuación se muestra una captura de pantalla de los documentos del [ejemplo de React](https://finalspaceapi.com/docs/react) de la [API de Final Space](https://finalspaceapi.com/).\n\n![React-Example-Final-Space-Api](/uploads/react-example-final-space-api.png 'ejemplo de react  usando final space api')\n\nA continuación, se muestra una versión ampliada de la autoría del código:\n\n![Code-Authorship-Expanded-Version](/uploads/code-authorship-expanded-version.png 'code authorship expanded version')\n\nEsta es solo una de las muchas [características de la extensión GitLens](https://gitlens.amod.io/#features). Otras características notables incluyen:\n\n- [R](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#revision-navigation-) [navegación de revisión](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#revision-navigation) (hacia atrás y hacia adelante) a través del historial de un archivo\n- Una anotación discreta [current line blame](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#current-line-blame-) al final de la línea que muestra el commit.\n- Una anotación [status bar blame](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens#status-bar-blame-) que muestra los commits y el autor que modificó por última vez la línea actual\n\n## Conclusión\n\nEn esta guía, revisamos 10 extensiones de VS Code que pueden ayudarlo a ser un mejor programador y aumentar su productividad.\n\nHay muchas más extensiones de VS Code que puede explorar para todo tipo de casos de uso. Aquí hay algunas otras extensiones que vale la pena revisar:\n\n- [Live Server](https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer)\n- [Path Intellisense](https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense)\n- [Code Spell Checker](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker)\n- [Better Align](https://marketplace.visualstudio.com/items?itemName=wwm.better-align)\n- [Quokka.js](https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode)\n- [indent-rainbow](https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow)\n- [Profile Switcher](https://marketplace.visualstudio.com/items?itemName=aaronpowell.vscode-profile-switcher)\n";
				}
				function compiledContent$5() {
					return html$5;
				}
				function getHeadings$5() {
					return [{"depth":2,"slug":"1-auto-rename-tag","text":"1. Auto Rename Tag"},{"depth":2,"slug":"2-bracket-pair-colorizer","text":"2. Bracket Pair Colorizer"},{"depth":2,"slug":"3-snippets","text":"3. Snippets"},{"depth":2,"slug":"4-better-comments","text":"4. Better Comments"},{"depth":2,"slug":"5-markdown-all-in-one","text":"5. Markdown All in One"},{"depth":2,"slug":"6-icons","text":"6. Icons"},{"depth":2,"slug":"7-prettier","text":"7. Prettier"},{"depth":2,"slug":"8-import-cost","text":"8. Import Cost"},{"depth":2,"slug":"9-tabnine","text":"9. Tabnine"},{"depth":2,"slug":"10-gitlens","text":"10. GitLens"},{"depth":2,"slug":"conclusión","text":"Conclusión"}];
				}
				function getHeaders$5() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$5();
				}				async function Content$5() {
					const { layout, ...content } = frontmatter$5;
					content.file = file$5;
					content.url = url$5;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$5 });
					return createVNode($$BlogPostTemplate, {
									file: file$5,
									url: url$5,
									content,
									frontmatter: content,
									headings: getHeadings$5(),
									rawContent: rawContent$5,
									compiledContent: compiledContent$5,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$5[Symbol.for('astro.needsHeadRendering')] = false;

const _page19 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$5,
	file: file$5,
	url: url$5,
	rawContent: rawContent$5,
	compiledContent: compiledContent$5,
	getHeadings: getHeadings$5,
	getHeaders: getHeaders$5,
	Content: Content$5,
	default: Content$5
}, Symbol.toStringTag, { value: 'Module' }));

const html$4 = "<p><img src=\"/uploads/configure-proxy-global-on-linux/portada-proxy.jpg\" alt=\"background\"></p>\n<p>En los sistemas operativos GNU/Linux cuando estamos detrás de un servidor proxy, puede resultar un poco engorroso usar programas que no tienen su propia configuración de proxy o comandos como <strong>apt-get</strong>, o simplemente queremos configurar el proxy global para que toda la computadora use internet. Muchas de las distribuciones GNU/Linux utilizan diferentes administradores de paquetes que se configuran de diferentes formas, además hay muchos programas que necesitan sus especificaciones para configurar la salida de Internet a través de un servidor proxy. Todo este proceso se vuelve muy engorroso de hacer en entornos donde usas un proxy con autenticación y cambia de vez en cuando o usas un portátil donde constantemente puedes configurar un proxy global en los sistemas operativos GNU/Linux conectarte a redes donde está el proxy no utilizado. Imagina cambiar todas las configuraciones cada vez que cambias de red.</p>\n<p><img src=\"/uploads/configure-proxy-global-on-linux/proxy-schema.png\" alt=\"Proxy schema\" title=\"Configure proxy global on linux\"></p>\n<p>A continuación veremos como configurar un proxy en algunas de las distros GNU/Linux</p>\n<p><img src=\"/uploads/configure-proxy-global-on-linux/proxy-global.jpg\" alt=\"Proxy global\"></p>\n<h2 id=\"configurar-proxy-en-la-terminal\">Configurar proxy en la terminal</h2>\n<p>Si queremos usar un proxy en la terminal de forma temporal, podemos ejecutar el siguiente comando:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FF7B72\">export</span><span style=\"color: #C9D1D9\"> http_proxy=http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #FF7B72\">export</span><span style=\"color: #C9D1D9\"> https_proxy=$http_proxy</span></span></code></pre>\n<h2 id=\"configurar-variables-de-entorno-para-la-familia-de-distribución-debianubuntu\">Configurar variables de entorno para la familia de distribución Debian|Ubuntu:</h2>\n<p>Editar el archivo <code>/etc/environment</code> con tu editor de texto favorito.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    sudo vim /etc/environment</span></span></code></pre>\n<p>Agregamos las siguientes líneas al archivo, necesitamos duplicar las líneas en mayúsculos y minúsculas porque (desgraciadamente) algunos programas solo buscan por una forma u otra:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">    http_proxy http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    https_proxy http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    ftp_proxy http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    no_proxy localhost,127.0.0.1,localaddress,.localdomain.com</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    #Duplicadas en mayúsculas</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    HTTP_PROXY http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    HTTPS_PROXY http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    FTP_PROXY http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    NO_PROXY localhost,127.0.0.1,localaddress,.localdomain.com</span></span></code></pre>\n<h2 id=\"configurar-variables-de-entorno-para-distribuciones-gnulinux-de-la-familia-redhatfedoracentos\">Configurar variables de entorno para distribuciones GNU/linux de la familia RedHat|Fedora|Centos:</h2>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    sudo vim /etc/profile.d/proxy.sh</span></span></code></pre>\n<p>Modificamos los parámetros necesarios según corresponda:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">    export http_proxy=\"http://username:password@proxyserver:puerto/\"</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    export https_proxy=\"http://username:password@proxyserver:puerto/\"</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    export ftp_proxy=\"http://username:password@proxyserver:puerto/\"</span></span></code></pre>\n<h2 id=\"configurar-proxy-para-apt-get-apt-y-aptitude\">Configurar proxy para apt-get, apt y aptitude:</h2>\n<p>Creamos o editamos el archivo <code>/etc/apt/apt.conf</code></p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    sudo vim /etc/apt/apt.conf</span></span></code></pre>\n<p>Agregamos las siguientes líneas:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">    Acquire::http::Proxy \"http://username:password@proxyserver:puerto\";</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    Acquire::https::Proxy \"http://username:password@proxyserver:puerto\";</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    Acquire::ftp::Proxy \"http://username:password@proxyserver:puerto\";</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    #En caso de tener un repo local para el que no necesitemos proxy</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    Acquire::http::Proxy {</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    repositorio.localdomain.com DIRECT;</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    repositorio2.localdomain.com DIRECT;</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    };</span></span></code></pre>\n<h2 id=\"configurar-proxy-para-yum\">Configurar proxy para yum:</h2>\n<p>Editar archivo <code>/etc/yum.conf</code></p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">    # proxy server address and port</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    proxy=http://proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    # user and password</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    proxy_username=usuario</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">    proxy_password=contraseña</span></span></code></pre>\n<h2 id=\"configurar-proxy-para-pacman\">Configurar proxy para pacman:</h2>\n<p>Editamos el fichero <code>/etc/pacman.conf</code> y debemos descomentar <code>XferCommand</code> de la siguiente manera:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">    XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u</span></span></code></pre>\n<p><img src=\"../images/configure-proxy-global-on-linux/pacman.conf.png\" alt=\"pacman.conf.png\"></p>\n<p>Guardamos los cambios y procedemos a editar el fichero de configuración para <code>wget</code>, herramienta utilizada para la descarga de paquetes.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    sudo vim /etc/wgetrc</span></span></code></pre>\n<p>Editamos el archivo de configuración <code>/etc/wgetrc</code> buscamos las siguientes líneas y las descomentamos o agregamos al final del archivo.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    https_proxy = http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    http_proxy = http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    ftp_proxy = http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    use_proxy = on</span></span></code></pre>\n<h2 id=\"configuración-de-proxy-para-nodejsnpm\">Configuración de proxy para nodejs(npm)</h2>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    npm config </span><span style=\"color: #79C0FF\">set</span><span style=\"color: #C9D1D9\"> proxy http://username:password@proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    npm config </span><span style=\"color: #79C0FF\">set</span><span style=\"color: #C9D1D9\"> https-proxy http://username:password@proxyserver:puerto</span></span></code></pre>\n<h2 id=\"configurar-proxy-para-git\">Configurar proxy para Git</h2>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    git config --global http.proxy http//proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    git config --global https.proxy https//proxyserver:puerto</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #8B949E\"># En caso de tener conexión directa y necesitemos quitarle la configuración de proxy a git</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    git config --global --unset http.proxy</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    git config --global --unset https.proxy</span></span></code></pre>\n<p>Como se puede apreciar es muy complejo mantener constantemente la configuración de un proxy en tu pc, pero por suerte existen otras opciones que te permiten configurar un proxy de forma global a todo el sistema operativo. En sistemas como Windows o MacOS existen herramientas como Proxifier, ProxyCap entre otras que facilitan la salida a internet a través de un proxy por otra parte sistemas operativos GNU/Linux tenemos alternativas a estos programas como las listadas a continuación.</p>\n<h1 id=\"redsock\">Redsock</h1>\n<p><a href=\"https://github.com/darkk/redsocks\">Redsock</a> es una herramienta que permite redirigir cualquier conexión TCP a SOCKS o proxy HTTPS usando su firewall, por lo que la redirección puede ser en todo el sistema o en toda la red. Esta herramienta es muy útil porque nos permite con un solo archivo de configuración poder usar la conexión a través del proxy en todo el sistema operativo.</p>\n<h2 id=\"paquetes-para-las-distintas-distribuciones-linux\">Paquetes para las distintas distribuciones linux</h2>\n<hr>\n<ul>\n<li>Archlinux/Manjaro: <a href=\"https://aur.archlinux.org/packages/redsocks-git\">redsocks-git</a></li>\n<li>Debian: <a href=\"http://packages.debian.org/search?searchon=names&#x26;keywords=redsocks\">redsocks</a></li>\n<li>Gentoo (zugaina overlay): <a href=\"http://gpo.zugaina.org/net-proxy/redsocks\">redsocks</a></li>\n<li>Gentoo: <a href=\"https://packages.gentoo.org/packages/net-proxy/redsocks\">redsocks</a></li>\n<li>Ubuntu: <a href=\"http://packages.ubuntu.com/search?searchon=names&#x26;keywords=redsocks\">redsocks</a></li>\n</ul>\n<h2 id=\"compilación-manual-de-redsock\">Compilación manual de redsock</h2>\n<p>Para compilar redsock necesitamos clonar su repositorio en GitHub <a href=\"https://github.com/darkk/redsocks\">https://github.com/darkk/redsocks</a> y seguir las instrucciones en el <strong>README.md</strong>. Es necesario que en nuestro sistema esté instalado <strong><a href=\"http://libevent.org/\">libevent-2.0.x</a></strong>, al igual que los compiladores <code>gcc</code> y <code>clang</code>. La compilación es tan fácil como ejecutar <code>make</code> en el directorio raíz del proyecto.</p>\n<h2 id=\"ejecutar-redsock\">Ejecutar redsock</h2>\n<p>Ejecutar redsock depende mucho de la distribución que estés usando y de la forma en la que el paquete instaló redsock. El programa\ntiene las siguientes opciones de línea de comando:</p>\n<ul>\n<li><strong>-c</strong> especifica el camino al archivo de configuración (<code>./redsocks.conf</code> es el usado por defecto)</li>\n<li><strong>-t</strong> esta opción verifica la sintaxis del archivo de configuración.</li>\n<li><strong>-p</strong> establece un archivo para escribir el <code>getpid()</code> donde se especifican las siguientes señales: <code>SIGUSR1</code> vuelca la lista de clientes conectados al registro, <code>SIGTERM</code> y <code>SIGINT</code> terminan el demonio, se cierran todas las conexiones activas.</li>\n</ul>\n<p>Puedes ver un ejemplo del archivo de configuración en <a href=\"https://github.com/darkk/redsocks/blob/master/redsocks.conf.example\">redsocks.conf.example</a>.</p>\n<h3 id=\"ejemplo-de-iptables\">Ejemplo de iptables</h3>\n<p>Tienes que construir iptables con seguimiento de conexión y objetivo <code>REDIRECT</code>.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">  # Create new chain</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -N REDSOCKS</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Ignore LANs and some other reserved addresses.</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # See http://en.wikipedia.org/wiki/Reserved_IP_addresses#Reserved_IPv4_addresses</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # and http://tools.ietf.org/html/rfc5735 for full list of reserved networks.</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 0.0.0.0/8 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 10.0.0.0/8 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 100.64.0.0/10 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 127.0.0.0/8 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 169.254.0.0/16 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 172.16.0.0/12 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 192.168.0.0/16 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 198.18.0.0/15 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 224.0.0.0/4 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -d 240.0.0.0/4 -j RETURN</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Anything else should be redirected to port 12345</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A REDSOCKS -p tcp -j REDIRECT --to-ports 12345</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Any tcp connection made by `luser' should be redirected.</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A OUTPUT -p tcp -m owner --uid-owner luser -j REDSOCKS</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # You can also control that in more precise way using `gid-owner` from</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # iptables.</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# groupadd socksified</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# usermod --append --groups socksified luser</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A OUTPUT -p tcp -m owner --gid-owner socksified -j REDSOCKS</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Now you can launch your specific application with GID `socksified` and it</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # will be... socksified. See following commands (numbers may vary).</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Note: you may have to relogin to apply `usermod` changes.</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  luser$ id</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  uid=1000(luser) gid=1000(luser) groups=1000(luser),1001(socksified)</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  luser$ sg socksified -c id</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  uid=1000(luser) gid=1001(socksified) groups=1000(luser),1001(socksified)</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  luser$ sg socksified -c \"firefox\"</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # If you want to configure socksifying router, you should look at</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # doc/iptables-packet-flow.png, doc/iptables-packet-flow-ng.png and</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # https://en.wikipedia.org/wiki/File:Netfilter-packet-flow.svg</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Note, you should have proper `local_ip' value to get external packets with</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # redsocks, default 127.0.0.1 will not go. See iptables(8) manpage regarding</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # REDIRECT target for details.</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  # Depending on your network configuration iptables conf. may be as easy as:</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">  root# iptables -t nat -A PREROUTING --in-interface eth_int -p tcp -j REDSOCKS</span></span></code></pre>\n<p>Redsock es una de mis herramientas favoritas para configurar todo mi tráfico a internet a través de un proxy usando el protocolo TCP. A continuación les muestro otra alternativa más reciente que resulta muy interesante y de fácil configuración.</p>\n<h1 id=\"proxifier-for-linux\">Proxifier-For-Linux</h1>\n<p>Proxifier-For-Linux es una herramienta que actúa como un intermediario entre el servidor proxy y los programas clientes que necesiten acceso a internet. Proxifier trabaja a través de los servidores proxy en nombre de los otros programas. Proxifier actúa como un punto global para configurar las reglas de proxy, que se aplicarán a todos los programas del sistema. Como mencioné anteriormente es un proyecto nuevo por lo que actualmente solo tiene soporte para proxies http.</p>\n<p>Como se explica en el repositorio oficial de <a href=\"https://github.com/m0hithreddy/Proxifier-For-Linux\">Proxifier-for-linux</a> nuestro sistema operativo debe contar con las siguientes dependencias.</p>\n<h2 id=\"dependencias\">Dependencias</h2>\n<p>A continuación se muestra la lista de dependencias requeridas para compilar y ejecutar Proxifier, asi como la posible instalación en dependencia del sistema operativo que uses.</p>\n<h3 id=\"instalar-las-dependencias\">Instalar las dependencias</h3>\n<p>Para comprobar si tienes ya las dependencias instaladas puedes usar el comando <code>which &#x3C;nombre del paquete></code>. Ejemplo <code>which autoconf</code> y si te devuelve la ruta es que ya esa dependencia está instalada.</p>\n<ul>\n<li><a href=\"https://github.com/autotools-mirror/autoconf\">autoconf</a> [sudo apt install autoconf]</li>\n<li><a href=\"https://github.com/autotools-mirror/automake\">automake</a> [sudo apt install automake]</li>\n<li><a href=\"https://github.com/autotools-mirror/libtool\">libtool</a> [sudo apt install libtool]</li>\n<li><a href=\"https://github.com/mvertes/txt2man\">txt2man</a> [sudo apt install txt2man]</li>\n</ul>\n<h2 id=\"descargar-proxifier\">Descargar Proxifier</h2>\n<p>Obtén la última versión estable de Proxifier clonando el repositorio de GitHub.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">  git clone https://github.com/m0hithreddy/Proxifier-For-Linux.git </span><span style=\"color: #FF7B72\">&#x26;&#x26;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">cd</span><span style=\"color: #C9D1D9\"> Proxifier-For-Linux</span></span></code></pre>\n<h2 id=\"construir-e-instalar\">Construir e Instalar</h2>\n<p>Después de instalar todas las dependencias, obtén el código fuente de Proxifier y dentro del directorio donde está el código ejecuta los siguientes comandos:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">autoreconf -vfi</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">./configure</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">make all</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">sudo make uninstall</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">sudo make install</span></span></code></pre>\n<h2 id=\"como-usar-proxifier\">Como usar Proxifier</h2>\n<p>El servicio de Proxifier se puede habilitar ejecutando el comando:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">sudo systemctl daemon-reload </span><span style=\"color: #8B949E\"># Reload the service units</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">sudo systemctl start proxifier</span></span></code></pre>\n<p>Para más información de Proxifier puedes consultar la ayuda ejecutando el comando <code>man proxifier</code>. El archivo de configuración se puede encontrar en la ruta <code>/usr/local/etc/proxifier.conf</code> donde puedes especificar la configuración de tu proxy.</p>\n<p>La siguiente herramienta que te quiero mostrar es Proxychains</p>\n<h1 id=\"proxychains\">Proxychains</h1>\n<p><a href=\"https://github.com/haad/proxychains\">Proxychains-ng</a> es un servidor proxy que soporta los protocolos de internet HTTPs, SOCKS4 y SOCKS5 y funciona en plataformas basadas en Unix. Permite que cualquier conexión TCP hecha por un programa siga una serie de proxies(de los protocolos antes mencionados) hasta su destino. La lista de proxies así como la estrategia de selección de los proxies se definen con anterioridad.</p>\n<h2 id=\"instalar-proxychains\">Instalar proxychains</h2>\n<p>Proxychains está disponible con <a href=\"https://github.com/haad/proxychains/blob/master/www.pkgsrc.org\">pkgsrc</a> para todos los que lo usen en Linux, NetBSD, FreeBSD, OpenBSD, DragonFlyBSD o Mac OS X. Solo necesita instalar <a href=\"http://pkgsrc-wip.sourceforge.net/\">pkgsrc-wip</a> y ejecutar <code>make install</code> en un el directorio <code>wip/proxychains</code></p>\n<h3 id=\"instalar-proxychains-desde-el-código-fuente\">Instalar proxychains desde el código fuente</h3>\n<p>Clonar el código fuente de GitHub y ejecutar los siguientes comando:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\"> git clone https://github.com/haad/proxychains.git </span><span style=\"color: #FF7B72\">&#x26;&#x26;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">cd</span><span style=\"color: #C9D1D9\"> proxychains</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> </span><span style=\"color: #8B949E\"># se necesita un compilador de C, preferiblemente gcc</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> ./configure</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> make</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\"> sudo make install</span></span></code></pre>\n<h3 id=\"paquetes-para-las-distintas-distribuciones-linux-1\">Paquetes para las distintas distribuciones linux</h3>\n<hr>\n<ul>\n<li>Archlinux/Manjaro: <a href=\"https://www.archlinux.org/packages/community/x86_64/proxychains-ng/\">proxychains-ng/</a></li>\n<li>Debian: <a href=\"https://packages.debian.org/search?keywords=proxychains\">proxychains</a></li>\n<li>Gentoo: <a href=\"https://packages.gentoo.org/packages/net-proxy/proxychains\">proxychains</a></li>\n<li>Fedora: <a href=\"https://fedora.pkgs.org/32/fedora-x86_64/proxychains-ng-4.13-5.fc32.x86_64.rpm.html\">proxychains-ng</a></li>\n<li>Ubuntu: <a href=\"http://packages.ubuntu.com/search?searchon=names&#x26;keywords=proxychains\">proxychains</a></li>\n</ul>\n<h2 id=\"configuración\">Configuración</h2>\n<p>Proxychains busca la configuración en el siguiente orden:</p>\n<ul>\n<li>Puerto proxy SOCKS5 en la variable de entorno <strong>${PROXYCHAINS_SOCKS5}</strong> (si se establece, no se buscarán más configuraciones)</li>\n<li>Archivo listado en la variable de entorno <strong>${PROXYCHAINS_CONF_FILE}</strong> o proporcionado como un argumento -f para el script o binario de proxychains.</li>\n<li>./proxychains.conf</li>\n<li>$(HOME)/.proxychains/proxychains.conf</li>\n<li>/etc/proxychains.conf</li>\n</ul>\n<p>Ver más de la configuración en el archivo <code>/etc/proxychains.conf</code></p>\n<h3 id=\"ejemplo-de-como-configurar-varios-proxies\">Ejemplo de como configurar varios proxies</h3>\n<p>Al final del fichero <code>/etc/proxychains.conf</code> se encuentra la lista donde podemos agregar nuestros proxies. Las estrategias de selección de proxies varían entre <code>dynamic_chain, strict_chain, round_robin_chain, random_chain</code> y solo uno puede estar descomentado.</p>\n<ul>\n<li>\n<p>dynamic_chain: Dinámico: cada conexión se realizará a través de proxies encadenados, todos los proxies encadenados en el orden en que aparecen en la lista, al menos un proxy debe estar en línea para jugar en cadena (se omiten los proxies muertos) de lo contrario, EINTR se devuelve a la aplicación</p>\n</li>\n<li>\n<p>strict_chain: Estricto: cada conexión se realizará a través de proxies encadenados, todos los proxies encadenados en el orden en que aparecen en la lista, todos los proxies deben estar en línea para jugar en cadena; de lo contrario, EINTR se devuelve a la aplicación</p>\n</li>\n<li>\n<p>round_robin_chain: Round Robin: cada conexión se realizará a través de proxies encadenados de longitud <code>chain_len</code>, todos los proxies encadenados en el orden en que aparecen en la lista, al menos un proxy debe estar en línea para jugar en cadena (se omiten los proxies muertos). el inicio de la cadena de proxy actual es el proxy después del último proxy en la cadena de proxy invocada anteriormente. Si se alcanza el final de la cadena de proxy mientras se buscan proxies, comience de nuevo desde el principio. De lo contrario, EINTR se devuelve a la aplicación. Esta semántica no está garantizada en un entorno multiproceso.</p>\n</li>\n<li>\n<p>random_chain: Aleatorio: cada conexión se realizará mediante un proxy aleatorio (o una cadena de proxy, consulte <code>chain_len</code>) de la lista.</p>\n</li>\n</ul>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\"> [ProxyList]</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> # add proxy here ...</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> # meanwile</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> # defaults set to \"tor\"</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> socks4  127.0.0.1 9050</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> #psiphon proxy</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> http 127.0.0.1 52525</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> socks5 127.0.0.1 42552</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> #Otro Proxy</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> http 192.168.1.11 8080 user password</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> #Mobile proxy</span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"> http 192.168.44.244 3128 user password</span></span></code></pre>\n<h2 id=\"ejemplos-de-uso\">Ejemplos de uso</h2>\n<p>Ejecutar <code>proxychains &#x3C;programa a ejecutar a través de un proxy></code></p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">proxychains telnet targethost.com</span></span></code></pre>\n<p>En este ejemplo se ejecuta el programa <strong>telnet</strong> a través de un proxy ( o una cadena de proxies ) especificada por <strong>proxychains.conf</strong></p>\n<p>Proxychains nos da una gran ventaja al poder encadenar muchos proxies a la vez lo que se usa mucho en ciberseguridad para ocultar la identidad de las peticiones realizadas. Una de las desventajas que tiene proxychains es que se ejecuta en la consola lo cual resulta incómodo cuando usamos programas con interfaz gráfica.</p>\n<p>El siguiente en la lista es uno de mis favoritos pues es una VPN que permite configurar un proxy global para todo el sistema operativo así como montar un firewall en la pc.</p>\n<h1 id=\"windscribe\">Windscribe</h1>\n<p><a href=\"https://windscribe.com/?friend=abhyp2zr\">Windscribe</a> es un conjunto de herramientas que permiten bloquear los seguidores de anuncios y los beacons web, restaurar el acceso a contenido bloqueado y ayudarle a proteger su privacidad en línea. Hay dos componentes:</p>\n<p>La aplicación de escritorio VPN (Windows, MacOS y Linux) y la extensión del navegador (Chrome, Edge, Firefox, Safari, …)</p>\n<p>La aplicación de escritorio es un cliente VPN (Virtual Private Network). Crea un túnel encriptado desde tu computadora a los servidores de <a href=\"https://windscribe.com/?affid=abhyp2zr\">winscribe</a>, y toda tu actividad se envía a través del túnel. Esto tiene dos ventajas:</p>\n<ol>\n<li>La dirección IP de su proveedor de servicios de Internet (ISP) está enmascarada, por lo que cualquier sitio web que visite o cualquier aplicación que utilice (Skype, proveedores de correo electrónico, BitTorrent, etc.) verá nuestra dirección IP compartida por miles de personas.</li>\n<li>Su proveedor de servicios de Internet no puede ver lo que hace en línea. Esto es mucho más importante de lo que piensas.</li>\n</ol>\n<p>Lo primero que se tiene que hacer es crear una cuenta en <a href=\"https://windscribe.com/?friend=abhyp2zr\">Windscribe</a> registrándose <a href=\"https://windscribe.com/?friend=abhyp2zr\">aquí</a>. Windscribe nos da 2GB de consumo mensual gratis, pero si confirmamos nuestro correo electrónico este aumenta 5GB, además puedes aumentar hasta 15GB mensuales si creas un post en twitter dando en el botón <em><strong>Tweet4Data</strong></em> en la configuración de tu cuenta.</p>\n<p><img src=\"../images/configure-proxy-global-on-linux/more-data.png\" alt=\"More data\"></p>\n<h2 id=\"instalar-windscribe\">Instalar Windscribe</h2>\n<p>Después de registrarse se descarga el cliente de escritorio o la extensión para su navegador favorito en la sesión de <a href=\"https://windscribe.com/?friend=abhyp2zr\">Descargas</a>. Seguir las instrucciones del enlace de descarga en dependencia del sistema operativo que uses.</p>\n<h2 id=\"configuración-del-cliente-de-windscribe-para-linux\">Configuración del cliente de Windscribe para Linux</h2>\n<p>Lo primero que tenemos que hacer es arrancar el servicio de windscribe para ello ejecutamos el comando:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    sudo systemctl start windscribe</span></span></code></pre>\n<p>Una vez este corriendo el servicio de windscribe debemos configurar el proxy ejecutando el comando <code>windscribe proxy --host &#x3C;direccion del proxy> --port &#x3C;puerto> --user &#x3C;usuario> --password &#x3C;contraseña></code>:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">windscribe proxy --host 19.18.4.54 --port 3128 --user acosta --password </span><span style=\"color: #A5D6FF\">\"super password\"</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">windscribe proxy on</span></span></code></pre>\n<p>Con los comandos anteriores configuramos y activamos windscribe para que use nuestro proxy. Ahora cuando para conectar toda las aplicaciones salgan a internet a través de Windscribe ejecutamos el comando:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">windscribe connect best </span><span style=\"color: #8B949E\"># Nos conecta al servidor de windscribe con mejor rendimiento</span></span></code></pre>\n<p>Para consultar la ayuda de windscribe podemos ejecutar el comando <code>windscribe --help</code></p>\n<p><img src=\"../images/configure-proxy-global-on-linux/windscribe-help.png\" alt=\"Windscribe Help\"></p>\n<p>Estas son algunas de las opciones que existen para configurar la salida a internet a través de un proxy en sistemas operativos GNU/Linux. De todas las variantes mostradas en este artículo mi favorita sin dudas es windscribe por todas las facilidades que ofrece.</p>\n<p>Espero que les sirva de ayuda en caso que quieran tener configurado de forma global un proxy en linux.</p>";

				const frontmatter$4 = {"minutesRead":13,"layout":"../../../components/templates/BlogPostTemplate.astro","title":"Configurar proxy global en linux","description":"En este artículo comparto algunos consejos para configurar Internet a través de un proxy global en los sistemas operativos GNU/Linux.","date":"2020-12-06T00:00:00.000Z","cover":"/uploads/configure-proxy-global-on-linux/portada-proxy.jpg","author":"Yuniel Acosta","lang":"es","tags":["Proxy","Linux","Windscribe","Proxifier","VPN","Redsock","Proxychains"],"categories":["Tooling"],"draft":false};
				const file$4 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/configure-proxy-global-on-linux.md";
				const url$4 = "/es/blog/configure-proxy-global-on-linux";
				function rawContent$4() {
					return "\n![background](/uploads/configure-proxy-global-on-linux/portada-proxy.jpg)\n\nEn los sistemas operativos GNU/Linux cuando estamos detrás de un servidor proxy, puede resultar un poco engorroso usar programas que no tienen su propia configuración de proxy o comandos como **apt-get**, o simplemente queremos configurar el proxy global para que toda la computadora use internet. Muchas de las distribuciones GNU/Linux utilizan diferentes administradores de paquetes que se configuran de diferentes formas, además hay muchos programas que necesitan sus especificaciones para configurar la salida de Internet a través de un servidor proxy. Todo este proceso se vuelve muy engorroso de hacer en entornos donde usas un proxy con autenticación y cambia de vez en cuando o usas un portátil donde constantemente puedes configurar un proxy global en los sistemas operativos GNU/Linux conectarte a redes donde está el proxy no utilizado. Imagina cambiar todas las configuraciones cada vez que cambias de red.\n\n![Proxy schema](/uploads/configure-proxy-global-on-linux/proxy-schema.png 'Configure proxy global on linux')\n\nA continuación veremos como configurar un proxy en algunas de las distros GNU/Linux\n\n![Proxy global](/uploads/configure-proxy-global-on-linux/proxy-global.jpg)\n\n## Configurar proxy en la terminal\n\nSi queremos usar un proxy en la terminal de forma temporal, podemos ejecutar el siguiente comando:\n\n```shell\n    export http_proxy=http://username:password@proxyserver:puerto\n    export https_proxy=$http_proxy\n```\n\n## Configurar variables de entorno para la familia de distribución Debian|Ubuntu:\n\nEditar el archivo `/etc/environment` con tu editor de texto favorito.\n\n```shell\n    sudo vim /etc/environment\n```\n\nAgregamos las siguientes líneas al archivo, necesitamos duplicar las líneas en mayúsculos y minúsculas porque (desgraciadamente) algunos programas solo buscan por una forma u otra:\n\n```text\n    http_proxy http://username:password@proxyserver:puerto\n    https_proxy http://username:password@proxyserver:puerto\n    ftp_proxy http://username:password@proxyserver:puerto\n    no_proxy localhost,127.0.0.1,localaddress,.localdomain.com\n    #Duplicadas en mayúsculas\n    HTTP_PROXY http://username:password@proxyserver:puerto\n    HTTPS_PROXY http://username:password@proxyserver:puerto\n    FTP_PROXY http://username:password@proxyserver:puerto\n    NO_PROXY localhost,127.0.0.1,localaddress,.localdomain.com\n```\n\n## Configurar variables de entorno para distribuciones GNU/linux de la familia RedHat|Fedora|Centos:\n\n```shell\n    sudo vim /etc/profile.d/proxy.sh\n```\n\nModificamos los parámetros necesarios según corresponda:\n\n```text\n    export http_proxy=\"http://username:password@proxyserver:puerto/\"\n    export https_proxy=\"http://username:password@proxyserver:puerto/\"\n    export ftp_proxy=\"http://username:password@proxyserver:puerto/\"\n```\n\n## Configurar proxy para apt-get, apt y aptitude:\n\nCreamos o editamos el archivo `/etc/apt/apt.conf`\n\n```shell\n    sudo vim /etc/apt/apt.conf\n```\n\nAgregamos las siguientes líneas:\n\n```text\n    Acquire::http::Proxy \"http://username:password@proxyserver:puerto\";\n    Acquire::https::Proxy \"http://username:password@proxyserver:puerto\";\n    Acquire::ftp::Proxy \"http://username:password@proxyserver:puerto\";\n    #En caso de tener un repo local para el que no necesitemos proxy\n    Acquire::http::Proxy {\n    repositorio.localdomain.com DIRECT;\n    repositorio2.localdomain.com DIRECT;\n    };\n```\n\n## Configurar proxy para yum:\n\nEditar archivo `/etc/yum.conf`\n\n```text\n    # proxy server address and port\n    proxy=http://proxyserver:puerto\n    # user and password\n    proxy_username=usuario\n    proxy_password=contraseña\n```\n\n## Configurar proxy para pacman:\n\nEditamos el fichero `/etc/pacman.conf` y debemos descomentar `XferCommand` de la siguiente manera:\n\n```text\n    XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u\n```\n\n![pacman.conf.png](../images/configure-proxy-global-on-linux/pacman.conf.png)\n\nGuardamos los cambios y procedemos a editar el fichero de configuración para `wget`, herramienta utilizada para la descarga de paquetes.\n\n```shell\n    sudo vim /etc/wgetrc\n```\n\nEditamos el archivo de configuración `/etc/wgetrc` buscamos las siguientes líneas y las descomentamos o agregamos al final del archivo.\n\n```shell\n    https_proxy = http://username:password@proxyserver:puerto\n    http_proxy = http://username:password@proxyserver:puerto\n    ftp_proxy = http://username:password@proxyserver:puerto\n    use_proxy = on\n```\n\n## Configuración de proxy para nodejs(npm)\n\n```shell\n    npm config set proxy http://username:password@proxyserver:puerto\n    npm config set https-proxy http://username:password@proxyserver:puerto\n```\n\n## Configurar proxy para Git\n\n```shell\n    git config --global http.proxy http//proxyserver:puerto\n    git config --global https.proxy https//proxyserver:puerto\n    # En caso de tener conexión directa y necesitemos quitarle la configuración de proxy a git\n    git config --global --unset http.proxy\n    git config --global --unset https.proxy\n```\n\nComo se puede apreciar es muy complejo mantener constantemente la configuración de un proxy en tu pc, pero por suerte existen otras opciones que te permiten configurar un proxy de forma global a todo el sistema operativo. En sistemas como Windows o MacOS existen herramientas como Proxifier, ProxyCap entre otras que facilitan la salida a internet a través de un proxy por otra parte sistemas operativos GNU/Linux tenemos alternativas a estos programas como las listadas a continuación.\n\n# Redsock\n\n[Redsock](https://github.com/darkk/redsocks) es una herramienta que permite redirigir cualquier conexión TCP a SOCKS o proxy HTTPS usando su firewall, por lo que la redirección puede ser en todo el sistema o en toda la red. Esta herramienta es muy útil porque nos permite con un solo archivo de configuración poder usar la conexión a través del proxy en todo el sistema operativo.\n\n## Paquetes para las distintas distribuciones linux\n\n---\n\n- Archlinux/Manjaro: [redsocks-git](https://aur.archlinux.org/packages/redsocks-git)\n- Debian: [redsocks](http://packages.debian.org/search?searchon=names&keywords=redsocks)\n- Gentoo (zugaina overlay): [redsocks](http://gpo.zugaina.org/net-proxy/redsocks)\n- Gentoo: [redsocks](https://packages.gentoo.org/packages/net-proxy/redsocks)\n- Ubuntu: [redsocks](http://packages.ubuntu.com/search?searchon=names&keywords=redsocks)\n\n## Compilación manual de redsock\n\nPara compilar redsock necesitamos clonar su repositorio en GitHub <https://github.com/darkk/redsocks> y seguir las instrucciones en el **README.md**. Es necesario que en nuestro sistema esté instalado **[libevent-2.0.x](http://libevent.org/)**, al igual que los compiladores `gcc` y `clang`. La compilación es tan fácil como ejecutar `make` en el directorio raíz del proyecto.\n\n## Ejecutar redsock\n\nEjecutar redsock depende mucho de la distribución que estés usando y de la forma en la que el paquete instaló redsock. El programa\ntiene las siguientes opciones de línea de comando:\n\n- **\\-c** especifica el camino al archivo de configuración (`./redsocks.conf` es el usado por defecto)\n- **\\-t** esta opción verifica la sintaxis del archivo de configuración.\n- **\\-p** establece un archivo para escribir el `getpid()` donde se especifican las siguientes señales: `SIGUSR1` vuelca la lista de clientes conectados al registro, `SIGTERM` y `SIGINT` terminan el demonio, se cierran todas las conexiones activas.\n\nPuedes ver un ejemplo del archivo de configuración en [redsocks.conf.example](https://github.com/darkk/redsocks/blob/master/redsocks.conf.example).\n\n### Ejemplo de iptables\n\nTienes que construir iptables con seguimiento de conexión y objetivo `REDIRECT`.\n\n```text\n  # Create new chain\n  root# iptables -t nat -N REDSOCKS\n\n  # Ignore LANs and some other reserved addresses.\n  # See http://en.wikipedia.org/wiki/Reserved_IP_addresses#Reserved_IPv4_addresses\n  # and http://tools.ietf.org/html/rfc5735 for full list of reserved networks.\n  root# iptables -t nat -A REDSOCKS -d 0.0.0.0/8 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 10.0.0.0/8 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 100.64.0.0/10 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 127.0.0.0/8 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 169.254.0.0/16 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 172.16.0.0/12 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 192.168.0.0/16 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 198.18.0.0/15 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 224.0.0.0/4 -j RETURN\n  root# iptables -t nat -A REDSOCKS -d 240.0.0.0/4 -j RETURN\n\n  # Anything else should be redirected to port 12345\n  root# iptables -t nat -A REDSOCKS -p tcp -j REDIRECT --to-ports 12345\n\n  # Any tcp connection made by `luser' should be redirected.\n  root# iptables -t nat -A OUTPUT -p tcp -m owner --uid-owner luser -j REDSOCKS\n\n  # You can also control that in more precise way using `gid-owner` from\n  # iptables.\n  root# groupadd socksified\n  root# usermod --append --groups socksified luser\n  root# iptables -t nat -A OUTPUT -p tcp -m owner --gid-owner socksified -j REDSOCKS\n\n  # Now you can launch your specific application with GID `socksified` and it\n  # will be... socksified. See following commands (numbers may vary).\n  # Note: you may have to relogin to apply `usermod` changes.\n  luser$ id\n  uid=1000(luser) gid=1000(luser) groups=1000(luser),1001(socksified)\n  luser$ sg socksified -c id\n  uid=1000(luser) gid=1001(socksified) groups=1000(luser),1001(socksified)\n  luser$ sg socksified -c \"firefox\"\n\n  # If you want to configure socksifying router, you should look at\n  # doc/iptables-packet-flow.png, doc/iptables-packet-flow-ng.png and\n  # https://en.wikipedia.org/wiki/File:Netfilter-packet-flow.svg\n  # Note, you should have proper `local_ip' value to get external packets with\n  # redsocks, default 127.0.0.1 will not go. See iptables(8) manpage regarding\n  # REDIRECT target for details.\n  # Depending on your network configuration iptables conf. may be as easy as:\n  root# iptables -t nat -A PREROUTING --in-interface eth_int -p tcp -j REDSOCKS\n```\n\nRedsock es una de mis herramientas favoritas para configurar todo mi tráfico a internet a través de un proxy usando el protocolo TCP. A continuación les muestro otra alternativa más reciente que resulta muy interesante y de fácil configuración.\n\n# Proxifier-For-Linux\n\nProxifier-For-Linux es una herramienta que actúa como un intermediario entre el servidor proxy y los programas clientes que necesiten acceso a internet. Proxifier trabaja a través de los servidores proxy en nombre de los otros programas. Proxifier actúa como un punto global para configurar las reglas de proxy, que se aplicarán a todos los programas del sistema. Como mencioné anteriormente es un proyecto nuevo por lo que actualmente solo tiene soporte para proxies http.\n\nComo se explica en el repositorio oficial de [Proxifier-for-linux](https://github.com/m0hithreddy/Proxifier-For-Linux) nuestro sistema operativo debe contar con las siguientes dependencias.\n\n## Dependencias\n\nA continuación se muestra la lista de dependencias requeridas para compilar y ejecutar Proxifier, asi como la posible instalación en dependencia del sistema operativo que uses.\n\n### Instalar las dependencias\n\nPara comprobar si tienes ya las dependencias instaladas puedes usar el comando `which <nombre del paquete>`. Ejemplo `which autoconf` y si te devuelve la ruta es que ya esa dependencia está instalada.\n\n- [autoconf](https://github.com/autotools-mirror/autoconf) \\[sudo apt install autoconf]\n- [automake](https://github.com/autotools-mirror/automake) \\[sudo apt install automake]\n- [libtool](https://github.com/autotools-mirror/libtool) \\[sudo apt install libtool]\n- [txt2man](https://github.com/mvertes/txt2man) \\[sudo apt install txt2man]\n\n## Descargar Proxifier\n\nObtén la última versión estable de Proxifier clonando el repositorio de GitHub.\n\n```shell\n  git clone https://github.com/m0hithreddy/Proxifier-For-Linux.git && cd Proxifier-For-Linux\n```\n\n## Construir e Instalar\n\nDespués de instalar todas las dependencias, obtén el código fuente de Proxifier y dentro del directorio donde está el código ejecuta los siguientes comandos:\n\n```shell\nautoreconf -vfi\n./configure\nmake all\nsudo make uninstall\nsudo make install\n```\n\n## Como usar Proxifier\n\nEl servicio de Proxifier se puede habilitar ejecutando el comando:\n\n```shell\nsudo systemctl daemon-reload # Reload the service units\nsudo systemctl start proxifier\n```\n\nPara más información de Proxifier puedes consultar la ayuda ejecutando el comando `man proxifier`. El archivo de configuración se puede encontrar en la ruta `/usr/local/etc/proxifier.conf` donde puedes especificar la configuración de tu proxy.\n\nLa siguiente herramienta que te quiero mostrar es Proxychains\n\n# Proxychains\n\n[Proxychains-ng](https://github.com/haad/proxychains) es un servidor proxy que soporta los protocolos de internet HTTPs, SOCKS4 y SOCKS5 y funciona en plataformas basadas en Unix. Permite que cualquier conexión TCP hecha por un programa siga una serie de proxies(de los protocolos antes mencionados) hasta su destino. La lista de proxies así como la estrategia de selección de los proxies se definen con anterioridad.\n\n## Instalar proxychains\n\nProxychains está disponible con [pkgsrc](https://github.com/haad/proxychains/blob/master/www.pkgsrc.org) para todos los que lo usen en Linux, NetBSD, FreeBSD, OpenBSD, DragonFlyBSD o Mac OS X. Solo necesita instalar [pkgsrc-wip](http://pkgsrc-wip.sourceforge.net/) y ejecutar `make install` en un el directorio `wip/proxychains`\n\n### Instalar proxychains desde el código fuente\n\nClonar el código fuente de GitHub y ejecutar los siguientes comando:\n\n```shell\n git clone https://github.com/haad/proxychains.git && cd proxychains\n # se necesita un compilador de C, preferiblemente gcc\n ./configure\n make\n sudo make install\n```\n\n### Paquetes para las distintas distribuciones linux\n\n---\n\n- Archlinux/Manjaro: [proxychains-ng/](https://www.archlinux.org/packages/community/x86_64/proxychains-ng/)\n- Debian: [proxychains](https://packages.debian.org/search?keywords=proxychains)\n- Gentoo: [proxychains](https://packages.gentoo.org/packages/net-proxy/proxychains)\n- Fedora: [proxychains-ng](https://fedora.pkgs.org/32/fedora-x86_64/proxychains-ng-4.13-5.fc32.x86_64.rpm.html)\n- Ubuntu: [proxychains](http://packages.ubuntu.com/search?searchon=names&keywords=proxychains)\n\n## Configuración\n\nProxychains busca la configuración en el siguiente orden:\n\n- Puerto proxy SOCKS5 en la variable de entorno **${PROXYCHAINS_SOCKS5}** (si se establece, no se buscarán más configuraciones)\n- Archivo listado en la variable de entorno **${PROXYCHAINS_CONF_FILE}** o proporcionado como un argumento -f para el script o binario de proxychains.\n- ./proxychains.conf\n- $(HOME)/.proxychains/proxychains.conf\n- /etc/proxychains.conf\n\nVer más de la configuración en el archivo `/etc/proxychains.conf`\n\n### Ejemplo de como configurar varios proxies\n\nAl final del fichero `/etc/proxychains.conf` se encuentra la lista donde podemos agregar nuestros proxies. Las estrategias de selección de proxies varían entre `dynamic_chain, strict_chain, round_robin_chain, random_chain` y solo uno puede estar descomentado.\n\n- dynamic_chain: Dinámico: cada conexión se realizará a través de proxies encadenados, todos los proxies encadenados en el orden en que aparecen en la lista, al menos un proxy debe estar en línea para jugar en cadena (se omiten los proxies muertos) de lo contrario, EINTR se devuelve a la aplicación\n\n- strict_chain: Estricto: cada conexión se realizará a través de proxies encadenados, todos los proxies encadenados en el orden en que aparecen en la lista, todos los proxies deben estar en línea para jugar en cadena; de lo contrario, EINTR se devuelve a la aplicación\n\n- round_robin_chain: Round Robin: cada conexión se realizará a través de proxies encadenados de longitud `chain_len`, todos los proxies encadenados en el orden en que aparecen en la lista, al menos un proxy debe estar en línea para jugar en cadena (se omiten los proxies muertos). el inicio de la cadena de proxy actual es el proxy después del último proxy en la cadena de proxy invocada anteriormente. Si se alcanza el final de la cadena de proxy mientras se buscan proxies, comience de nuevo desde el principio. De lo contrario, EINTR se devuelve a la aplicación. Esta semántica no está garantizada en un entorno multiproceso.\n\n- random_chain: Aleatorio: cada conexión se realizará mediante un proxy aleatorio (o una cadena de proxy, consulte `chain_len`) de la lista.\n\n```text\n [ProxyList]\n # add proxy here ...\n # meanwile\n # defaults set to \"tor\"\n socks4  127.0.0.1 9050\n #psiphon proxy\n http 127.0.0.1 52525\n socks5 127.0.0.1 42552\n #Otro Proxy\n http 192.168.1.11 8080 user password\n #Mobile proxy\n http 192.168.44.244 3128 user password\n```\n\n## Ejemplos de uso\n\nEjecutar `proxychains <programa a ejecutar a través de un proxy>`\n\n```shell\nproxychains telnet targethost.com\n```\n\nEn este ejemplo se ejecuta el programa **telnet** a través de un proxy ( o una cadena de proxies ) especificada por **proxychains.conf**\n\nProxychains nos da una gran ventaja al poder encadenar muchos proxies a la vez lo que se usa mucho en ciberseguridad para ocultar la identidad de las peticiones realizadas. Una de las desventajas que tiene proxychains es que se ejecuta en la consola lo cual resulta incómodo cuando usamos programas con interfaz gráfica.\n\nEl siguiente en la lista es uno de mis favoritos pues es una VPN que permite configurar un proxy global para todo el sistema operativo así como montar un firewall en la pc.\n\n# Windscribe\n\n[Windscribe](https://windscribe.com/?friend=abhyp2zr) es un conjunto de herramientas que permiten bloquear los seguidores de anuncios y los beacons web, restaurar el acceso a contenido bloqueado y ayudarle a proteger su privacidad en línea. Hay dos componentes:\n\nLa aplicación de escritorio VPN (Windows, MacOS y Linux) y la extensión del navegador (Chrome, Edge, Firefox, Safari, ...)\n\nLa aplicación de escritorio es un cliente VPN (Virtual Private Network). Crea un túnel encriptado desde tu computadora a los servidores de [winscribe](https://windscribe.com/?affid=abhyp2zr), y toda tu actividad se envía a través del túnel. Esto tiene dos ventajas:\n\n1. La dirección IP de su proveedor de servicios de Internet (ISP) está enmascarada, por lo que cualquier sitio web que visite o cualquier aplicación que utilice (Skype, proveedores de correo electrónico, BitTorrent, etc.) verá nuestra dirección IP compartida por miles de personas.\n2. Su proveedor de servicios de Internet no puede ver lo que hace en línea. Esto es mucho más importante de lo que piensas.\n\nLo primero que se tiene que hacer es crear una cuenta en [Windscribe](https://windscribe.com/?friend=abhyp2zr) registrándose [aquí](https://windscribe.com/?friend=abhyp2zr). Windscribe nos da 2GB de consumo mensual gratis, pero si confirmamos nuestro correo electrónico este aumenta 5GB, además puedes aumentar hasta 15GB mensuales si creas un post en twitter dando en el botón _**Tweet4Data**_ en la configuración de tu cuenta.\n\n![More data](../images/configure-proxy-global-on-linux/more-data.png)\n\n## Instalar Windscribe\n\nDespués de registrarse se descarga el cliente de escritorio o la extensión para su navegador favorito en la sesión de [Descargas](https://windscribe.com/?friend=abhyp2zr). Seguir las instrucciones del enlace de descarga en dependencia del sistema operativo que uses.\n\n## Configuración del cliente de Windscribe para Linux\n\nLo primero que tenemos que hacer es arrancar el servicio de windscribe para ello ejecutamos el comando:\n\n```shell\n    sudo systemctl start windscribe\n```\n\nUna vez este corriendo el servicio de windscribe debemos configurar el proxy ejecutando el comando `windscribe proxy --host <direccion del proxy> --port <puerto> --user <usuario> --password <contraseña>`:\n\n```shell\nwindscribe proxy --host 19.18.4.54 --port 3128 --user acosta --password \"super password\"\nwindscribe proxy on\n```\n\nCon los comandos anteriores configuramos y activamos windscribe para que use nuestro proxy. Ahora cuando para conectar toda las aplicaciones salgan a internet a través de Windscribe ejecutamos el comando:\n\n```shell\nwindscribe connect best # Nos conecta al servidor de windscribe con mejor rendimiento\n```\n\nPara consultar la ayuda de windscribe podemos ejecutar el comando `windscribe --help`\n\n![Windscribe Help](../images/configure-proxy-global-on-linux/windscribe-help.png)\n\nEstas son algunas de las opciones que existen para configurar la salida a internet a través de un proxy en sistemas operativos GNU/Linux. De todas las variantes mostradas en este artículo mi favorita sin dudas es windscribe por todas las facilidades que ofrece.\n\nEspero que les sirva de ayuda en caso que quieran tener configurado de forma global un proxy en linux.\n";
				}
				function compiledContent$4() {
					return html$4;
				}
				function getHeadings$4() {
					return [{"depth":2,"slug":"configurar-proxy-en-la-terminal","text":"Configurar proxy en la terminal"},{"depth":2,"slug":"configurar-variables-de-entorno-para-la-familia-de-distribución-debianubuntu","text":"Configurar variables de entorno para la familia de distribución Debian|Ubuntu:"},{"depth":2,"slug":"configurar-variables-de-entorno-para-distribuciones-gnulinux-de-la-familia-redhatfedoracentos","text":"Configurar variables de entorno para distribuciones GNU/linux de la familia RedHat|Fedora|Centos:"},{"depth":2,"slug":"configurar-proxy-para-apt-get-apt-y-aptitude","text":"Configurar proxy para apt-get, apt y aptitude:"},{"depth":2,"slug":"configurar-proxy-para-yum","text":"Configurar proxy para yum:"},{"depth":2,"slug":"configurar-proxy-para-pacman","text":"Configurar proxy para pacman:"},{"depth":2,"slug":"configuración-de-proxy-para-nodejsnpm","text":"Configuración de proxy para nodejs(npm)"},{"depth":2,"slug":"configurar-proxy-para-git","text":"Configurar proxy para Git"},{"depth":1,"slug":"redsock","text":"Redsock"},{"depth":2,"slug":"paquetes-para-las-distintas-distribuciones-linux","text":"Paquetes para las distintas distribuciones linux"},{"depth":2,"slug":"compilación-manual-de-redsock","text":"Compilación manual de redsock"},{"depth":2,"slug":"ejecutar-redsock","text":"Ejecutar redsock"},{"depth":3,"slug":"ejemplo-de-iptables","text":"Ejemplo de iptables"},{"depth":1,"slug":"proxifier-for-linux","text":"Proxifier-For-Linux"},{"depth":2,"slug":"dependencias","text":"Dependencias"},{"depth":3,"slug":"instalar-las-dependencias","text":"Instalar las dependencias"},{"depth":2,"slug":"descargar-proxifier","text":"Descargar Proxifier"},{"depth":2,"slug":"construir-e-instalar","text":"Construir e Instalar"},{"depth":2,"slug":"como-usar-proxifier","text":"Como usar Proxifier"},{"depth":1,"slug":"proxychains","text":"Proxychains"},{"depth":2,"slug":"instalar-proxychains","text":"Instalar proxychains"},{"depth":3,"slug":"instalar-proxychains-desde-el-código-fuente","text":"Instalar proxychains desde el código fuente"},{"depth":3,"slug":"paquetes-para-las-distintas-distribuciones-linux-1","text":"Paquetes para las distintas distribuciones linux"},{"depth":2,"slug":"configuración","text":"Configuración"},{"depth":3,"slug":"ejemplo-de-como-configurar-varios-proxies","text":"Ejemplo de como configurar varios proxies"},{"depth":2,"slug":"ejemplos-de-uso","text":"Ejemplos de uso"},{"depth":1,"slug":"windscribe","text":"Windscribe"},{"depth":2,"slug":"instalar-windscribe","text":"Instalar Windscribe"},{"depth":2,"slug":"configuración-del-cliente-de-windscribe-para-linux","text":"Configuración del cliente de Windscribe para Linux"}];
				}
				function getHeaders$4() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$4();
				}				async function Content$4() {
					const { layout, ...content } = frontmatter$4;
					content.file = file$4;
					content.url = url$4;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$4 });
					return createVNode($$BlogPostTemplate, {
									file: file$4,
									url: url$4,
									content,
									frontmatter: content,
									headings: getHeadings$4(),
									rawContent: rawContent$4,
									compiledContent: compiledContent$4,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$4[Symbol.for('astro.needsHeadRendering')] = false;

const _page20 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$4,
	file: file$4,
	url: url$4,
	rawContent: rawContent$4,
	compiledContent: compiledContent$4,
	getHeadings: getHeadings$4,
	getHeaders: getHeaders$4,
	Content: Content$4,
	default: Content$4
}, Symbol.toStringTag, { value: 'Module' }));

const html$3 = "<p><img src=\"/uploads/portada.jpg\" alt=\"background\"></p>\n<p>La astronomía y la programación son dos de mis pasiones que en esta ocasión he decidido juntar. Con este objetivo crearemos una web sencilla para llevar la cuenta regresiva de cuantos días faltan hasta el nuevo año simulando el movimiento del planeta tierra. El demo se puede apreciar en el siguiente link <a href=\"https://yacosta738.github.io/countdown-to-new-year/\">https://yacosta738.github.io/countdown-to-new-year/</a></p>\n<p><img src=\"/uploads/example.png\" alt=\"Example\"></p>\n<p>Lo primero es crear un fichero <strong><code>style.css</code></strong> donde se define el estilo y la órbita de cada planeta:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #7EE787\">html</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">box-sizing</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">border-box</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7EE787\">html</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">*</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #7EE787\">html</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">*</span><span style=\"color: #79C0FF\">:before</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #7EE787\">html</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">*</span><span style=\"color: #79C0FF\">:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">box-sizing</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">inherit</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7EE787\">body</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">flex</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">justify-content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">center</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">align-items</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">center</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">vw</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">vh</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">overflow</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">hidden</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-size</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">62.5</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background-color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#121212</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-family</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">Arial</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">Helvetica</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">sans-serif</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">padding</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.solar-system</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">relative</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">max-width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">700</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">padding-top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">right</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">@media</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">min-width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">700</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">.solar-system</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">padding-top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">700</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">/*** ORBITS ***/</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">dotted</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">rgba</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">84</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">84</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">84</span><span style=\"color: #C9D1D9\"> / </span><span style=\"color: #79C0FF\">15</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-radius</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">translate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-sun</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">dotted</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#ff6600</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ffcc00</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-sun:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">''</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ff660017</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">99</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">99</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">block</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0.5</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0.5</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-radius</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">box-shadow</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#ff66006b</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#ff66006b</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">inset</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#ffcc00f2</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit.orbit-sun:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">'SUN'</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ffa200</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-3.5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-mercury</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">translate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-venus</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">150</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">150</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">translate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-earth</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">200</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">200</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-earth:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">''</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">solid</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">red</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">block</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">relative</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#54cbeb</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#54cbeb</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">transparent</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">transparent</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rotate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">52.75</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-0.5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">-webkit-animation</span><span style=\"color: #C9D1D9\">: blinker </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">linear</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">infinite</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">animation</span><span style=\"color: #C9D1D9\">: blinker </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">linear</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">infinite</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-mars</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">280</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">280</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">translate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.orbit-asteroids</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">380</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">calc</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">380</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">translate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">) </span><span style=\"color: #79C0FF\">rotate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">/*** PLANETS ***/</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-radius</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">translateY</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transition</span><span style=\"color: #C9D1D9\">: opacity </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ease</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-mercury</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-6</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transition-duration</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#bcc1c9</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-venus</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-8</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">14</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">14</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transition-duration</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ec5f24</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-earth</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-13</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">24</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">24</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transition-duration</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">3</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">z-index</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-mars</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-9</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">18</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">18</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transition-duration</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">4</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#d83e3c</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-asteroids</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-38</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">308</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1500</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">transition</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">all</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ease</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">s</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-mercury:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">'MERCURY'</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#bcc1c9</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">15</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">line-height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-venus:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">'VENUS'</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ec5f24</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">21</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">14</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">line-height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">14</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-earth:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">'EARTH'</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#54cbeb</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">29</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">24</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">line-height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">24</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-mars:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">'MARS'</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#d83e3c</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">23</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">18</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">line-height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">18</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-asteroids:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">'ASTEROID BELT'</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#666666</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">8</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">36.75</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-mars:after</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-venus:after</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-mercury:after</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-earth:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">''</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">linear-gradient</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">105</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">rgba</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">rgba</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">, </span><span style=\"color: #79C0FF\">0.6</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">transparent</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">transparent</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  );</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">block</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-radius</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">box-shadow</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">3</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#ffffff26</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0.8</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet-earth:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">box-shadow</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">3</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#54cbeb5c</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.planet</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">/*** SELECTED DAYS ***/</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.new-year-line</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.winter-solstice-line</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">12</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-bottom</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">dotted</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">white</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-13.35</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">z-index</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">white</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-13</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-50</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">14</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">line-height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.new-year-line:after</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.winter-solstice-line:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">''</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">28</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">28</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">block</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">float</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">right</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ffffff00</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">right</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-28</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-1</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">dotted</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#fff</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-radius</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">.winter-solstice-line</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">120</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-12.05</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#cronoNewYear</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#cronoWinterSolstice</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#fff</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">bottom</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-17</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-size</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1.1</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#cronoNewYear</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#cronoWinterSolstice</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-size</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0.75</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#666</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">/*** WARNING ***/</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#warning</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">fixed</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">bottom</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rgb</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> / </span><span style=\"color: #79C0FF\">0.75</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">45</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-size</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1.35</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ffa200</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">z-index</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">3</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">text-transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">uppercase</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">padding</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">text-align</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">center</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">flex</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">justify-content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">center</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">align-items</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">center</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#warning:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">' ! '</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">z-index</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-size</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1.9</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1.15</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">color</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ffa200</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">font-weight</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">bold</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#warning:after</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">''</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#ffa200</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">height</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">z-index</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#warning</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">p</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">display</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">block</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">!important</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">float</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">width</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">!important</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">padding-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2.5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#warning</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #7EE787\">p</span><span style=\"color: #79C0FF\">:before</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">content</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #A5D6FF\">''</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">position</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">absolute</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">z-index</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1.75</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">solid</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">transparent</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-bottom</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">2.85</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">solid</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">#040404</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0.775</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">-0.75</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#reload</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rgb</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">255</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">162</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">border-radius</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #FF7B72\">px</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">padding</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0.5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0.75</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">margin-left</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1.5</span><span style=\"color: #FF7B72\">em</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">cursor</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">pointer</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">outline</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">none</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">#reload:hover</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">background</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">#54cbeb</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">/* ANIMATIONS */</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">@-webkit-keyframes</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">blinker</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">0%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">52.85</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">40%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">51</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">50%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">51</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">60%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">51</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">100%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">48.25</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">@keyframes</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">blinker</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">0%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">52.85</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">40%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">51</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">50%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">51</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">60%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">51</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">100%</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">opacity</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">top</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">48.25</span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\">;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">@-webkit-keyframes</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">spin</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">from</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rotate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">to</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rotate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-360</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">@keyframes</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FFA657\">spin</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">from</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rotate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #79C0FF\">to</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">transform</span><span style=\"color: #C9D1D9\">: </span><span style=\"color: #79C0FF\">rotate</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">-360</span><span style=\"color: #FF7B72\">deg</span><span style=\"color: #C9D1D9\">);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span></code></pre>\n<p>Después creamos el fichero <strong><code>script.js</code></strong> donde se define toda la lógica para calcular la cantidad de días que faltan para el nuevo año:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #8B949E\">//prevent loading error</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">document.</span><span style=\"color: #D2A8FF\">getElementById</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'warning'</span><span style=\"color: #C9D1D9\">).</span><span style=\"color: #D2A8FF\">remove</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">//short getElementById</span></span>\n<span class=\"line\"><span style=\"color: #D2A8FF\">elem</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">function</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #FFA657\">id</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">return</span><span style=\"color: #C9D1D9\"> document.</span><span style=\"color: #D2A8FF\">getElementById</span><span style=\"color: #C9D1D9\">(id)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">//count until date</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">newYearDate</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Date</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">`Jan 1, ${</span><span style=\"color: #FF7B72\">new</span><span style=\"color: #A5D6FF\"> </span><span style=\"color: #79C0FF\">Date</span><span style=\"color: #A5D6FF\">().</span><span style=\"color: #D2A8FF\">getFullYear</span><span style=\"color: #A5D6FF\">() </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #A5D6FF\"> </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #A5D6FF\">} 00:00:00`</span><span style=\"color: #C9D1D9\">).</span><span style=\"color: #D2A8FF\">getTime</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">//title angles</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">todayDate</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Date</span><span style=\"color: #C9D1D9\">().</span><span style=\"color: #D2A8FF\">getTime</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">todaySecondsLeft</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> (newYearDate </span><span style=\"color: #FF7B72\">-</span><span style=\"color: #C9D1D9\"> todayDate) </span><span style=\"color: #FF7B72\">/</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1000</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">todayDays</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">parseInt</span><span style=\"color: #C9D1D9\">(todaySecondsLeft </span><span style=\"color: #FF7B72\">/</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">86400</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">randMer</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">random</span><span style=\"color: #C9D1D9\">() </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">4</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">-</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">)) </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">randVen</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">random</span><span style=\"color: #C9D1D9\">() </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">10</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">-</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">4</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">)) </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">4</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">randMar</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">random</span><span style=\"color: #C9D1D9\">() </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">16</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">-</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">8</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">)) </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">8</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">style</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> document.</span><span style=\"color: #D2A8FF\">createElement</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'style'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">style.innerHTML </span><span style=\"color: #FF7B72\">=</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'.orbit-mercury {transform: translate(-50%, -50%) rotate('</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randMer </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .orbit-venus {transform: translate(-50%, -50%) rotate('</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randVen </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .orbit-mars {transform: translate(-50%, -50%) rotate('</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randMar </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .planet-mercury {transform:rotate(-'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randMer </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .planet-venus {transform:rotate(-'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randVen </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .planet-mars {transform:rotate(-'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randMar </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .planet-earth {transform:rotate('</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  todayDays </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} .planet-venus {transform:rotate(-'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  randVen </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #A5D6FF\">'deg)} '</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">document.head.</span><span style=\"color: #D2A8FF\">appendChild</span><span style=\"color: #C9D1D9\">(style)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">//countdown vars</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">let</span><span style=\"color: #C9D1D9\"> days, hours, minutes, seconds</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #8B949E\">//countdown</span></span>\n<span class=\"line\"><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">countDown</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">setInterval</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #FF7B72\">function</span><span style=\"color: #C9D1D9\"> () {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">rightNow</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Date</span><span style=\"color: #C9D1D9\">().</span><span style=\"color: #D2A8FF\">getTime</span><span style=\"color: #C9D1D9\">()</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">timeTo</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> newYearDate </span><span style=\"color: #FF7B72\">-</span><span style=\"color: #C9D1D9\"> rightNow</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  days </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">(timeTo </span><span style=\"color: #FF7B72\">/</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">24</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  hours </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">((timeTo </span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">24</span><span style=\"color: #C9D1D9\">)) </span><span style=\"color: #FF7B72\">/</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  minutes </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">((timeTo </span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\">)) </span><span style=\"color: #FF7B72\">/</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\">))</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  seconds </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Math</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #79C0FF\">floor</span><span style=\"color: #C9D1D9\">((timeTo </span><span style=\"color: #FF7B72\">%</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">*</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">60</span><span style=\"color: #C9D1D9\">)) </span><span style=\"color: #FF7B72\">/</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (hours </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #C9D1D9\">) hours </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'0'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> hours</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (minutes </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #C9D1D9\">) minutes </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'0'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> minutes</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (seconds </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">10</span><span style=\"color: #C9D1D9\">) seconds </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'0'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> seconds</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">elem</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'cronoNewYear'</span><span style=\"color: #C9D1D9\">).innerHTML </span><span style=\"color: #FF7B72\">=</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    days </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">' &#x3C;span>DAYS&#x3C;/span> &#x26;nbsp;'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    hours </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">':'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    minutes </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">':'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    seconds </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">' &#x3C;span>LEFT&#x3C;/span>'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">let</span><span style=\"color: #C9D1D9\"> newDays</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (days </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">elem</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'cronoNewYear'</span><span style=\"color: #C9D1D9\">).style.display </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'none'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    newDays </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> days.</span><span style=\"color: #D2A8FF\">toString</span><span style=\"color: #C9D1D9\">().</span><span style=\"color: #D2A8FF\">substr</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">1</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  } </span><span style=\"color: #FF7B72\">else</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    newDays </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'-'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> days</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">elem</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'position-earth'</span><span style=\"color: #C9D1D9\">).style.transform </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'translate(-50%, -50%) rotate('</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> newDays </span><span style=\"color: #FF7B72\">+</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'deg'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">let</span><span style=\"color: #C9D1D9\"> solsDays</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">cDays</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> days </span><span style=\"color: #FF7B72\">-</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">11</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (cDays </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">elem</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'cronoWinterSolstice'</span><span style=\"color: #C9D1D9\">).style.display </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'none'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  } </span><span style=\"color: #FF7B72\">else</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    solsDays </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> cDays</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">elem</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'cronoWinterSolstice'</span><span style=\"color: #C9D1D9\">).innerHTML </span><span style=\"color: #FF7B72\">=</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    solsDays </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">' &#x3C;span>DAYS&#x3C;/span> &#x26;nbsp;'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    hours </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">':'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    minutes </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">':'</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    seconds </span><span style=\"color: #FF7B72\">+</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #A5D6FF\">' &#x3C;span>LEFT&#x3C;/span>'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">const</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">opacityList</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> document.</span><span style=\"color: #D2A8FF\">querySelectorAll</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'.planet'</span><span style=\"color: #C9D1D9\">)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">for</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #FF7B72\">let</span><span style=\"color: #C9D1D9\"> i </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">; i </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> opacityList.</span><span style=\"color: #79C0FF\">length</span><span style=\"color: #C9D1D9\">; i</span><span style=\"color: #FF7B72\">++</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    opacityList[i].style.opacity </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #A5D6FF\">'1'</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">if</span><span style=\"color: #C9D1D9\"> (timeTo </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">0</span><span style=\"color: #C9D1D9\">) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">clearInterval</span><span style=\"color: #C9D1D9\">(countDown)</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}, </span><span style=\"color: #79C0FF\">1000</span><span style=\"color: #C9D1D9\">)</span></span></code></pre>\n<p>Por último se crea un fichero <strong><code>index.html</code></strong> que contendrá todo el código html de nuestra página web. El documento html comienza con la definición del tipo de documento seguido por el lenguaje de la página, en la sección del encabezado encontramos el título, algunos metadatos así como la importación de los estilos de la página. En el cuerpo del documento hacemos usos de las clases creadas previamente para poder visualizar los planetas y sus órbitas. Al final importamos el fichero javascript creado con anterioridad:</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;!</span><span style=\"color: #7EE787\">DOCTYPE</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">html</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">html</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">lang</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"en\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">head</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">meta</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">charset</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"UTF-8\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">title</span><span style=\"color: #C9D1D9\">>Countdown to New Year&#x3C;/</span><span style=\"color: #7EE787\">title</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">link</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      </span><span style=\"color: #79C0FF\">rel</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"stylesheet\"</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      </span><span style=\"color: #79C0FF\">href</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css\"</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">link</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">rel</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"stylesheet\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">href</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"./style.css\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;/</span><span style=\"color: #7EE787\">head</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">body</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #8B949E\">&#x3C;!-- partial:index.partial.html --></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"solar-system\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"orbit orbit-sun\"</span><span style=\"color: #C9D1D9\">>&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"orbit orbit-mercury\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"position-mercury\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"planet planet-mercury\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"opacity-mercury\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          &#x3C;</span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"assets/image/mercury.png\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">alt</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"mercury\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"orbit orbit-venus\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"position-venus\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"planet planet-venus\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"opacity-venus\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          &#x3C;</span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"assets/image/venus.png\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">alt</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"venus\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"orbit orbit-earth\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"position-earth\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"planet planet-earth\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"opacity-earth\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          &#x3C;</span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"assets/image/earth.png\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">alt</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"earth\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"orbit orbit-mars\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"position-mars\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"planet planet-mars\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"opacity-mars\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          &#x3C;</span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"assets/image/mars.png\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">alt</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"mars\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"orbit orbit-asteroids\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"position-asteroids\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"planet planet-asteroids\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"opacity-asteroids\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          &#x3C;</span><span style=\"color: #7EE787\">img</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"assets/image/asteroids-belt.png\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">alt</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"asteroids\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"new-year-line\"</span><span style=\"color: #C9D1D9\">>NEW YEAR &#x3C;</span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"cronoNewYear\"</span><span style=\"color: #C9D1D9\">>&#x3C;/</span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\">>&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"winter-solstice-line\"</span><span style=\"color: #C9D1D9\">>WINTER SOLSTICE &#x3C;</span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"cronoWinterSolstice\"</span><span style=\"color: #C9D1D9\">>&#x3C;/</span><span style=\"color: #7EE787\">span</span><span style=\"color: #C9D1D9\">>&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"warning\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">p</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        it seems that the earth has gone out of its orbit...</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        &#x3C;</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">id</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"reload\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">onclick</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"</span><span style=\"color: #C9D1D9\">location.</span><span style=\"color: #D2A8FF\">reload</span><span style=\"color: #C9D1D9\">()\"</span><span style=\"color: #C9D1D9\">>RE-ORBIT&#x3C;/</span><span style=\"color: #7EE787\">button</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;/</span><span style=\"color: #7EE787\">p</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #8B949E\">&#x3C;!-- partial --></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">src</span><span style=\"color: #C9D1D9\">=</span><span style=\"color: #A5D6FF\">\"./script.js\"</span><span style=\"color: #C9D1D9\">>&#x3C;/</span><span style=\"color: #7EE787\">script</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;/</span><span style=\"color: #7EE787\">body</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">html</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<p>Todo el código se puede descargar desde GitHub en el siguiente link <a href=\"https://github.com/yacosta738/countdown-to-new-year\">https://github.com/yacosta738/countdown-to-new-year</a></p>";

				const frontmatter$3 = {"minutesRead":8,"layout":"../../../components/templates/BlogPostTemplate.astro","title":"Cuenta regresiva para el nuevo Año","description":"La astronomía y la programación son dos de mis pasiones que en esta ocasión he decidido juntar. Con este objetivo crearemos una web sencilla para llevar la cuenta regresiva de cuantos días faltan hasta el nuevo año simulando el movimiento del planeta tierra.","date":"2020-12-27T00:00:00.000Z","cover":"/uploads/portada.jpg","author":"Yuniel Acosta","lang":"es","tags":["JavaScript","TypeScript","HTML","CSS"],"categories":["Programming"],"draft":false};
				const file$3 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/countdown-to-new-year-astronomy.md";
				const url$3 = "/es/blog/countdown-to-new-year-astronomy";
				function rawContent$3() {
					return "\n![background](/uploads/portada.jpg)\n\nLa astronomía y la programación son dos de mis pasiones que en esta ocasión he decidido juntar. Con este objetivo crearemos una web sencilla para llevar la cuenta regresiva de cuantos días faltan hasta el nuevo año simulando el movimiento del planeta tierra. El demo se puede apreciar en el siguiente link <https://yacosta738.github.io/countdown-to-new-year/>\n\n![Example](/uploads/example.png)\n\nLo primero es crear un fichero **`style.css`** donde se define el estilo y la órbita de cada planeta:\n\n```css\nhtml {\n  box-sizing: border-box;\n}\n\nhtml *,\nhtml *:before,\nhtml *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  font-size: 62.5%;\n  background-color: #121212;\n  font-family: Arial, Helvetica, sans-serif;\n  margin: 0;\n  padding: 0;\n}\n\n.solar-system {\n  position: relative;\n  width: 100%;\n  max-width: 700px;\n  padding-top: 100%;\n  right: -50%;\n}\n\n@media (min-width: 700px) {\n  .solar-system {\n    padding-top: 700px;\n  }\n}\n\n/*** ORBITS ***/\n\n.orbit {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  border: 2px dotted rgba(84 84 84 / 15%);\n  border-radius: 100%;\n  transform: translate(-50%, -50%);\n}\n\n.orbit-sun {\n  width: calc(50%);\n  height: calc(50%);\n  border: 1px dotted #ff6600;\n  background: #ffcc00;\n}\n\n.orbit-sun:before {\n  content: '';\n  background: #ff660017;\n  width: 99%;\n  height: 99%;\n  display: block;\n  margin-left: 0.5%;\n  margin-top: 0.5%;\n  border-radius: 100%;\n  box-shadow: 0 0 10em 5em #ff66006b, 0 0 100px 50px #ff66006b inset, 0 0 10px 5px #ffcc00f2;\n}\n\n.orbit.orbit-sun:after {\n  content: 'SUN';\n  color: #ffa200;\n  top: 50%;\n  position: absolute;\n  left: -3.5em;\n}\n\n.orbit-mercury {\n  width: calc(100%);\n  height: calc(100%);\n  transform: translate(-50%, -50%);\n}\n\n.orbit-venus {\n  width: calc(150%);\n  height: calc(150%);\n  transform: translate(-50%, -50%);\n}\n\n.orbit-earth {\n  width: calc(200%);\n  height: calc(200%);\n}\n\n.orbit-earth:after {\n  content: '';\n  border: 2px solid red;\n  width: 1em;\n  height: 1em;\n  display: block;\n  position: relative;\n  border-color: #54cbeb #54cbeb transparent transparent;\n  transform: rotate(-50deg);\n  border-width: 2px 2px 0 0;\n  top: 52.75%;\n  left: -0.5em;\n  -webkit-animation: blinker 2s linear infinite;\n  animation: blinker 2s linear infinite;\n}\n\n.orbit-mars {\n  width: calc(280%);\n  height: calc(280%);\n  transform: translate(-50%, -50%);\n}\n\n.orbit-asteroids {\n  width: calc(380%);\n  height: calc(380%);\n  transform: translate(-50%, -50%) rotate(0deg);\n}\n\n/*** PLANETS ***/\n\n.planet {\n  position: absolute;\n  top: 50%;\n  border-radius: 100%;\n  opacity: 0;\n  transform: translateY(-50%);\n  transition: opacity 0s ease 0s;\n}\n\n.planet-mercury {\n  left: -6px;\n  width: 10px;\n  height: 10px;\n  transition-duration: 1s;\n  background: #bcc1c9;\n}\n\n.planet-venus {\n  left: -8px;\n  width: 14px;\n  height: 14px;\n  transition-duration: 2s;\n  background: #ec5f24;\n}\n\n.planet-earth {\n  left: -13px;\n  width: 24px;\n  height: 24px;\n  transition-duration: 3s;\n  z-index: 1;\n}\n\n.planet-mars {\n  left: -9px;\n  width: 18px;\n  height: 18px;\n  transition-duration: 4s;\n  background: #d83e3c;\n}\n\n.planet-asteroids {\n  left: -38px;\n  width: 308px;\n  height: 1500px;\n  transition: all 5s ease 0s;\n}\n\n.planet-mercury:before {\n  content: 'MERCURY';\n  color: #bcc1c9;\n  margin-left: 15px;\n  top: 0px;\n  position: absolute;\n  height: 10px;\n  line-height: 10px;\n}\n\n.planet-venus:before {\n  content: 'VENUS';\n  color: #ec5f24;\n  margin-left: 21px;\n  top: 1px;\n  position: absolute;\n  height: 14px;\n  line-height: 14px;\n}\n\n.planet-earth:before {\n  content: 'EARTH';\n  color: #54cbeb;\n  margin-left: 29px;\n  top: 1px;\n  position: absolute;\n  height: 24px;\n  line-height: 24px;\n}\n\n.planet-mars:before {\n  content: 'MARS';\n  color: #d83e3c;\n  margin-left: 23px;\n  top: 1px;\n  position: absolute;\n  height: 18px;\n  line-height: 18px;\n}\n\n.planet-asteroids:before {\n  content: 'ASTEROID BELT';\n  color: #666666;\n  margin-left: 8em;\n  top: 36.75%;\n  position: absolute;\n}\n\n.planet-mars:after,\n.planet-venus:after,\n.planet-mercury:after,\n.planet-earth:after {\n  content: '';\n  background: linear-gradient(\n    105deg,\n    rgba(0, 0, 0, 1),\n    rgba(0, 0, 0, 0.6),\n    transparent,\n    transparent\n  );\n  display: block;\n  width: 100%;\n  height: 100%;\n  border-radius: 100%;\n  box-shadow: 0 0 3px 2px #ffffff26;\n  opacity: 0.8;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.planet-earth:after {\n  box-shadow: 0 0 5px 3px #54cbeb5c;\n}\n\n.planet img {\n  width: 100%;\n}\n\n/*** SELECTED DAYS ***/\n\n.new-year-line,\n.winter-solstice-line {\n  width: 12em;\n  border-bottom: 2px dotted white;\n  position: absolute;\n  left: -13.35em;\n  top: 50%;\n  z-index: -1;\n  color: white;\n  margin-top: -13px;\n  margin-left: -50%;\n  height: 14px;\n  line-height: 1em;\n}\n\n.new-year-line:after,\n.winter-solstice-line:after {\n  content: '';\n  width: 28px;\n  height: 28px;\n  display: block;\n  float: right;\n  position: absolute;\n  background: #ffffff00;\n  right: -28px;\n  top: -1px;\n  border: 2px dotted #fff;\n  border-radius: 100%;\n}\n\n.winter-solstice-line {\n  margin-top: 120px;\n  left: -12.05em;\n}\n\n#cronoNewYear,\n#cronoWinterSolstice {\n  left: 0;\n  position: absolute;\n  color: #fff;\n  width: 100%;\n  bottom: -17px;\n  font-size: 1.1em;\n}\n\n#cronoNewYear span,\n#cronoWinterSolstice span {\n  font-size: 0.75em;\n  color: #666;\n}\n\n/*** WARNING ***/\n\n#warning {\n  position: fixed;\n  left: 2em;\n  bottom: 2em;\n  background: rgb(0 0 0 / 0.75);\n  height: 5em;\n  width: 45em;\n  font-size: 1.35em;\n  color: #ffa200;\n  z-index: 3;\n  text-transform: uppercase;\n  padding: 0;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#warning:before {\n  content: ' ! ';\n  z-index: 2;\n  font-size: 1.9em;\n  margin-left: 1.15em;\n  color: #ffa200;\n  font-weight: bold;\n  margin-top: 5px;\n}\n\n#warning:after {\n  content: '';\n  background: #ffa200;\n  position: absolute;\n  left: 0;\n  width: 5em;\n  height: 5em;\n  z-index: 0;\n}\n\n#warning p {\n  display: block !important;\n  float: left;\n  width: 100%;\n  margin: 0 !important;\n  padding-left: 2.5em;\n}\n\n#warning p:before {\n  content: '';\n  position: absolute;\n  z-index: 1;\n  border: 1.75em solid transparent;\n  border-bottom: 2.85em solid #040404;\n  left: 0.775em;\n  top: -0.75em;\n}\n\n#reload {\n  background: rgb(255 162 0);\n  border: 0;\n  border-radius: 1px;\n  padding: 0.5em 0.75em;\n  margin-left: 1.5em;\n  cursor: pointer;\n  outline: none;\n}\n\n#reload:hover {\n  background: #54cbeb;\n}\n\n/* ANIMATIONS */\n\n@-webkit-keyframes blinker {\n  0% {\n    opacity: 0;\n    top: 52.85%;\n  }\n  40% {\n    opacity: 1;\n    top: 51%;\n  }\n  50% {\n    opacity: 0;\n    top: 51%;\n  }\n  60% {\n    opacity: 1;\n    top: 51%;\n  }\n  100% {\n    opacity: 0;\n    top: 48.25%;\n  }\n}\n\n@keyframes blinker {\n  0% {\n    opacity: 0;\n    top: 52.85%;\n  }\n  40% {\n    opacity: 1;\n    top: 51%;\n  }\n  50% {\n    opacity: 0;\n    top: 51%;\n  }\n  60% {\n    opacity: 1;\n    top: 51%;\n  }\n  100% {\n    opacity: 0;\n    top: 48.25%;\n  }\n}\n\n@-webkit-keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(-360deg);\n  }\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(-360deg);\n  }\n}\n```\n\nDespués creamos el fichero **`script.js`** donde se define toda la lógica para calcular la cantidad de días que faltan para el nuevo año:\n\n```js\n//prevent loading error\ndocument.getElementById('warning').remove()\n\n//short getElementById\nelem = function (id) {\n  return document.getElementById(id)\n}\n\n//count until date\nconst newYearDate = new Date(`Jan 1, ${new Date().getFullYear() + 1} 00:00:00`).getTime()\n\n//title angles\nconst todayDate = new Date().getTime()\nconst todaySecondsLeft = (newYearDate - todayDate) / 1000\nconst todayDays = parseInt(todaySecondsLeft / 86400)\nconst randMer = Math.floor(Math.random() * (4 - 1 + 1)) + 1\nconst randVen = Math.floor(Math.random() * (10 - 4 + 1)) + 4\nconst randMar = Math.floor(Math.random() * (16 - 8 + 1)) + 8\nconst style = document.createElement('style')\nstyle.innerHTML =\n  '.orbit-mercury {transform: translate(-50%, -50%) rotate(' +\n  randMer +\n  'deg)} .orbit-venus {transform: translate(-50%, -50%) rotate(' +\n  randVen +\n  'deg)} .orbit-mars {transform: translate(-50%, -50%) rotate(' +\n  randMar +\n  'deg)} .planet-mercury {transform:rotate(-' +\n  randMer +\n  'deg)} .planet-venus {transform:rotate(-' +\n  randVen +\n  'deg)} .planet-mars {transform:rotate(-' +\n  randMar +\n  'deg)} .planet-earth {transform:rotate(' +\n  todayDays +\n  'deg)} .planet-venus {transform:rotate(-' +\n  randVen +\n  'deg)} '\ndocument.head.appendChild(style)\n\n//countdown vars\nlet days, hours, minutes, seconds\n\n//countdown\nconst countDown = setInterval(function () {\n  const rightNow = new Date().getTime()\n  const timeTo = newYearDate - rightNow\n\n  days = Math.floor(timeTo / (1000 * 60 * 60 * 24))\n  hours = Math.floor((timeTo % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  minutes = Math.floor((timeTo % (1000 * 60 * 60)) / (1000 * 60))\n  seconds = Math.floor((timeTo % (1000 * 60)) / 1000)\n\n  if (hours < 10) hours = '0' + hours\n  if (minutes < 10) minutes = '0' + minutes\n  if (seconds < 10) seconds = '0' + seconds\n\n  elem('cronoNewYear').innerHTML =\n    days +\n    ' <span>DAYS</span> &nbsp;' +\n    hours +\n    ':' +\n    minutes +\n    ':' +\n    seconds +\n    ' <span>LEFT</span>'\n  let newDays\n  if (days < 0) {\n    elem('cronoNewYear').style.display = 'none'\n    newDays = days.toString().substr(1)\n  } else {\n    newDays = '-' + days\n  }\n  elem('position-earth').style.transform = 'translate(-50%, -50%) rotate(' + newDays + 'deg'\n\n  let solsDays\n  const cDays = days - 11\n  if (cDays < 0) {\n    elem('cronoWinterSolstice').style.display = 'none'\n  } else {\n    solsDays = cDays\n  }\n  elem('cronoWinterSolstice').innerHTML =\n    solsDays +\n    ' <span>DAYS</span> &nbsp;' +\n    hours +\n    ':' +\n    minutes +\n    ':' +\n    seconds +\n    ' <span>LEFT</span>'\n\n  const opacityList = document.querySelectorAll('.planet')\n  for (let i = 0; i < opacityList.length; i++) {\n    opacityList[i].style.opacity = '1'\n  }\n\n  if (timeTo < 0) {\n    clearInterval(countDown)\n  }\n}, 1000)\n```\n\nPor último se crea un fichero **`index.html`** que contendrá todo el código html de nuestra página web. El documento html comienza con la definición del tipo de documento seguido por el lenguaje de la página, en la sección del encabezado encontramos el título, algunos metadatos así como la importación de los estilos de la página. En el cuerpo del documento hacemos usos de las clases creadas previamente para poder visualizar los planetas y sus órbitas. Al final importamos el fichero javascript creado con anterioridad:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Countdown to New Year</title>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css\"\n    />\n    <link rel=\"stylesheet\" href=\"./style.css\" />\n  </head>\n  <body>\n    <!-- partial:index.partial.html -->\n    <div class=\"solar-system\">\n      <div class=\"orbit orbit-sun\"></div>\n      <div class=\"orbit orbit-mercury\" id=\"position-mercury\">\n        <div class=\"planet planet-mercury\" id=\"opacity-mercury\">\n          <img src=\"assets/image/mercury.png\" alt=\"mercury\" />\n        </div>\n      </div>\n      <div class=\"orbit orbit-venus\" id=\"position-venus\">\n        <div class=\"planet planet-venus\" id=\"opacity-venus\">\n          <img src=\"assets/image/venus.png\" alt=\"venus\" />\n        </div>\n      </div>\n      <div class=\"orbit orbit-earth\" id=\"position-earth\">\n        <div class=\"planet planet-earth\" id=\"opacity-earth\">\n          <img src=\"assets/image/earth.png\" alt=\"earth\" />\n        </div>\n      </div>\n      <div class=\"orbit orbit-mars\" id=\"position-mars\">\n        <div class=\"planet planet-mars\" id=\"opacity-mars\">\n          <img src=\"assets/image/mars.png\" alt=\"mars\" />\n        </div>\n      </div>\n      <div class=\"orbit orbit-asteroids\" id=\"position-asteroids\">\n        <div class=\"planet planet-asteroids\" id=\"opacity-asteroids\">\n          <img src=\"assets/image/asteroids-belt.png\" alt=\"asteroids\" />\n        </div>\n      </div>\n      <div class=\"new-year-line\">NEW YEAR <span id=\"cronoNewYear\"></span></div>\n      <div class=\"winter-solstice-line\">WINTER SOLSTICE <span id=\"cronoWinterSolstice\"></span></div>\n    </div>\n    <div id=\"warning\">\n      <p>\n        it seems that the earth has gone out of its orbit...\n        <button id=\"reload\" onclick=\"location.reload()\">RE-ORBIT</button>\n      </p>\n    </div>\n    <!-- partial -->\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n```\n\nTodo el código se puede descargar desde GitHub en el siguiente link <https://github.com/yacosta738/countdown-to-new-year>\n";
				}
				function compiledContent$3() {
					return html$3;
				}
				function getHeadings$3() {
					return [];
				}
				function getHeaders$3() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$3();
				}				async function Content$3() {
					const { layout, ...content } = frontmatter$3;
					content.file = file$3;
					content.url = url$3;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$3 });
					return createVNode($$BlogPostTemplate, {
									file: file$3,
									url: url$3,
									content,
									frontmatter: content,
									headings: getHeadings$3(),
									rawContent: rawContent$3,
									compiledContent: compiledContent$3,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$3[Symbol.for('astro.needsHeadRendering')] = false;

const _page21 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$3,
	file: file$3,
	url: url$3,
	rawContent: rawContent$3,
	compiledContent: compiledContent$3,
	getHeadings: getHeadings$3,
	getHeaders: getHeaders$3,
	Content: Content$3,
	default: Content$3
}, Symbol.toStringTag, { value: 'Module' }));

const html$2 = "<h2 id=\"qué-es-la-página-de-perfil-de-github\">¿Qué es la página de perfil de GitHub?</h2>\n<p>Una página de perfil de github como cualquier otra página de perfil de redes sociales muestra al usuario sus repositorios públicos y sus contribuciones a todos los repositorios por día, mes y año. Una persona también puede ver a quién sigues en github y cuántas personas te siguen. Aparte de esto, también muestra los repositorios resaltados.</p>\n<p>Sin embargo, hasta ahora no era posible personalizar esta página, ya que no había personalización disponible. Pero ahora es posible personalizar su página de perfil de github modificando un <strong>README.md</strong> en un repositorio con el mismo nombre de usuario.</p>\n<p>Entonces empecemos:</p>\n<h3 id=\"paso-1-crea-un-repositorio\">Paso 1: Crea un repositorio</h3>\n<p>Inicie sesión en <a href=\"https://www.github.com\">github</a> y cree un nuevo repositorio con el mismo nombre que su nombre de usuario de github. Asegúrese de mantener este repositorio público e inicializarlo con el archivo <strong>README.md</strong> como se muestra en la siguiente captura de pantalla.\n<img src=\"/uploads/yacosta738.png\" alt=\"yacosta738\" title=\"Crear un nuevo repositorio\"></p>\n<h3 id=\"paso-2-edite-el-archivo-readmemd\">Paso 2: Edite el archivo README.md</h3>\n<p>Una vez creado el repositorio, abra el archivo <strong>README.md</strong> y comience a editarlo. Puede agregar cualquier cosa en este archivo, por ejemplo, el enlace de su perfil de Twitter, el enlace de su perfil de LinkedIn, etc. También puede agregar su biografía o descripción sobre su interés, pasatiempos, tecnologías que le gustan, etc., como puede ver en la captura de pantalla a continuación.\n<img src=\"/uploads/edit-readme.png\" alt=\"readme.md\" title=\"Editar el archivo README.md\"></p>\n<h3 id=\"paso-3-commit-el-archivo-readmemd\">Paso 3: Commit el archivo README.md</h3>\n<p>Cuando haya terminado de realizar el cambio y esté listo, obtenga una vista previa de los cambios y asegúrese de confirmarlos.\n<img src=\"/uploads/commited.png\" alt=\"commit readme\" title=\"Commit el archivo README.md\"></p>\n<h3 id=\"paso-4-verifica-tus-cambios-en-tu-perfil-de-github\">Paso 4: Verifica tus cambios en tu perfil de Github</h3>\n<p>Último paso es ir a la página de su perfil de github y verificar que los cambios aparezcan allí.\n<img src=\"/uploads/acosta-github-profile.png\" alt=\"acosta github profile\" title=\"Verifica tus cambios en tu perfil de Githu\"></p>\n<p>Puede utilizar esta herramienta para generar su perfil <strong>Readme.md</strong> sin codificar <a href=\"https://rahuldkjain.github.io/gh-profile-readme-generator/\">gh-profile-readme-generator</a></p>\n<p>Con suerte, has aprendido algo nuevo hoy y te ha gustado esta publicación.</p>\n<p>Codificación feliz 🤠.</p>";

				const frontmatter$2 = {"minutesRead":2,"layout":"../../../components/templates/BlogPostTemplate.astro","title":"Personalización de la página de perfil de Github","description":"Puedes personalizar tu perfil para que otras personas puedan tener una mejor idea de quién eres y del trabajo que haces.","date":"2021-05-11T02:05:59.285Z","cover":"/uploads/acosta-github-profile.png","author":"Yuniel Acosta","lang":"es","tags":["Github","User Profile","markdown","gh"],"categories":["Github","Development"],"draft":false};
				const file$2 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/customizing-github-profile-page.md";
				const url$2 = "/es/blog/customizing-github-profile-page";
				function rawContent$2() {
					return "\n## ¿Qué es la página de perfil de GitHub?\n\nUna página de perfil de github como cualquier otra página de perfil de redes sociales muestra al usuario sus repositorios públicos y sus contribuciones a todos los repositorios por día, mes y año. Una persona también puede ver a quién sigues en github y cuántas personas te siguen. Aparte de esto, también muestra los repositorios resaltados.\n\nSin embargo, hasta ahora no era posible personalizar esta página, ya que no había personalización disponible. Pero ahora es posible personalizar su página de perfil de github modificando un **README.md** en un repositorio con el mismo nombre de usuario.\n\nEntonces empecemos:\n\n### Paso 1: Crea un repositorio\n\nInicie sesión en [github](https://www.github.com) y cree un nuevo repositorio con el mismo nombre que su nombre de usuario de github. Asegúrese de mantener este repositorio público e inicializarlo con el archivo **README.md** como se muestra en la siguiente captura de pantalla.\n![yacosta738](/uploads/yacosta738.png 'Crear un nuevo repositorio')\n\n### Paso 2: Edite el archivo README.md\n\nUna vez creado el repositorio, abra el archivo **README.md** y comience a editarlo. Puede agregar cualquier cosa en este archivo, por ejemplo, el enlace de su perfil de Twitter, el enlace de su perfil de LinkedIn, etc. También puede agregar su biografía o descripción sobre su interés, pasatiempos, tecnologías que le gustan, etc., como puede ver en la captura de pantalla a continuación.\n![readme.md](/uploads/edit-readme.png 'Editar el archivo README.md')\n\n### Paso 3: Commit el archivo README.md\n\nCuando haya terminado de realizar el cambio y esté listo, obtenga una vista previa de los cambios y asegúrese de confirmarlos.\n![commit readme](/uploads/commited.png 'Commit el archivo README.md')\n\n### Paso 4: Verifica tus cambios en tu perfil de Github\n\nÚltimo paso es ir a la página de su perfil de github y verificar que los cambios aparezcan allí.\n![acosta github profile](/uploads/acosta-github-profile.png 'Verifica tus cambios en tu perfil de Githu')\n\nPuede utilizar esta herramienta para generar su perfil **Readme.md** sin codificar [gh-profile-readme-generator](https://rahuldkjain.github.io/gh-profile-readme-generator/)\n\nCon suerte, has aprendido algo nuevo hoy y te ha gustado esta publicación.\n\nCodificación feliz 🤠.\n";
				}
				function compiledContent$2() {
					return html$2;
				}
				function getHeadings$2() {
					return [{"depth":2,"slug":"qué-es-la-página-de-perfil-de-github","text":"¿Qué es la página de perfil de GitHub?"},{"depth":3,"slug":"paso-1-crea-un-repositorio","text":"Paso 1: Crea un repositorio"},{"depth":3,"slug":"paso-2-edite-el-archivo-readmemd","text":"Paso 2: Edite el archivo README.md"},{"depth":3,"slug":"paso-3-commit-el-archivo-readmemd","text":"Paso 3: Commit el archivo README.md"},{"depth":3,"slug":"paso-4-verifica-tus-cambios-en-tu-perfil-de-github","text":"Paso 4: Verifica tus cambios en tu perfil de Github"}];
				}
				function getHeaders$2() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$2();
				}				async function Content$2() {
					const { layout, ...content } = frontmatter$2;
					content.file = file$2;
					content.url = url$2;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$2 });
					return createVNode($$BlogPostTemplate, {
									file: file$2,
									url: url$2,
									content,
									frontmatter: content,
									headings: getHeadings$2(),
									rawContent: rawContent$2,
									compiledContent: compiledContent$2,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$2[Symbol.for('astro.needsHeadRendering')] = false;

const _page22 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$2,
	file: file$2,
	url: url$2,
	rawContent: rawContent$2,
	compiledContent: compiledContent$2,
	getHeadings: getHeadings$2,
	getHeaders: getHeaders$2,
	Content: Content$2,
	default: Content$2
}, Symbol.toStringTag, { value: 'Module' }));

const html$1 = "<p><img src=\"/uploads/portada-add-images-selector-flutter.png\" alt=\"background\"></p>\n<p>El selector de imágenes es un componente común que a menudo se necesita para cambiar las fotos de los perfiles de usuario entre muchas otras opciones donde es necesario subir una imagen. Con el fin de proveer a nuestra aplicación de la opción de subir imágenes seleccionadas desde nuestro dispositivo, ya sea en la cámara o la galería, usaremos el <a href=\"https://pub.dev/packages/image_picker\">complemento</a> hecho por desarrolladores de Flutter.</p>\n<h2 id=\"paso-1-agregar-la-dependencia-a-su-archivo-pubspecyaml\"><strong>Paso 1</strong>: Agregar la dependencia a su archivo <strong><em>pubspec.yaml</em></strong>.</h2>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">image_picker: ^0.6.7+14</span></span></code></pre>\n<h2 id=\"paso-2-configurar-las-plataformas-nativas\"><strong>Paso 2</strong>: Configurar las plataformas nativas</h2>\n<p>A continuación, necesitamos configurar los ajustes nativos. Para la plataforma Android, no se necesita configurar nada. Para iOS, abra el archivo <code>Info.plist</code> que se encuentra en la carpeta <code>ios/Runner</code> y agregue las siguientes claves.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">&#x3C;key>NSPhotoLibraryUsageDescription&#x3C;/key></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">&#x3C;string>Allow access to photo library&#x3C;/string></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">&#x3C;key>NSCameraUsageDescription&#x3C;/key></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">&#x3C;string>Allow access to camera to capture photos&#x3C;/string></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\"></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">&#x3C;key>NSMicrophoneUsageDescription&#x3C;/key></span></span>\n<span class=\"line\"><span style=\"color: #c9d1d9\">&#x3C;string>Allow access to microphone&#x3C;/string></span></span></code></pre>\n<h2 id=\"paso-3-función-de-selector-de-imágenes\"><strong>Paso 3</strong>: Función de selector de imágenes</h2>\n<p>En la clase <code>State</code> de <code>StatefulWidget</code> de nuestra pantalla, declare una variable de tipo <code>File</code> para contener la imagen\nelegida por el usuario.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #c9d1d9\">File _image;</span></span></code></pre>\n<p>Ahora escriba dos funciones para seleccionar imágenes a través de la cámara y la galería de fotos, respectivamente. El parámetro opcional <code>imageQuality</code> acepta cualquier valor entre 0 y 100, este parámetro se puede ajustar según el tamaño y la calidad que requiera la aplicación. Después de obtener el archivo de imagen, lo guardamos en la variable <code>_image</code> y llamamos a <code>setState ()</code> para que se pueda mostrar en la pantalla.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">_imgFromCamera</span><span style=\"color: #C9D1D9\">() </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">File</span><span style=\"color: #C9D1D9\"> image </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ImagePicker</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">pickImage</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        source</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ImageSource</span><span style=\"color: #C9D1D9\">.camera, imageQuality</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">50</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">setState</span><span style=\"color: #C9D1D9\">(() {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      _image </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> image;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    });</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">_imgFromGallery</span><span style=\"color: #C9D1D9\">() </span><span style=\"color: #FF7B72\">async</span><span style=\"color: #C9D1D9\"> {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #79C0FF\">File</span><span style=\"color: #C9D1D9\"> image </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">await</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ImagePicker</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">pickImage</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        source</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ImageSource</span><span style=\"color: #C9D1D9\">.gallery, imageQuality</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">50</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    );</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    </span><span style=\"color: #D2A8FF\">setState</span><span style=\"color: #C9D1D9\">(() {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      _image </span><span style=\"color: #FF7B72\">=</span><span style=\"color: #C9D1D9\"> image;</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    });</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  }</span></span></code></pre>\n<h2 id=\"paso-4-crear-un-selector-de-opciones-para-seleccionar-la-cámara-o-la-galería\"><strong>Paso 4</strong>: Crear un selector de opciones para seleccionar la cámara o la galería</h2>\n<p>A continuación, se observa la función para mostrar un <code>bottom sheet</code> para que el usuario elija la opción de cámara o galería.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">void</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">_showPicker</span><span style=\"color: #C9D1D9\">(context) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #D2A8FF\">showModalBottomSheet</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      context</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> context,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      builder</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> (</span><span style=\"color: #79C0FF\">BuildContext</span><span style=\"color: #C9D1D9\"> bc) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        </span><span style=\"color: #FF7B72\">return</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">SafeArea</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Container</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">            child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Wrap</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              children</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #79C0FF\">Widget</span><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\">[</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ListTile</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    leading</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Icon</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">Icons</span><span style=\"color: #C9D1D9\">.photo_library),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    title</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Text</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'Photo Library'</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    onTap</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> () {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                      </span><span style=\"color: #D2A8FF\">_imgFromGallery</span><span style=\"color: #C9D1D9\">();</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                      </span><span style=\"color: #79C0FF\">Navigator</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">of</span><span style=\"color: #C9D1D9\">(context).</span><span style=\"color: #D2A8FF\">pop</span><span style=\"color: #C9D1D9\">();</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    }),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ListTile</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  leading</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Icon</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">Icons</span><span style=\"color: #C9D1D9\">.photo_camera),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  title</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">new</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Text</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #A5D6FF\">'Camera'</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  onTap</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> () {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    </span><span style=\"color: #D2A8FF\">_imgFromCamera</span><span style=\"color: #C9D1D9\">();</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    </span><span style=\"color: #79C0FF\">Navigator</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">of</span><span style=\"color: #C9D1D9\">(context).</span><span style=\"color: #D2A8FF\">pop</span><span style=\"color: #C9D1D9\">();</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              ],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">            ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        );</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      }</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  );</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span></code></pre>\n<h2 id=\"paso-5-crear-y-configurar-la-vista-de-imagen-en-pantalla\"><strong>Paso 5</strong>: Crear y configurar la vista de imagen en pantalla</h2>\n<p>Finalmente, creemos un soporte de imagen de perfil en la pantalla, que abre el selector al hacer clic y muestra la imagen seleccionada.</p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #FF7B72\">@override</span></span>\n<span class=\"line\"><span style=\"color: #79C0FF\">Widget</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #D2A8FF\">build</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">BuildContext</span><span style=\"color: #C9D1D9\"> context) {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  </span><span style=\"color: #FF7B72\">return</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Scaffold</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    appBar</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">AppBar</span><span style=\"color: #C9D1D9\">(),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    body</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Column</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      children</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #FF7B72\">&#x3C;</span><span style=\"color: #79C0FF\">Widget</span><span style=\"color: #FF7B72\">></span><span style=\"color: #C9D1D9\">[</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        </span><span style=\"color: #79C0FF\">SizedBox</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          height</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">32</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        </span><span style=\"color: #79C0FF\">Center</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">GestureDetector</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">            onTap</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> () {</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              </span><span style=\"color: #D2A8FF\">_showPicker</span><span style=\"color: #C9D1D9\">(context);</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">            },</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">            child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">CircleAvatar</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              radius</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">55</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              backgroundColor</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Color</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">0xffFDCF09</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> _image </span><span style=\"color: #FF7B72\">!=</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">null</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  </span><span style=\"color: #FF7B72\">?</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">ClipRRect</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                borderRadius</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">BorderRadius</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">circular</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">50</span><span style=\"color: #C9D1D9\">),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Image</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">file</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  _image,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  width</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  height</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  fit</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">BoxFit</span><span style=\"color: #C9D1D9\">.fitHeight,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              )</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  </span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Container</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                decoration</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">BoxDecoration</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    color</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Colors</span><span style=\"color: #C9D1D9\">.grey[</span><span style=\"color: #79C0FF\">200</span><span style=\"color: #C9D1D9\">],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                    borderRadius</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">BorderRadius</span><span style=\"color: #C9D1D9\">.</span><span style=\"color: #D2A8FF\">circular</span><span style=\"color: #C9D1D9\">(</span><span style=\"color: #79C0FF\">50</span><span style=\"color: #C9D1D9\">)),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                width</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                height</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">100</span><span style=\"color: #C9D1D9\">,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                child</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Icon</span><span style=\"color: #C9D1D9\">(</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  </span><span style=\"color: #79C0FF\">Icons</span><span style=\"color: #C9D1D9\">.camera_alt,</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                  color</span><span style=\"color: #FF7B72\">:</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">Colors</span><span style=\"color: #C9D1D9\">.grey[</span><span style=\"color: #79C0FF\">800</span><span style=\"color: #C9D1D9\">],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">                ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">              ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">            ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">          ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">        )</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      ],</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    ),</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  );</span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Listo, ejecute la aplicación y debería ver algo como esto.</p>\n<p><img src=\"/uploads/resultado.gif\" alt=\"Result\"></p>";

				const frontmatter$1 = {"minutesRead":3,"layout":"../../../components/templates/BlogPostTemplate.astro","title":"Agregar selector de imagen en flutter","date":"2020-12-18T00:00:00.000Z","description":"El selector de imágenes es un componente común que a menudo necesitamos para los perfiles de usuario y otras cosas. Cómo agregar un selector de imágenes para aletear para seleccionar imágenes de la galería o la cámara.","author":"Yuniel Acosta","lang":"es","tags":["Flutter","Image Picker","Dart"],"categories":["Programming"],"cover":"/uploads/portada-add-images-selector-flutter.png","draft":false};
				const file$1 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/add-image-selector-flutter.md";
				const url$1 = "/es/blog/add-image-selector-flutter";
				function rawContent$1() {
					return "\n![background](/uploads/portada-add-images-selector-flutter.png)\n\nEl selector de imágenes es un componente común que a menudo se necesita para cambiar las fotos de los perfiles de usuario entre muchas otras opciones donde es necesario subir una imagen. Con el fin de proveer a nuestra aplicación de la opción de subir imágenes seleccionadas desde nuestro dispositivo, ya sea en la cámara o la galería, usaremos el [complemento](https://pub.dev/packages/image_picker) hecho por desarrolladores de Flutter.\n\n## **Paso 1**: Agregar la dependencia a su archivo **_pubspec.yaml_**.\n\n    image_picker: ^0.6.7+14\n\n## **Paso 2**: Configurar las plataformas nativas\n\nA continuación, necesitamos configurar los ajustes nativos. Para la plataforma Android, no se necesita configurar nada. Para iOS, abra el archivo `Info.plist` que se encuentra en la carpeta `ios/Runner` y agregue las siguientes claves.\n\n```text\n<key>NSPhotoLibraryUsageDescription</key>\n<string>Allow access to photo library</string>\n\n<key>NSCameraUsageDescription</key>\n<string>Allow access to camera to capture photos</string>\n\n<key>NSMicrophoneUsageDescription</key>\n<string>Allow access to microphone</string>\n```\n\n## **Paso 3**: Función de selector de imágenes\n\nEn la clase `State` de `StatefulWidget` de nuestra pantalla, declare una variable de tipo `File` para contener la imagen\nelegida por el usuario.\n\n    File _image;\n\nAhora escriba dos funciones para seleccionar imágenes a través de la cámara y la galería de fotos, respectivamente. El parámetro opcional `imageQuality` acepta cualquier valor entre 0 y 100, este parámetro se puede ajustar según el tamaño y la calidad que requiera la aplicación. Después de obtener el archivo de imagen, lo guardamos en la variable `_image` y llamamos a `setState ()` para que se pueda mostrar en la pantalla.\n\n```dart\n    _imgFromCamera() async {\n    File image = await ImagePicker.pickImage(\n        source: ImageSource.camera, imageQuality: 50\n    );\n\n    setState(() {\n      _image = image;\n    });\n  }\n\n  _imgFromGallery() async {\n    File image = await ImagePicker.pickImage(\n        source: ImageSource.gallery, imageQuality: 50\n    );\n\n    setState(() {\n      _image = image;\n    });\n  }\n```\n\n## **Paso 4**: Crear un selector de opciones para seleccionar la cámara o la galería\n\nA continuación, se observa la función para mostrar un `bottom sheet` para que el usuario elija la opción de cámara o galería.\n\n```dart\nvoid _showPicker(context) {\n  showModalBottomSheet(\n      context: context,\n      builder: (BuildContext bc) {\n        return SafeArea(\n          child: Container(\n            child: new Wrap(\n              children: <Widget>[\n                new ListTile(\n                    leading: new Icon(Icons.photo_library),\n                    title: new Text('Photo Library'),\n                    onTap: () {\n                      _imgFromGallery();\n                      Navigator.of(context).pop();\n                    }),\n                new ListTile(\n                  leading: new Icon(Icons.photo_camera),\n                  title: new Text('Camera'),\n                  onTap: () {\n                    _imgFromCamera();\n                    Navigator.of(context).pop();\n                  },\n                ),\n              ],\n            ),\n          ),\n        );\n      }\n  );\n}\n```\n\n## **Paso 5**: Crear y configurar la vista de imagen en pantalla\n\nFinalmente, creemos un soporte de imagen de perfil en la pantalla, que abre el selector al hacer clic y muestra la imagen seleccionada.\n\n```dart\n@override\nWidget build(BuildContext context) {\n  return Scaffold(\n    appBar: AppBar(),\n    body: Column(\n      children: <Widget>[\n        SizedBox(\n          height: 32,\n        ),\n        Center(\n          child: GestureDetector(\n            onTap: () {\n              _showPicker(context);\n            },\n            child: CircleAvatar(\n              radius: 55,\n              backgroundColor: Color(0xffFDCF09),\n              child: _image != null\n                  ? ClipRRect(\n                borderRadius: BorderRadius.circular(50),\n                child: Image.file(\n                  _image,\n                  width: 100,\n                  height: 100,\n                  fit: BoxFit.fitHeight,\n                ),\n              )\n                  : Container(\n                decoration: BoxDecoration(\n                    color: Colors.grey[200],\n                    borderRadius: BorderRadius.circular(50)),\n                width: 100,\n                height: 100,\n                child: Icon(\n                  Icons.camera_alt,\n                  color: Colors.grey[800],\n                ),\n              ),\n            ),\n          ),\n        )\n      ],\n    ),\n  );\n}\n\n```\n\nListo, ejecute la aplicación y debería ver algo como esto.\n\n![Result](/uploads/resultado.gif)\n";
				}
				function compiledContent$1() {
					return html$1;
				}
				function getHeadings$1() {
					return [{"depth":2,"slug":"paso-1-agregar-la-dependencia-a-su-archivo-pubspecyaml","text":"Paso 1: Agregar la dependencia a su archivo pubspec.yaml."},{"depth":2,"slug":"paso-2-configurar-las-plataformas-nativas","text":"Paso 2: Configurar las plataformas nativas"},{"depth":2,"slug":"paso-3-función-de-selector-de-imágenes","text":"Paso 3: Función de selector de imágenes"},{"depth":2,"slug":"paso-4-crear-un-selector-de-opciones-para-seleccionar-la-cámara-o-la-galería","text":"Paso 4: Crear un selector de opciones para seleccionar la cámara o la galería"},{"depth":2,"slug":"paso-5-crear-y-configurar-la-vista-de-imagen-en-pantalla","text":"Paso 5: Crear y configurar la vista de imagen en pantalla"}];
				}
				function getHeaders$1() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings$1();
				}				async function Content$1() {
					const { layout, ...content } = frontmatter$1;
					content.file = file$1;
					content.url = url$1;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html$1 });
					return createVNode($$BlogPostTemplate, {
									file: file$1,
									url: url$1,
									content,
									frontmatter: content,
									headings: getHeadings$1(),
									rawContent: rawContent$1,
									compiledContent: compiledContent$1,
									'server:root': true,
									children: contentFragment
								});
				}
				Content$1[Symbol.for('astro.needsHeadRendering')] = false;

const _page23 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter: frontmatter$1,
	file: file$1,
	url: url$1,
	rawContent: rawContent$1,
	compiledContent: compiledContent$1,
	getHeadings: getHeadings$1,
	getHeaders: getHeaders$1,
	Content: Content$1,
	default: Content$1
}, Symbol.toStringTag, { value: 'Module' }));

const html = "<p><img src=\"/uploads/gridsome-portada.png\" alt=\"background\"></p>\n<p>Gridsome es un generador de sitios web estáticos con tecnología Vue.js para crear los sitios web lo más rápido posible para cualquier CMS, API o archivos Markdown. Gridsome hace que sea fácil y divertido para los desarrolladores crear sitios web hermosos y rápidos sin necesidad de convertirse en un experto en rendimiento.</p>\n<h3 id=\"por-qué-gridsome\">¿Por qué Gridsome?</h3>\n<ul>\n<li><strong>Complementos de fuente de datos</strong> - Úselo para cualquier CMS, API o archivos Markdown populares sin cabeza.</li>\n<li><strong>Enrutamiento de páginas basado en archivos</strong> - Cree y administre rápidamente rutas con archivos.</li>\n<li><strong>Gestión de datos centralizada</strong> - Extraiga datos en una capa de datos GraphQL local y unificada.</li>\n<li><strong>Vue.js para frontend</strong>: un framework de front-end ligero y accesible.</li>\n<li><strong>Código optimizado automáticamente</strong>: obtenga la división de código y la optimización de activos de forma inmediata.</li>\n<li><strong>Generación de archivos estáticos</strong> - Implemente de forma segura en cualquier CDN o alojamiento web estático.</li>\n</ul>\n<p><a href=\"https://gridsome.org/docs/#how-it-works\">Aprenda más de cómo Gridsome funciona</a></p>\n<pre is:raw=\"\" class=\"astro-code\" style=\"background-color: #0d1117; overflow-x: auto;\"><code><span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;</span><span style=\"color: #7EE787\">Layout</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"container-inner mx-auto my-16\"</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">h1</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"text-4xl font-bold leading-tight\"</span><span style=\"color: #C9D1D9\">>{{ $page.post.title }}&#x3C;/</span><span style=\"color: #7EE787\">h1</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"text-xl text-gray-600 mb-8\"</span><span style=\"color: #C9D1D9\">>{{ $page.post.date }}&#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">      &#x3C;</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">class</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"markdown-body\"</span><span style=\"color: #C9D1D9\"> </span><span style=\"color: #79C0FF\">v-html</span><span style=\"color: #FF7B72\">=</span><span style=\"color: #A5D6FF\">\"$page.post.content\"</span><span style=\"color: #C9D1D9\"> /></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">    &#x3C;/</span><span style=\"color: #7EE787\">div</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">  &#x3C;/</span><span style=\"color: #7EE787\">Layout</span><span style=\"color: #C9D1D9\">></span></span>\n<span class=\"line\"><span style=\"color: #C9D1D9\">&#x3C;/</span><span style=\"color: #7EE787\">template</span><span style=\"color: #C9D1D9\">></span></span></code></pre>\n<h3 id=\"prerrequisitos\">Prerrequisitos</h3>\n<p>Debe tener conocimientos básicos sobre HTML, CSS, <a href=\"https://vuejs.org\">Vue.js</a> y cómo utilizar la <a href=\"https://www.linode.com/docs/tools-reference/tools/using-the-terminal/\">Terminal</a>. Saber cómo funcionan los <a href=\"https://vuejs.org/v2/guide/single-file-components.html\">componentes de Vue Single File</a> y <a href=\"https://www.graphql.com/\">GraphQL</a> es una ventaja, pero no es obligatorio. Gridsome es una excelente manera de aprender ambos.</p>\n<p>Gridsome requiere <strong>Node.js</strong> y recomienda <strong>Yarn</strong>. <a href=\"https://gridsome.org/docs/#prerequisites\">Cómo configurar</a></p>\n<p><img src=\"/uploads/gridsome-stack.png\" alt=\"background\"></p>\n<h3 id=\"1-instalar-la-herramienta-cli-de-gridsome\">1. Instalar la herramienta CLI de Gridsome</h3>\n<p>Usando yarn:\n<code>yarn global add @gridsome/cli</code></p>\n<p>Usando npm:\n<code>npm install --global @gridsome/cli</code></p>\n<h3 id=\"2-crear-un-proyecto-gridsome\">2. Crear un proyecto Gridsome</h3>\n<ol>\n<li><code>gridsome create my-gridsome-site</code> para crear un nuevo proyecto </li>\n<li><code>cd my-gridsome-site</code> para abrir la carpeta</li>\n<li><code>gridsome develop</code> para iniciar el servidor de desarrollo en <code>http://localhost:8080</code></li>\n<li>Feliz codificación 🎉🙌</li>\n</ol>\n<h3 id=\"3-siguientes-pasos\">3. Siguientes pasos</h3>\n<ol>\n<li>Cree componentes <code>.vue</code> en el directorio <code>/pages</code> para crear rutas de página.</li>\n<li>Utilice <code>gridsome build</code> para generar archivos estáticos en una carpeta <code>/dist</code></li>\n</ol>\n<ul>\n<li><a href=\"https://gridsome.org/docs/#how-it-works\">Cómo funciona</a></li>\n<li><a href=\"https://gridsome.org/docs/pages/\">Cómo funcionan las páginas</a></li>\n<li><a href=\"https://gridsome.org/docs/deployment/\">Cómo implementar</a></li>\n</ul>";

				const frontmatter = {"minutesRead":2,"title":"Introducción a Gridsome","date":"2019-04-08T00:00:00.000Z","description":"Gridsome es un generador de sitios web estáticos con tecnología Vue.js para crear los sitios web lo más rápido posible para cualquier CMS, API o archivos Markdown. Gridsome hace que sea fácil y divertido para los desarrolladores crear sitios web hermosos y rápidos sin necesidad de convertirse en un experto en rendimiento.","author":"Yuniel Acosta","lang":"es","tags":["frontend","gridsome","VueJS"],"categories":["Development"],"cover":"/uploads/gridsome-portada.png","layout":"../../../components/templates/BlogPostTemplate.astro","draft":false};
				const file = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/introduction-to-gridsome.md";
				const url = "/es/blog/introduction-to-gridsome";
				function rawContent() {
					return "\n![background](/uploads/gridsome-portada.png)\n\nGridsome es un generador de sitios web estáticos con tecnología Vue.js para crear los sitios web lo más rápido posible para cualquier CMS, API o archivos Markdown. Gridsome hace que sea fácil y divertido para los desarrolladores crear sitios web hermosos y rápidos sin necesidad de convertirse en un experto en rendimiento.\n\n### ¿Por qué Gridsome?\n\n- **Complementos de fuente de datos** - Úselo para cualquier CMS, API o archivos Markdown populares sin cabeza.\n- **Enrutamiento de páginas basado en archivos** - Cree y administre rápidamente rutas con archivos.\n- **Gestión de datos centralizada** - Extraiga datos en una capa de datos GraphQL local y unificada.\n- **Vue.js para frontend**: un framework de front-end ligero y accesible.\n- **Código optimizado automáticamente**: obtenga la división de código y la optimización de activos de forma inmediata.\n- **Generación de archivos estáticos** - Implemente de forma segura en cualquier CDN o alojamiento web estático.\n\n[Aprenda más de cómo Gridsome funciona](https://gridsome.org/docs/#how-it-works)\n\n```js\n<template>\n  <Layout>\n    <div class=\"container-inner mx-auto my-16\">\n      <h1 class=\"text-4xl font-bold leading-tight\">{{ $page.post.title }}</h1>\n      <div class=\"text-xl text-gray-600 mb-8\">{{ $page.post.date }}</div>\n      <div class=\"markdown-body\" v-html=\"$page.post.content\" />\n    </div>\n  </Layout>\n</template>\n```\n\n### Prerrequisitos\n\nDebe tener conocimientos básicos sobre HTML, CSS, [Vue.js](https://vuejs.org) y cómo utilizar la [Terminal](https://www.linode.com/docs/tools-reference/tools/using-the-terminal/). Saber cómo funcionan los [componentes de Vue Single File](https://vuejs.org/v2/guide/single-file-components.html) y [GraphQL](https://www.graphql.com/) es una ventaja, pero no es obligatorio. Gridsome es una excelente manera de aprender ambos.\n\nGridsome requiere **Node.js** y recomienda **Yarn**. [Cómo configurar](https://gridsome.org/docs/#prerequisites)\n\n![background](/uploads/gridsome-stack.png)\n\n### 1. Instalar la herramienta CLI de Gridsome\n\nUsando yarn:\n`yarn global add @gridsome/cli`\n\nUsando npm:\n`npm install --global @gridsome/cli`\n\n### 2. Crear un proyecto Gridsome\n\n1. `gridsome create my-gridsome-site` para crear un nuevo proyecto </li>\n2. `cd my-gridsome-site` para abrir la carpeta\n3. `gridsome develop` para iniciar el servidor de desarrollo en `http://localhost:8080`\n4. Feliz codificación 🎉🙌\n\n### 3. Siguientes pasos\n\n1. Cree componentes `.vue` en el directorio `/pages` para crear rutas de página.\n2. Utilice `gridsome build` para generar archivos estáticos en una carpeta `/dist`\n\n- [Cómo funciona](https://gridsome.org/docs/#how-it-works)\n- [Cómo funcionan las páginas](https://gridsome.org/docs/pages/)\n- [Cómo implementar](https://gridsome.org/docs/deployment/)\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":3,"slug":"por-qué-gridsome","text":"¿Por qué Gridsome?"},{"depth":3,"slug":"prerrequisitos","text":"Prerrequisitos"},{"depth":3,"slug":"1-instalar-la-herramienta-cli-de-gridsome","text":"1. Instalar la herramienta CLI de Gridsome"},{"depth":3,"slug":"2-crear-un-proyecto-gridsome","text":"2. Crear un proyecto Gridsome"},{"depth":3,"slug":"3-siguientes-pasos","text":"3. Siguientes pasos"}];
				}
				function getHeaders() {
					console.warn('getHeaders() have been deprecated. Use getHeadings() function instead.');
					return getHeadings();
				}				async function Content() {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;
					content.astro = {};
					Object.defineProperty(content.astro, 'headings', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "headings" from your layout, try using "Astro.props.headings."')
						}
					});
					Object.defineProperty(content.astro, 'html', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "html" from your layout, try using "Astro.props.compiledContent()."')
						}
					});
					Object.defineProperty(content.astro, 'source', {
						get() {
							throw new Error('The "astro" property is no longer supported! To access "source" from your layout, try using "Astro.props.rawContent()."')
						}
					});
					const contentFragment = createVNode(Fragment, { 'set:html': html });
					return createVNode($$BlogPostTemplate, {
									file,
									url,
									content,
									frontmatter: content,
									headings: getHeadings(),
									rawContent,
									compiledContent,
									'server:root': true,
									children: contentFragment
								});
				}
				Content[Symbol.for('astro.needsHeadRendering')] = false;

const _page24 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	frontmatter,
	file,
	url,
	rawContent,
	compiledContent,
	getHeadings,
	getHeaders,
	Content,
	default: Content
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$3 = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/category/[...category].astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module3$1, specifier: "@models:Article", assert: {} }, { module: $$module2, specifier: "templates:BlogTemplate", assert: {} }, { module: $$module4, specifier: "molecules:ArticleSummary", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$3 = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/category/[...category].astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const Astro$2 = $$Astro$3;
async function getStaticPaths$2() {
  const postsData = await Astro$2.glob(/* #__PURE__ */ Object.assign({"../add-image-selector-flutter.md": () => Promise.resolve().then(() => _page23),"../building-fullstack-web-applications-with-angular-nestjs-and-nx.md": () => Promise.resolve().then(() => _page17),"../configure-proxy-global-on-linux.md": () => Promise.resolve().then(() => _page20),"../countdown-to-new-year-astronomy.md": () => Promise.resolve().then(() => _page21),"../customizing-github-profile-page.md": () => Promise.resolve().then(() => _page22),"../introduction-to-gridsome.md": () => Promise.resolve().then(() => _page24),"../top-10-vs-code-extension-for-2021.md": () => Promise.resolve().then(() => _page19),"../vue-3-with-typescript-and-decorators.md": () => Promise.resolve().then(() => _page18)}), () => "../**/*.md");
  const allPosts = postsData.filter((post) => !post.frontmatter.draft && post.frontmatter.lang === i18next__default.language).map((post) => jsonToArticle(post)).sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf());
  const categories = allPosts.map((post) => post.categories).flat();
  return categories.map((category) => {
    return {
      params: { category: category.toLowerCase() },
      props: { posts: allPosts.filter((post) => post.categories.includes(category)) }
    };
  });
}
const $$$2 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$3, $$props, $$slots);
  Astro2.self = $$$2;
  changeLanguage("es");
  const { category } = Astro2.params;
  const { posts } = Astro2.props;
  return renderTemplate`${renderComponent($$result, "BlogTemplate", $$BlogTemplate, { "title": `${t("blog")} | ${category}`, "description": t("seo.blog-description") }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<div class="container mx-auto">
		${posts.map((post) => renderTemplate`<article class="mb-20 border-b border-gray-400 mx-2 md:mx-24">
					${renderComponent($$result, "ArticleSummary", $$ArticleSummary, { "article": post })}
				</article>`)}
		${posts.length === 0 && renderTemplate`<div class="container-inner mx-auto py-16 pl-10">
					<div class="text-center">
						<h1 class="text-3xl font-bold">${t("no-articles-found")}</h1>
						<p class="text-gray-600">${t("try-again")}</p>
					</div>
				</div>`}
	</div>` })}`;
});

const $$file$3 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/category/[...category].astro";
const $$url$3 = "/es/blog/category/[...category]";

const _page25 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$3,
	getStaticPaths: getStaticPaths$2,
	default: $$$2,
	file: $$file$3,
	url: $$url$3
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$2 = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/tag/[...tag].astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module3$1, specifier: "@models:Article", assert: {} }, { module: $$module2, specifier: "templates:BlogTemplate", assert: {} }, { module: $$module4, specifier: "molecules:ArticleSummary", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$2 = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/tag/[...tag].astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const Astro$1 = $$Astro$2;
async function getStaticPaths$1() {
  const postsData = await Astro$1.glob(/* #__PURE__ */ Object.assign({"../add-image-selector-flutter.md": () => Promise.resolve().then(() => _page23),"../building-fullstack-web-applications-with-angular-nestjs-and-nx.md": () => Promise.resolve().then(() => _page17),"../configure-proxy-global-on-linux.md": () => Promise.resolve().then(() => _page20),"../countdown-to-new-year-astronomy.md": () => Promise.resolve().then(() => _page21),"../customizing-github-profile-page.md": () => Promise.resolve().then(() => _page22),"../introduction-to-gridsome.md": () => Promise.resolve().then(() => _page24),"../top-10-vs-code-extension-for-2021.md": () => Promise.resolve().then(() => _page19),"../vue-3-with-typescript-and-decorators.md": () => Promise.resolve().then(() => _page18)}), () => "../**/*.md");
  const allPosts = postsData.filter((post) => !post.frontmatter.draft && post.frontmatter.lang === i18next__default.language).map((post) => jsonToArticle(post)).sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf());
  const tags = allPosts.map((post) => post.tags).flat();
  return tags.map((tag) => {
    return {
      params: { tag: tag.toLowerCase() },
      props: { posts: allPosts.filter((post) => post.tags.includes(tag)) }
    };
  });
}
const $$$1 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$2, $$props, $$slots);
  Astro2.self = $$$1;
  changeLanguage("es");
  const { tag } = Astro2.params;
  const { posts } = Astro2.props;
  return renderTemplate`${renderComponent($$result, "BlogTemplate", $$BlogTemplate, { "title": `${t("blog")} | ${tag}`, "description": t("seo.blog-description") }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<div class="tainer mx-auto">
		${posts.map((post) => renderTemplate`<article class="mb-20 border-b border-gray-400 mx-2 md:mx-24">
					${renderComponent($$result, "ArticleSummary", $$ArticleSummary, { "article": post })}
				</article>`)}
		${posts.length === 0 && renderTemplate`<div class="container-inner mx-auto py-16 pl-10">
					<div class="text-center">
						<h1 class="text-3xl font-bold">${t("no-articles-found")}</h1>
						<p class="text-gray-600">${t("try-again")}</p>
					</div>
				</div>`}
	</div>` })}`;
});

const $$file$2 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/tag/[...tag].astro";
const $$url$2 = "/es/blog/tag/[...tag]";

const _page26 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$2,
	getStaticPaths: getStaticPaths$1,
	default: $$$1,
	file: $$file$2,
	url: $$url$2
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata$1 = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/[...page].astro", { modules: [{ module: i18next, specifier: "i18next", assert: {} }, { module: $$module2, specifier: "templates:BlogTemplate", assert: {} }, { module: $$module3$1, specifier: "@models:Article", assert: {} }, { module: $$module4, specifier: "molecules:ArticleSummary", assert: {} }, { module: $$module5, specifier: "molecules:Paginator", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro$1 = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/[...page].astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const Astro = $$Astro$1;
async function getStaticPaths({ paginate }) {
  const allPosts = await Astro.glob(/* #__PURE__ */ Object.assign({"./add-image-selector-flutter.md": () => Promise.resolve().then(() => _page23),"./building-fullstack-web-applications-with-angular-nestjs-and-nx.md": () => Promise.resolve().then(() => _page17),"./configure-proxy-global-on-linux.md": () => Promise.resolve().then(() => _page20),"./countdown-to-new-year-astronomy.md": () => Promise.resolve().then(() => _page21),"./customizing-github-profile-page.md": () => Promise.resolve().then(() => _page22),"./introduction-to-gridsome.md": () => Promise.resolve().then(() => _page24),"./top-10-vs-code-extension-for-2021.md": () => Promise.resolve().then(() => _page19),"./vue-3-with-typescript-and-decorators.md": () => Promise.resolve().then(() => _page18)}), () => "./**/*.md");
  const sortedPosts = allPosts.filter((post) => !post.frontmatter.draft && post.frontmatter.lang === i18next__default.language).map((post) => jsonToArticle(post)).sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf());
  return paginate(sortedPosts, {
    pageSize: 5
  });
}
const $$ = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$;
  changeLanguage("es");
  const { page } = Astro2.props;
  return renderTemplate`${renderComponent($$result, "BlogTemplate", $$BlogTemplate, { "title": t("blog"), "description": t("seo.blog-description") }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<div class="container mx-auto">
		${page.data.map((post) => renderTemplate`<article class="mb-20 border-b border-gray-400 mx-2 md:mx-24">
					${renderComponent($$result, "ArticleSummary", $$ArticleSummary, { "article": post })}
				</article>`)}
		${page.data.length === 0 && renderTemplate`<div class="container-inner mx-auto py-16 pl-10">
					<div class="text-center">
						<h1 class="text-3xl font-bold">${t("no-articles-found")}</h1>
						<p class="text-gray-600">${t("try-again")}</p>
					</div>
				</div>`}
        <!-- pagination -->
        ${renderComponent($$result, "Paginator", $$Paginator, { "page": page })}
	</div>` })}`;
});

const $$file$1 = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/blog/[...page].astro";
const $$url$1 = "/es/blog/[...page]";

const _page27 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata: $$metadata$1,
	getStaticPaths,
	default: $$,
	file: $$file$1,
	url: $$url$1
}, Symbol.toStringTag, { value: 'Module' }));

const $$metadata = createMetadata("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/404.astro", { modules: [{ module: $$module1$5, specifier: "astro-icon", assert: {} }, { module: i18next, specifier: "i18next", assert: {} }, { module: $$module3$3, specifier: "templates:BaseTemplate", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro = createAstro("/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/404.astro", "https://yunielacosta.com/", "file:///home/acosta/Projects/B%20E%20T%20A/yunielacosta.com/");
const $$404 = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$404;
  changeLanguage("es");
  return renderTemplate`${renderComponent($$result, "BaseTemplate", $$BaseTemplate, { "title": t("error404") }, { "default": () => renderTemplate`${maybeRenderHead($$result)}<div class="container-inner mx-auto py-16">
		<h1 class="text-4xl font-bold mb-16">${t("error404")}</h1>
		<img class="w-1/2" src="/oops.png"${addAttribute(t("error404"), "alt")}>
		<p>${markHTMLString(t("message404"))}</p>
    <a href="/" class="flex justify-center items-center small-button w-24 mt-24 uppercase">
     ${renderComponent($$result, "Icon", $$Icon, { "name": "mdi:arrow-left", "class": "h-6 mr-2" })}  
      ${t("home")}
    </a>
	</div>` })}`;
});

const $$file = "/home/acosta/Projects/B E T A/yunielacosta.com/src/pages/es/404.astro";
const $$url = "/es/404";

const _page28 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	$$metadata,
	default: $$404,
	file: $$file,
	url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const pageMap = new Map([['node_modules/.pnpm/@astrojs+image@0.3.6/node_modules/@astrojs/image/dist/endpoints/prod.js', _page0],['src/pages/index.astro', _page1],['src/pages/projects.astro', _page2],['src/pages/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx.md', _page3],['src/pages/blog/vue-3-with-typescript-and-decorators.md', _page4],['src/pages/blog/top-10-vs-code-extension-for-2021.md', _page5],['src/pages/blog/configure-proxy-global-on-linux.md', _page6],['src/pages/blog/countdown-to-new-year-astronomy.md', _page7],['src/pages/blog/customizing-github-profile-page.md', _page8],['src/pages/blog/add-image-selector-flutter.md', _page9],['src/pages/blog/introduction-to-gridsome.md', _page10],['src/pages/blog/category/[...category].astro', _page11],['src/pages/blog/tag/[...tag].astro', _page12],['src/pages/blog/[...page].astro', _page13],['src/pages/404.astro', _page14],['src/pages/es/index.astro', _page15],['src/pages/es/projects.astro', _page16],['src/pages/es/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx.md', _page17],['src/pages/es/blog/vue-3-with-typescript-and-decorators.md', _page18],['src/pages/es/blog/top-10-vs-code-extension-for-2021.md', _page19],['src/pages/es/blog/configure-proxy-global-on-linux.md', _page20],['src/pages/es/blog/countdown-to-new-year-astronomy.md', _page21],['src/pages/es/blog/customizing-github-profile-page.md', _page22],['src/pages/es/blog/add-image-selector-flutter.md', _page23],['src/pages/es/blog/introduction-to-gridsome.md', _page24],['src/pages/es/blog/category/[...category].astro', _page25],['src/pages/es/blog/tag/[...tag].astro', _page26],['src/pages/es/blog/[...page].astro', _page27],['src/pages/es/404.astro', _page28],]);
const renderers = [Object.assign({"name":"astro:jsx","serverEntrypoint":"astro/jsx/server.js","jsxImportSource":"astro"}, { ssr: server_default }),Object.assign({"name":"@astrojs/vue","clientEntrypoint":"@astrojs/vue/client.js","serverEntrypoint":"@astrojs/vue/server.js"}, { ssr: _renderer1 }),];

if (typeof process !== "undefined") {
  if (process.argv.includes("--verbose")) ; else if (process.argv.includes("--silent")) ; else ;
}

const SCRIPT_EXTENSIONS = /* @__PURE__ */ new Set([".js", ".ts"]);
new RegExp(
  `\\.(${Array.from(SCRIPT_EXTENSIONS).map((s) => s.slice(1)).join("|")})($|\\?)`
);

const STYLE_EXTENSIONS = /* @__PURE__ */ new Set([
  ".css",
  ".pcss",
  ".postcss",
  ".scss",
  ".sass",
  ".styl",
  ".stylus",
  ".less"
]);
new RegExp(
  `\\.(${Array.from(STYLE_EXTENSIONS).map((s) => s.slice(1)).join("|")})($|\\?)`
);

function getRouteGenerator(segments, addTrailingSlash) {
  const template = segments.map((segment) => {
    return segment[0].spread ? `/:${segment[0].content.slice(3)}(.*)?` : "/" + segment.map((part) => {
      if (part)
        return part.dynamic ? `:${part.content}` : part.content.normalize().replace(/\?/g, "%3F").replace(/#/g, "%23").replace(/%5B/g, "[").replace(/%5D/g, "]").replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    }).join("");
  }).join("");
  let trailing = "";
  if (addTrailingSlash === "always" && segments.length) {
    trailing = "/";
  }
  const toPath = compile(template + trailing);
  return toPath;
}

function deserializeRouteData(rawRouteData) {
  return {
    route: rawRouteData.route,
    type: rawRouteData.type,
    pattern: new RegExp(rawRouteData.pattern),
    params: rawRouteData.params,
    component: rawRouteData.component,
    generate: getRouteGenerator(rawRouteData.segments, rawRouteData._meta.trailingSlash),
    pathname: rawRouteData.pathname || void 0,
    segments: rawRouteData.segments
  };
}

function deserializeManifest(serializedManifest) {
  const routes = [];
  for (const serializedRoute of serializedManifest.routes) {
    routes.push({
      ...serializedRoute,
      routeData: deserializeRouteData(serializedRoute.routeData)
    });
    const route = serializedRoute;
    route.routeData = deserializeRouteData(serializedRoute.routeData);
  }
  const assets = new Set(serializedManifest.assets);
  return {
    ...serializedManifest,
    assets,
    routes
  };
}

const _manifest = Object.assign(deserializeManifest({"adapterName":"@astrojs/netlify/functions","routes":[{"file":"","links":[],"scripts":[],"routeData":{"type":"endpoint","route":"/_image","pattern":"^\\/_image$","segments":[[{"content":"_image","dynamic":false,"spread":false}]],"params":[],"component":"node_modules/.pnpm/@astrojs+image@0.3.6/node_modules/@astrojs/image/dist/endpoints/prod.js","pathname":"/_image","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/e53c0aa8.16b05912.css","assets/404-es-404-es-index-es-projects-index-projects.a2fa2d36.css","assets/76b1e6c5.95da8820.css","assets/555451e4.91819e29.css","assets/es-index-es-projects-index-projects.96e5f4b9.css","assets/es-index-index.1ba71134.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/","type":"page","pattern":"^\\/$","segments":[],"params":[],"component":"src/pages/index.astro","pathname":"/","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/es-index-es-projects-index-projects.96e5f4b9.css","assets/404-es-404-es-index-es-projects-index-projects.a2fa2d36.css","assets/555451e4.91819e29.css","assets/es-projects-projects.bfe0d018.css"],"scripts":[{"type":"external","value":"hoisted.04e862dc.js"}],"routeData":{"route":"/projects","type":"page","pattern":"^\\/projects\\/?$","segments":[[{"content":"projects","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/projects.astro","pathname":"/projects","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx","type":"page","pattern":"^\\/blog\\/building-fullstack-web-applications-with-angular-nestjs-and-nx\\/?$","segments":[[{"content":"blog","dynamic":false,"spread":false}],[{"content":"building-fullstack-web-applications-with-angular-nestjs-and-nx","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx.md","pathname":"/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/blog/vue-3-with-typescript-and-decorators","type":"page","pattern":"^\\/blog\\/vue-3-with-typescript-and-decorators\\/?$","segments":[[{"content":"blog","dynamic":false,"spread":false}],[{"content":"vue-3-with-typescript-and-decorators","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/blog/vue-3-with-typescript-and-decorators.md","pathname":"/blog/vue-3-with-typescript-and-decorators","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/blog/top-10-vs-code-extension-for-2021","type":"page","pattern":"^\\/blog\\/top-10-vs-code-extension-for-2021\\/?$","segments":[[{"content":"blog","dynamic":false,"spread":false}],[{"content":"top-10-vs-code-extension-for-2021","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/blog/top-10-vs-code-extension-for-2021.md","pathname":"/blog/top-10-vs-code-extension-for-2021","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/blog/configure-proxy-global-on-linux","type":"page","pattern":"^\\/blog\\/configure-proxy-global-on-linux\\/?$","segments":[[{"content":"blog","dynamic":false,"spread":false}],[{"content":"configure-proxy-global-on-linux","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/blog/configure-proxy-global-on-linux.md","pathname":"/blog/configure-proxy-global-on-linux","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/blog/countdown-to-new-year-astronomy","type":"page","pattern":"^\\/blog\\/countdown-to-new-year-astronomy\\/?$","segments":[[{"content":"blog","dynamic":false,"spread":false}],[{"content":"countdown-to-new-year-astronomy","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/blog/countdown-to-new-year-astronomy.md","pathname":"/blog/countdown-to-new-year-astronomy","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/blog/customizing-github-profile-page","type":"page","pattern":"^\\/blog\\/customizing-github-profile-page\\/?$","segments":[[{"content":"blog","dynamic":false,"spread":false}],[{"content":"customizing-github-profile-page","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/blog/customizing-github-profile-page.md","pathname":"/blog/customizing-github-profile-page","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/blog/add-image-selector-flutter","type":"page","pattern":"^\\/blog\\/add-image-selector-flutter\\/?$","segments":[[{"content":"blog","dynamic":false,"spread":false}],[{"content":"add-image-selector-flutter","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/blog/add-image-selector-flutter.md","pathname":"/blog/add-image-selector-flutter","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/blog/introduction-to-gridsome","type":"page","pattern":"^\\/blog\\/introduction-to-gridsome\\/?$","segments":[[{"content":"blog","dynamic":false,"spread":false}],[{"content":"introduction-to-gridsome","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/blog/introduction-to-gridsome.md","pathname":"/blog/introduction-to-gridsome","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/e53c0aa8.16b05912.css","assets/555451e4.91819e29.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/blog/category/[...category]","type":"page","pattern":"^\\/blog\\/category(?:\\/(.*?))?\\/?$","segments":[[{"content":"blog","dynamic":false,"spread":false}],[{"content":"category","dynamic":false,"spread":false}],[{"content":"...category","dynamic":true,"spread":true}]],"params":["...category"],"component":"src/pages/blog/category/[...category].astro","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/e53c0aa8.16b05912.css","assets/555451e4.91819e29.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/blog/tag/[...tag]","type":"page","pattern":"^\\/blog\\/tag(?:\\/(.*?))?\\/?$","segments":[[{"content":"blog","dynamic":false,"spread":false}],[{"content":"tag","dynamic":false,"spread":false}],[{"content":"...tag","dynamic":true,"spread":true}]],"params":["...tag"],"component":"src/pages/blog/tag/[...tag].astro","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/e53c0aa8.16b05912.css","assets/555451e4.91819e29.css","assets/76b1e6c5.95da8820.css","assets/132e38b5.b8c5eb9b.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/blog/[...page]","type":"page","pattern":"^\\/blog(?:\\/(.*?))?\\/?$","segments":[[{"content":"blog","dynamic":false,"spread":false}],[{"content":"...page","dynamic":true,"spread":true}]],"params":["...page"],"component":"src/pages/blog/[...page].astro","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/404-es-404-es-index-es-projects-index-projects.a2fa2d36.css","assets/555451e4.91819e29.css","assets/132e38b5.b8c5eb9b.css"],"scripts":[{"type":"external","value":"hoisted.04e862dc.js"}],"routeData":{"route":"/404","type":"page","pattern":"^\\/404\\/?$","segments":[[{"content":"404","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/404.astro","pathname":"/404","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/e53c0aa8.16b05912.css","assets/404-es-404-es-index-es-projects-index-projects.a2fa2d36.css","assets/76b1e6c5.95da8820.css","assets/555451e4.91819e29.css","assets/es-index-es-projects-index-projects.96e5f4b9.css","assets/es-index-index.1ba71134.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/es","type":"page","pattern":"^\\/es\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/es/index.astro","pathname":"/es","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/es-index-es-projects-index-projects.96e5f4b9.css","assets/404-es-404-es-index-es-projects-index-projects.a2fa2d36.css","assets/555451e4.91819e29.css","assets/es-projects-projects.bfe0d018.css"],"scripts":[{"type":"external","value":"hoisted.04e862dc.js"}],"routeData":{"route":"/es/projects","type":"page","pattern":"^\\/es\\/projects\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}],[{"content":"projects","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/es/projects.astro","pathname":"/es/projects","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/es/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx","type":"page","pattern":"^\\/es\\/blog\\/building-fullstack-web-applications-with-angular-nestjs-and-nx\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}],[{"content":"blog","dynamic":false,"spread":false}],[{"content":"building-fullstack-web-applications-with-angular-nestjs-and-nx","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/es/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx.md","pathname":"/es/blog/building-fullstack-web-applications-with-angular-nestjs-and-nx","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/es/blog/vue-3-with-typescript-and-decorators","type":"page","pattern":"^\\/es\\/blog\\/vue-3-with-typescript-and-decorators\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}],[{"content":"blog","dynamic":false,"spread":false}],[{"content":"vue-3-with-typescript-and-decorators","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/es/blog/vue-3-with-typescript-and-decorators.md","pathname":"/es/blog/vue-3-with-typescript-and-decorators","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/es/blog/top-10-vs-code-extension-for-2021","type":"page","pattern":"^\\/es\\/blog\\/top-10-vs-code-extension-for-2021\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}],[{"content":"blog","dynamic":false,"spread":false}],[{"content":"top-10-vs-code-extension-for-2021","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/es/blog/top-10-vs-code-extension-for-2021.md","pathname":"/es/blog/top-10-vs-code-extension-for-2021","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/es/blog/configure-proxy-global-on-linux","type":"page","pattern":"^\\/es\\/blog\\/configure-proxy-global-on-linux\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}],[{"content":"blog","dynamic":false,"spread":false}],[{"content":"configure-proxy-global-on-linux","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/es/blog/configure-proxy-global-on-linux.md","pathname":"/es/blog/configure-proxy-global-on-linux","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/es/blog/countdown-to-new-year-astronomy","type":"page","pattern":"^\\/es\\/blog\\/countdown-to-new-year-astronomy\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}],[{"content":"blog","dynamic":false,"spread":false}],[{"content":"countdown-to-new-year-astronomy","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/es/blog/countdown-to-new-year-astronomy.md","pathname":"/es/blog/countdown-to-new-year-astronomy","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/es/blog/customizing-github-profile-page","type":"page","pattern":"^\\/es\\/blog\\/customizing-github-profile-page\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}],[{"content":"blog","dynamic":false,"spread":false}],[{"content":"customizing-github-profile-page","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/es/blog/customizing-github-profile-page.md","pathname":"/es/blog/customizing-github-profile-page","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/es/blog/add-image-selector-flutter","type":"page","pattern":"^\\/es\\/blog\\/add-image-selector-flutter\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}],[{"content":"blog","dynamic":false,"spread":false}],[{"content":"add-image-selector-flutter","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/es/blog/add-image-selector-flutter.md","pathname":"/es/blog/add-image-selector-flutter","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/es/blog/introduction-to-gridsome","type":"page","pattern":"^\\/es\\/blog\\/introduction-to-gridsome\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}],[{"content":"blog","dynamic":false,"spread":false}],[{"content":"introduction-to-gridsome","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/es/blog/introduction-to-gridsome.md","pathname":"/es/blog/introduction-to-gridsome","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/es/blog/category/[...category]","type":"page","pattern":"^\\/es\\/blog\\/category(?:\\/(.*?))?\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}],[{"content":"blog","dynamic":false,"spread":false}],[{"content":"category","dynamic":false,"spread":false}],[{"content":"...category","dynamic":true,"spread":true}]],"params":["...category"],"component":"src/pages/es/blog/category/[...category].astro","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/es/blog/tag/[...tag]","type":"page","pattern":"^\\/es\\/blog\\/tag(?:\\/(.*?))?\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}],[{"content":"blog","dynamic":false,"spread":false}],[{"content":"tag","dynamic":false,"spread":false}],[{"content":"...tag","dynamic":true,"spread":true}]],"params":["...tag"],"component":"src/pages/es/blog/tag/[...tag].astro","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/555451e4.91819e29.css","assets/e53c0aa8.16b05912.css","assets/76b1e6c5.95da8820.css"],"scripts":[{"type":"external","value":"hoisted.ae1e3ed1.js"}],"routeData":{"route":"/es/blog/[...page]","type":"page","pattern":"^\\/es\\/blog(?:\\/(.*?))?\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}],[{"content":"blog","dynamic":false,"spread":false}],[{"content":"...page","dynamic":true,"spread":true}]],"params":["...page"],"component":"src/pages/es/blog/[...page].astro","_meta":{"trailingSlash":"ignore"}}},{"file":"","links":["assets/132e38b5.b8c5eb9b.css","assets/404-es-404-es-index-es-projects-index-projects.a2fa2d36.css","assets/555451e4.91819e29.css"],"scripts":[{"type":"external","value":"hoisted.04e862dc.js"}],"routeData":{"route":"/es/404","type":"page","pattern":"^\\/es\\/404\\/?$","segments":[[{"content":"es","dynamic":false,"spread":false}],[{"content":"404","dynamic":false,"spread":false}]],"params":[],"component":"src/pages/es/404.astro","pathname":"/es/404","_meta":{"trailingSlash":"ignore"}}}],"site":"https://yunielacosta.com/","base":"/","markdown":{"drafts":false,"syntaxHighlight":"shiki","shikiConfig":{"langs":[],"theme":"github-dark","wrap":false},"remarkPlugins":[null],"rehypePlugins":[],"remarkRehype":{},"extendDefaultPlugins":true,"isAstroFlavoredMd":false},"pageMap":null,"renderers":[],"entryModules":{"\u0000@astrojs-ssr-virtual-entry":"entry.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/jobs/2017-10-01-desoft.json":"chunks/2017-10-01-desoft.d36104d5.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/jobs/2018-01-01-desoft.json":"chunks/2018-01-01-desoft.55cf31db.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/jobs/2020-08-21-desoft.json":"chunks/2020-08-21-desoft.7bd6d03a.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/jobs/2021-09-13-scanntech.json":"chunks/2021-09-13-scanntech.e02748f7.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/jobs/es/2017-10-01-desoft.json":"chunks/2017-10-01-desoft.9e42dcd2.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/jobs/es/2018-01-01-desoft.json":"chunks/2018-01-01-desoft.01a77e76.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/jobs/es/2020-08-21-desoft.json":"chunks/2020-08-21-desoft.14851e5a.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/jobs/es/2021-09-13-scanntech.json":"chunks/2021-09-13-scanntech.c27aa407.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2018-09-05-finis.json":"chunks/2018-09-05-finis.18a0a6cc.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2020-12-12-expenses-app.json":"chunks/2020-12-12-expenses-app.ba082a7d.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2020-12-25-meal-app.json":"chunks/2020-12-25-meal-app.07eb51c6.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2020-12-6-shop-app.json":"chunks/2020-12-6-shop-app.74f6b031.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2021-04-08-scanner-odoo.json":"chunks/2021-04-08-scanner-odoo.6090b844.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2021-04-17-bankiva.json":"chunks/2021-04-17-bankiva.385b0316.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2021-04-20-personal-blog-v1.json":"chunks/2021-04-20-personal-blog-v1.8c51b013.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2021-04-20-portfolio-blog-v2.json":"chunks/2021-04-20-portfolio-blog-v2.02a99ff9.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2021-05-01-itunes.json":"chunks/2021-05-01-itunes.4c3849f1.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2021-05-21-weather-app.json":"chunks/2021-05-21-weather-app.966cb23e.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2021-06-14-react-todo-app.json":"chunks/2021-06-14-react-todo-app.2c15d8b1.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2021-10-21-vue3-vite-typescript-tailwind-starter.json":"chunks/2021-10-21-vue3-vite-typescript-tailwind-starter.451263a6.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2022-01-05-nuxt-3-todo-app.json":"chunks/2022-01-05-nuxt-3-todo-app.335f0ce8.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2022-01-05-nuxt3-tailwindcss-typescript-vite-template.json":"chunks/2022-01-05-nuxt3-tailwindcss-typescript-vite-template.7532bf95.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/2022-04-06-movie-app-nextjs.json":"chunks/2022-04-06-movie-app-nextjs.5fcad531.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2018-09-05-finis.json":"chunks/2018-09-05-finis.1ac10712.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2020-12-12-expenses-app.json":"chunks/2020-12-12-expenses-app.e1cf817b.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2020-12-25-meal-app.json":"chunks/2020-12-25-meal-app.37fb3c36.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2020-12-6-shop-app.json":"chunks/2020-12-6-shop-app.132c5afc.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2021-04-08-scanner-odoo.json":"chunks/2021-04-08-scanner-odoo.1187eb7f.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2021-04-17-bankiva.json":"chunks/2021-04-17-bankiva.3a8e2390.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2021-04-20-personal-blog-v1.json":"chunks/2021-04-20-personal-blog-v1.8cd14989.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2021-04-20-portfolio-blog-v2.json":"chunks/2021-04-20-portfolio-blog-v2.85c29bd1.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2021-05-01-itunes.json":"chunks/2021-05-01-itunes.73635873.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2021-05-21-weather-app.json":"chunks/2021-05-21-weather-app.a69656e8.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2021-06-14-react-todo-app.json":"chunks/2021-06-14-react-todo-app.2532e910.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2021-10-21-vue3-vite-typescript-tailwind-starter.json":"chunks/2021-10-21-vue3-vite-typescript-tailwind-starter.84d7fb9a.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2022-01-05-nuxt-3-todo-app.json":"chunks/2022-01-05-nuxt-3-todo-app.c67269f5.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2022-01-05-nuxt3-tailwindcss-typescript-vite-template.json":"chunks/2022-01-05-nuxt3-tailwindcss-typescript-vite-template.bf6a48a9.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/projects/es/2022-04-06-movie-app-nextjs.json":"chunks/2022-04-06-movie-app-nextjs.019aa116.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/angular.json":"chunks/angular.8e3bf02a.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/c++.json":"chunks/c__.bd142db1.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/c.json":"chunks/c.17f62d0f.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/csharp.json":"chunks/csharp.07d35c6e.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/css3.json":"chunks/css3.b07efd3d.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/dart.json":"chunks/dart.3d87c3dc.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/figma.json":"chunks/figma.1336b470.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/flask.json":"chunks/flask.52abef6e.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/flutter.json":"chunks/flutter.e908e76a.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/go.json":"chunks/go.17763279.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/hugo.json":"chunks/hugo.b29b4df5.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/idea.json":"chunks/idea.e3a2ea5c.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/itunes-api.json":"chunks/itunes-api.6c44e333.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/java.json":"chunks/java.b9c83ad0.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/javascript.json":"chunks/javascript.489f87ee.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/jekyll.json":"chunks/jekyll.05bdd887.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/keras.json":"chunks/keras.4a2d8ab3.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/kotlin.json":"chunks/kotlin.0c4b7975.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/libinsane.json":"chunks/libinsane.6add77af.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/lumen.json":"chunks/lumen.f11f1808.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/neo4j.json":"chunks/neo4j.77c0b344.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/node.json":"chunks/node.2661301f.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/numpy.json":"chunks/numpy.a1e95573.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/pandas.json":"chunks/pandas.07c23dc5.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/php.json":"chunks/php.654dc498.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/postgresql.json":"chunks/postgresql.83a6be6c.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/python.json":"chunks/python.f46ba473.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/pytorch.json":"chunks/pytorch.366176c0.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/react.json":"chunks/react.706481ab.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/ruby.json":"chunks/ruby.46934458.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/sass.json":"chunks/sass.237d269f.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/scala.json":"chunks/scala.6a3dfe9e.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/scss.json":"chunks/scss.37f3af63.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/spark.json":"chunks/spark.8c350c2c.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/spotify-web-api.json":"chunks/spotify-web-api.d44397ef.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/spring-boot.json":"chunks/spring-boot.c0734af3.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/spring.json":"chunks/spring.a9ee72b0.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/tailwind.json":"chunks/tailwind.fc30e230.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/tensorflow.json":"chunks/tensorflow.b9f7e7d9.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/typescript.json":"chunks/typescript.bd25310b.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/vite.json":"chunks/vite.394f75cb.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/vs-code.json":"chunks/vs-code.6c6d5ec3.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/vuejs.json":"chunks/vuejs.52b0035f.mjs","/home/acosta/Projects/B E T A/yunielacosta.com/src/data/technologies/vuetify.json":"chunks/vuetify.0ef3fddc.mjs","/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/organisms/jobs/Jobs.vue":"Jobs.5a02aba3.js","/@fs/home/acosta/Projects/B E T A/yunielacosta.com/src/components/atoms/BannerWrapper.vue":"BannerWrapper.b6b126ee.js","@astrojs/vue/client.js":"client.43e7d937.js","/astro/hoisted.js?q=0":"hoisted.04e862dc.js","/astro/hoisted.js?q=1":"hoisted.ae1e3ed1.js","astro:scripts/before-hydration.js":"data:text/javascript;charset=utf-8,//[no before-hydration script]"},"assets":["/assets/132e38b5.b8c5eb9b.css","/assets/404-es-404-es-index-es-projects-index-projects.a2fa2d36.css","/assets/555451e4.91819e29.css","/assets/76b1e6c5.95da8820.css","/assets/e53c0aa8.16b05912.css","/assets/es-index-es-projects-index-projects.96e5f4b9.css","/assets/es-projects-projects.bfe0d018.css","/assets/es-index-index.1ba71134.css","/BannerWrapper.b6b126ee.js","/Jobs.5a02aba3.js","/client.43e7d937.js","/favicon.ico","/hoisted.04e862dc.js","/hoisted.ae1e3ed1.js","/logo.svg","/oops.png","/assets/Jobs.5e673064.css","/files/yuniel_acosta_cv.pdf","/chunks/drawer.06385d0d.js","/chunks/runtime-core.esm-bundler.c70e7365.js","/chunks/runtime-dom.esm-bundler.5dbf7308.js","/uploads/acosta-github-profile.png","/uploads/app.png","/uploads/auto-rename-tag.gif","/uploads/background.jpg","/uploads/bankiva.png","/uploads/better-comments-vs-code-extension-example.png","/uploads/bracket-pair-colorizer-code-snippet.png","/uploads/bracket-pair-colorizer-example.gif","/uploads/bracket-pair-colorizer-extension-example.png","/uploads/code-authorship-expanded-version.png","/uploads/commited.png","/uploads/cover-expenses-app.png","/uploads/cover-finis.png","/uploads/cover-meal-app.png","/uploads/deep_tabnine.0.gif","/uploads/deep_tabnine.0.mp4","/uploads/edit-readme.png","/uploads/example.png","/uploads/gridsome-portada.png","/uploads/import-cost-extension-example.png","/uploads/itunes_desktop_movil.png","/uploads/jsx.gif","/uploads/localhost.png","/uploads/markdown-all-in-one-extension.gif","/uploads/movie-app-reactjs.png","/uploads/nx.png","/uploads/pbv1.png","/uploads/portada-add-images-selector-flutter.png","/uploads/portada.jpg","/uploads/prettier-code-formatter-example.png","/uploads/prettier-formatted-code-example.gif","/uploads/react-example-final-space-api.png","/uploads/react-redux-graphql-extension.gif","/uploads/resultado.gif","/uploads/todos-react.png","/uploads/visual-studio-code.jpg","/uploads/vs-code-tabs-comparison.png","/uploads/vue-3-stackter.png","/uploads/vue3-typescript.png","/uploads/weather-app.png","/uploads/yacosta738.png","/uploads/yuniel-acosta.jpg","/assets/images/me.png","/uploads/configure-proxy-global-on-linux/more-data.png","/uploads/configure-proxy-global-on-linux/pacman.conf.png","/uploads/configure-proxy-global-on-linux/portada-proxy.jpg","/uploads/configure-proxy-global-on-linux/proxy-global.jpg","/uploads/configure-proxy-global-on-linux/proxy-schema.png","/uploads/configure-proxy-global-on-linux/windscribe-help.png"]}), {
	pageMap: pageMap,
	renderers: renderers
});
const _args = {};

const _exports = adapter.createExports(_manifest, _args);
const handler = _exports['handler'];

const _start = 'start';
if(_start in adapter) {
	adapter[_start](_manifest, _args);
}

export { handler };
